var searchIndex = new Map(JSON.parse('[["polars",{"t":"","n":["VERSION","apply_method_all_arrow_series","chunked_array","datatypes","df","docs","enable_string_cache","error","frame","functions","io","lazy","prelude","series","testing","time","using_string_cache","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","StructChunked","__clone_box","_apply_fields","_can_fast_explode","_sum_as_f64","add","","","","","","","","","","","","add_to","agg_list","","","","","","","","all","all_kleene","amortized_iter","","amortized_iter_with_name","","any","any_kleene","append","apply","","","","","","apply_amortized","apply_amortized_generic","","apply_amortized_same_type","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","","","","apply_kernel_cast","","","","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","","apply_to_slice","","","","","","apply_values","","","","","","apply_views","arg_sort","","","","","","arg_sort_multiple","","","","","arg_unique","","","","","arithmetic","as_array","as_binary","","as_list","as_ref","as_ref_dtype","as_string","","binary_zip_and_apply_amortized","bitand","","","bitor","","","bitxor","","","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","","cast_and_apply_in_place","cast_unchecked","","","","","","","cast_with_options","","","","","","","","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","","","","","","","","","equal_missing","","","","","","","","","","explode_and_offsets","","extend","field_by_name","fields_as_series","fill_null_with_values","","","filter","","","","first","first_non_null","float","fmt","","","","","","","for_each","for_each_amortized","","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_columns","from_iter","","","","","","","","","","","","from_iter_options","","","","","from_iter_trusted_length","","","","","","","","","","","","from_iter_values","","","","","from_iterator_par","from_par_iter","","","","","","","","from_par_iter_with_dtype","from_series","from_slice","","","","","from_slice_options","","","","","from_trusted_len_iter_rev","","from_vec","from_vec_validity","full","","","","","","","","full_null","","","","","","","","","full_null_like","full_null_with_dtype","","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","","get_distinct_count","get_fast_explode_list","get_flags","get_inner","","get_max_value","get_min_value","get_object","get_object_unchecked","get_row_encoded","get_row_encoded_array","get_unchecked","get_values_size","","","","group_tuples","","","","","","","","group_tuples_perfect","gt","","","","","","","","","gt_eq","","","","","","","","","has_nulls","head","init","","init_rand","inner_dtype","","interior_mut_metadata","into","","into_column","into_date","into_datetime","into_decimal","into_decimal_unchecked","into_duration","into_iter","","","","","","","","into_no_null_iter","into_series","","into_time","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","","","","","","","","lt_eq","","","","","","","","","max","","max_reduce","","","","mean","","median","","","median_reduce","","","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","","","","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","","","","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not","","not_equal","","","","","","","","","","not_equal_missing","","","","","","","","","","null_count","object","offsets","","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","","","quantile_reduce","","","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","reinterpret_signed","","","","","","","","","","","reinterpret_unsigned","","","","","","","","","","","rem","","","","remainder","rename","reverse","","","","","","","","rolling_map","rolling_map_float","sample_frac","sample_n","scatter","","","scatter_single","","","","scatter_with","","","","set","","","","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","","","","","","","","","shift_and_fill","","","","","","","","shrink_to_fit","slice","","sort","","","","","","sort_with","","","","","","split_at","","std","std_reduce","","","struct_fields","sub","","","","subtract","sum","","sum_reduce","","","tail","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_unchecked","","","","","","","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","","try_apply_amortized_same_type","try_apply_amortized_to_list","try_apply_fields","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","","","","","unnest","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","width","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_outer_validity","with_outer_validity_chunked","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_and_apply_amortized_same_type","zip_outer_validity","zip_with","","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","AnonymousListBuilder","AnonymousOwnedListBuilder","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_option","","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_value","","","","append_values_iter","","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","builder","clone","","","","clone_into","","","","clone_to_uninit","","","","default","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","drop","","","","","","","","","","","fast_explode","","","","","field","","","","","finish","","","","","","","","","","fixed_size_list","from","","","","","","","","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","get_list_builder","init","","","","","","","","","","","inner_array","","","","","into","","","","","","","","","","","list","new","","","","","","","","","","","new_with_values_type","shrink_to_fit","","","","to_owned","","","","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_null","append_opt_series","append_series","builder","fast_explode","field","finish","get_list_builder","inner_array","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","FixedSizeListIterNoNull","PolarsIterator","SomeIterator","borrow","","","borrow_mut","","","deref","","","deref_mut","","","drop","","","from","","","init","","","into","","","into_iter","","","new","","next","","","next_back","","","par","size_hint","","","try_from","","","try_into","","","type_id","","","vzip","","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Reinterpret","SlicedArray","Some","SortMultipleOptions","SortOptions","Zero","__clone_box","","","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","","","borrow_mut","","","cast","cast_unchecked","cast_with_options","clone","","","clone_into","","","clone_to_uninit","","","default","","deref","","","deref_mut","","","descending","","drop","","","eq","","","equal","equal_missing","equivalent","","","","","","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","","","from","","","","","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","","","init","","","into","","","is_first_distinct","is_last_distinct","lt","lt_eq","maintain_order","","max","mean","median","min","min_max","multithreaded","","n_unique","new","","new_from_index","not_equal","not_equal_missing","nulls_last","","offsets","quantile","reinterpret_signed","reinterpret_unsigned","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","slice_typed","slice_typed_unchecked","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","","","try_from","","","try_into","","","type_id","","","unique","var","vzip","","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","parse_fixed_offset","parse_time_zone","time_to_time64ns","validate_time_zone","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","","DurationChunked","DurationType","EMPTY","EMPTY_REF","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_unique","_iter_struct_av","_materialize_struct_av","_with_fast_unique","add","","add_to","","","","","","","","","","","","","","","","append","","append_null","append_value","arg_sort","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","array_leaf_dtype","as_borrowed","as_date_iter","as_datetime_iter","as_ref","","","","","","as_ref_dtype","as_slice","as_str","as_time_iter","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","build_local","call_categorical_merge_operation","cast","","cast_leaf","cast_time_unit","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","cmp","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","contains_categoricals","contains_objects","contains_views","create_enum_dtype","days","default","","","","","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","","","","","","drain_iter_and_finish","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","","","","","","encode_hex","encode_hex_upper","eq","","","","","","","","","","","eq_missing","equal","","","equal_missing","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","field","find","finish","","","fmt","","","","","","","","","","","","","","","","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_cats_and_rev_map_unchecked","from_duration","from_duration_options","from_global_indices_unchecked","from_iter","","","","","","","","from_naive_date","from_naive_date_options","from_naive_datetime","from_naive_datetime_options","from_naive_time","from_naive_time_options","from_static","from_str","from_string","from_string_to_enum","from_vec","from_zeroable_vec","full","full_null","","get","","get_any_value","","","","","","","get_any_value_unchecked","","","","","","","get_categories","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","","","get_optional","get_rev_map","get_shape","get_str","get_unchecked","","gt","","","gt_eq","","","hash","","","","","","","","hash_impl","hour","hours","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","into_iter","into_scalar","into_series","","","","","","into_static","into_string","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_empty","is_enum","","is_float","","is_global","is_integer","","is_known","is_list","is_local","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_str","last","leaf_dtype","len","","lit","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max_reduce","merge_dtypes","merge_map","microseconds","milliseconds","min_reduce","minute","minutes","mul","multiply","","","","","","","","","","","","","n_unique","name","","","nanosecond","nanoseconds","new","","","","","","","","","","","","","new_logical","newest","next","not_equal","","","not_equal_missing","","","null_count","oldest","parse_from_str_slice","","partial_cmp","","","physical","","precision","register_value","remainder","","","","","","","","","","","","","round","","same_src","scale","second","seconds","set_name","set_time_unit","","set_time_unit_and_time_zone","set_time_zone","size_hint","sort","sort_with","str_value","strftime","","","strict_cast","sub","subtract","","","","","","","","","","","","","time_unit","","time_zone","to_arrow","","","","to_arrow_field","to_ascii","to_enum","to_global","to_local","to_logical_type","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","to_string","","","","","","","tot_eq","truncate","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","uses_lexical_ordering","value","value_counts","value_unchecked","value_within_range","values_iter","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","with_validity_typed","write_char","write_fmt","write_str","zero_sum","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","eager","lazy","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","","borrow_mut","","","constants","context","context_trace","deref","","","","deref_mut","","","drop","","","feature_gated","fmt","","","","","from","","","","","","","","","","get_warning_function","init","","","into","","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","","try_from","","","try_into","","","try_to_compact_string","","type_id","","","vzip","","","wrap_msg","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","","columns","default","","deref","","","","","deref_mut","","","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_dynamic","group_by_stable","group_by_with_series","hash","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","into_struct","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","lazy","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rename","replace","replace_column","replace_or_add","reverse","rolling","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_df","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","unnest","upsample","upsample_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","arg_sort","array","as_materialized_series","","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","date","datetime","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","dtype","","duration","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","reshape_array","reshape_list","resize","reverse","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","struct_","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_from","","try_into","","type_id","","u16","u32","u64","u8","unique","unique_stable","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Date","Datetime","Duration","Float32","","Float64","","Int16","","Int32","","Int64","","Int8","","Null","","Row","String","","Struct","Time","UInt16","","UInt32","","UInt64","","UInt8","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllColumns","AllColumnsSingle","AllHorizontal","AllowedOptimizations","Always","Ambiguous","And","AnonymousFunction","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Any","","","","AnyHorizontal","AnyValue","Arc","ArgAgg","ArgUnique","ArgWhere","ArithmeticChunked","Array","","","","ArrayChunked","ArrayCollectIterExt","ArrayExpr","ArrayFromIter","ArrayFromIterDtype","ArrayNameSpace","ArrayRef","ArrowDataType","ArrowField","ArrowSchema","ArrowTimeUnit","AsBinary","AsList","AsOf","AsOfOptions","AsRefDataType","AsString","AsStruct","AsofJoin","AsofJoinBy","AsofStrategy","Auto","Average","BOOLEAN_RE","Backward","","BackwardFill","Base64Encode","BaseUtcOffset","BatchedCsvReader","BatchedParquetReader","Binary","","","","BinaryChunked","BinaryChunkedBuilder","BinaryExpr","","BinaryNameSpaceImpl","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryUdfOutputField","BinaryView","Boolean","","","","","BooleanChunked","BooleanChunkedBuilder","BooleanFunction","BooleanType","BorrowIdxItem","Both","","Bounds","BoundsIter","Brotli","BrotliLevel","C","CLUSTER_WITH_COLUMNS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","Cache","Cast","CastTimeUnit","CatIter","Categorical","","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalFunction","CategoricalMergeOperation","CategoricalNameSpace","CategoricalOrdering","CategoricalOwned","CategoricalType","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","ChunkAgg","ChunkAggSeries","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkId","ChunkJoinOptIds","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","ChunkedSet","Clip","ClosedInterval","ClosedWindow","Coalesce","CoalesceColumns","Column","","ColumnBinaryUdf","ColumnNotFound","Columns","","ColumnsUdf","Combine","CommentPrefix","CompatLevel","ComputeError","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","Context","ConvertTimeZone","Count","","CountMatches","Cross","CrossJoin","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","CsvWriter","CsvWriterOptions","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataFrame","DataFrameJoinOps","DataFrameOps","DataFrameScan","DataPoint","","DataType","","Date","","","","Date32","Date64","DateChunked","DateMethods","DateTime","DateType","Datetime","","","DatetimeArgs","DatetimeChunked","DatetimeFunction","DatetimeMethods","DatetimeOwned","DatetimeType","Day","Decimal","","","","Decimal256","DecimalChunked","DecimalType","Dense","DfTake","Dictionary","Diff","Distinct","Divide","DropNans","DropNulls","DslPlan","Dtype","DtypeColumn","Duplicate","Duration","","","","","","DurationArgs","DurationChunked","DurationMethods","DurationType","DynamicGroupOptions","EAGER","Earliest","EndsWith","Enum","","EnumOwned","Eq","EqValidity","Err","Exclude","Excluded","ExclusiveOr","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtContext","ExtendConstant","Extension","Extract","ExtractAll","ExtractGroups","FAST_PROJECTION","FILE_CACHING","FLOAT_RE","FLOAT_RE_DECIMAL","FalseT","Field","","FieldByIndex","FieldByName","FieldRef","FieldsMapper","FieldsNameMapper","FileMetadata","FileMetadataRef","FillNull","FillNullLimit","FillNullStrategy","FillNullWithStrategy","Filter","","Find","First","","","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","","Float16","Float32","","","","Float32Chunked","Float32Type","Float64","","","","Float64Chunked","Float64Type","Floor","FloorDivide","Fortran","Forward","","ForwardFill","Friday","FromData","FromDataBinary","FromDataUtf8","Full","FuncRet","Function","FunctionExpr","FunctionOutputField","Gather","GatherEvery","Generic","GetAnyValue","GetCategories","GetOutput","Global","GlobalRevMapMerger","GroupBy","","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","GroupsToRows","Gt","GtEq","Gzip","GzipLevel","HConcat","HStack","HasViews","HashMap","","Head","HexEncode","Higher","Hour","IDX_DTYPE","INTEGER_RE","IO","IR","IS_ARROW","Idx","","IdxArr","IdxCa","IdxItem","IdxSize","IdxType","Implode","","InProcessQuery","IndexColumn","IndexOrder","IndexToUsize","InitHashMaps","InitHashMaps2","Inner","InnerJoinIds","Int","","Int128Chunked","Int128Type","Int16","","","","Int16Chunked","Int16Type","Int32","","","","Int32Chunked","Int32Type","Int64","","","","Int64Chunked","Int64Type","Int8","","","","Int8Chunked","Int8Type","InterSect","Interpolate","InterpolateBy","InterpolationMethod","Interval","IntoColumn","IntoGroupsProxy","IntoLazy","IntoListNameSpace","IntoScalar","IntoSeries","IntoVec","InvalidOperation","IpcCompression","IpcReader","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","IsBetween","IsFinite","IsFirstDistinct","","IsIn","IsInfinite","IsLastDistinct","","IsLeapYear","IsNan","IsNested","IsNotNan","IsNotNull","IsNull","IsObject","IsStruct","IsoYear","Item","Join","","JoinArgs","JoinBuilder","JoinCoalesce","JoinDispatch","JoinOptions","JoinSpecific","JoinType","JoinValidation","Json","JsonEncode","JsonFormat","JsonLineReader","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","KeepColumns","KeepName","LZ4","Label","LargeBinary","LargeBinaryArray","LargeList","LargeListArray","LargeStringArray","LargeUtf8","Last","","","Latest","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","Left","","","","","","LeftJoinIds","Len","LenBytes","LenChars","Lexical","LhsNumOps","Linear","","List","","","","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListChunked","ListExpr","ListFromIter","ListNameSpace","ListNameSpaceExtension","ListNameSpaceImpl","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","ListType","Literal","","LiteralValue","Local","Logical","LogicalAnd","LogicalOr","LogicalType","LossyUtf8","Lower","LowerBound","Lowercase","Lt","LtEq","Lz4Raw","Lzo","ManyToMany","ManyToOne","Map","MapFunction","Max","","","","MaxBound","MaxHorizontal","Mean","","","MeanHorizontal","Median","","Microsecond","","Microseconds","Midpoint","Millennium","Millisecond","","Milliseconds","Min","","","","MinBound","MinHorizontal","Minus","Minute","Mode","Modulus","Monday","Month","Multi","MultipleFields","Multiply","NEW_STREAMING","NULL","NUnique","","Name","Named","NamedFrom","NamedFromOwned","NanMax","NanMin","Nanosecond","","Nanoseconds","Native","Nearest","","","Necessary","Negate","NestedType","Never","NewChunkedArray","NoData","NoNull","NonExistent","NonNumeric","None","","","","","Not","NotEq","NotEqValidity","Nth","Null","","","","","","","NullCount","NullValues","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","Ok","One","OneToMany","OneToOne","Operator","OptFlags","Or","Ordinal","OrdinalDay","OtherScalar","Out","OutOfBounds","Output","Over","OwnedBatchedCsvReader","OwnedObject","OwnedPhysical","POLARS_TEMP_DIR_BASE_PATH","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ParallelStrategy","ParquetCompression","ParquetOptions","ParquetReader","ParquetStatistics","ParquetWriteOptions","ParquetWriter","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","Plus","PolarsDataType","PolarsError","PolarsFloatType","PolarsIntegerType","PolarsIterator","PolarsNumericType","PolarsObject","PolarsResult","PolarsRound","PolarsTemporalGroupby","PolarsTruncate","PolarsType","PolarsUpsample","Pow","PowFunction","Prefiltered","PrefixFields","PrimitiveChunkedBuilder","Quantile","","","QuantileAggSeries","QuantileInterpolOptions","Quarter","QuoteStyle","ROW_ESTIMATE","Raise","","Random","","Range","","Rank","RankMethod","RankOptions","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","RevMapping","Reverse","","Right","","","","","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","RollingFnParams","RollingGroupOptions","RollingOptionsDynamicWindow","RollingOptionsFixedWindow","RollingQuantileParams","RollingSeries","RollingVarParams","Root","Round","","RoundSF","RoundSeries","RowGroupIterColumns","RowGroups","SIMPLIFY_EXPR","SLICE_PUSHDOWN","SQLInterface","SQLSyntax","STREAMING","Saturday","Scalar","","","Scan","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","Schema","SchemaExt","SchemaFieldNotFound","SchemaMismatch","SchemaNamesAndDtypes","SchemaRef","SearchSortedSide","Second","","Select","Selector","","SerReader","SerWriter","SerializeOptions","Series","","","SeriesJoin","SeriesMethods","SeriesOpsTime","SeriesRank","SeriesSealed","SeriesTrait","SetSortedFlag","ShapeMismatch","Shift","ShiftAndFill","ShrinkType","Single","Sink","Slice","","","","","SlicedArray","SlicedGroups","Snappy","Some","Sort","","SortBy","SortMultipleOptions","SortOptions","SpecialEq","Split","SplitExact","SplitN","SplitNChars","Sqrt","StartBy","StartsWith","StaticArray","StatisticsOptions","Std","","Str","StrCat","String","","","StringCacheHolder","StringCacheMismatch","StringChunked","StringChunkedBuilder","StringExpr","StringFunction","StringMethods","StringNameSpaceImpl","StringOwned","StringType","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","Struct","","","StructArray","StructChunked","StructExpr","StructFieldNotFound","StructFunction","StructNameSpace","StructOwned","StructType","Sub","SubPlan","SuffixFields","Sum","","SumHorizontal","Sunday","TYPE_COERCION","Tail","TakeChunked","TemporalExpr","TemporalFunction","TemporalMethods","Ternary","Then","Thursday","Time","","","","Time32","Time64","TimeChunked","TimeMethods","TimeStamp","TimeType","TimeUnit","TimeZone","Timestamp","Titlecase","ToDecimal","ToDummies","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","TrueDivOut","TrueDivPolarsType","TrueDivide","TrueT","Truncate","Tuesday","UInt16","","","","UInt16Chunked","UInt16Type","UInt32","","","","UInt32Chunked","UInt32Type","UInt64","","","","UInt64Chunked","UInt64Type","UInt8","","","","UInt8Chunked","UInt8Type","URL_ENCODE_CHAR_SET","UdfSchema","Uncompressed","Union","","UnionArgs","Unique","UniqueKeepStrategy","Unknown","","UnknownKind","UnpivotArgsDSL","UnpivotArgsIR","UpperBound","Uppercase","UserDefinedFunction","Utf8","","Utf8View","ValueCounts","ValueIterT","ValueT","Var","","","VarAggSeries","VecHash","Wednesday","Week","WeekDay","When","Wildcard","Window","","WindowBound","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZSTD","Zero","ZeroablePhysical","ZeroableValueT","Zstd","ZstdLevel","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_coalesce_full_join","_collect_post_opt","_create_left_df_from_slice","_full_join_from_series","_internal","_join_suffix_name","_rename_fields_impl","_split_at_unchecked","_sum_as_f64","","_take_chunked_unchecked","_take_chunked_unchecked_seq","_take_opt_chunked_unchecked","_take_opt_chunked_unchecked_seq","_to_dummies","_with_eager","_with_predicate","abs","","add","","","add_ms","add_ns","add_to","add_us","agg","agg_groups","aggregations","alias","all","","","all_horizontal","allocator","allow_parallel","","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","ambiguous","and","anonymous_scan","any","any_horizontal","append","append_null","","append_opt_series","append_option","append_series","append_value","apply","","","apply_binary","apply_children","apply_kernel","apply_kernel_cast","apply_many","apply_many_private","apply_multiple","apply_to_slice","apply_values","arange","arced","arg_max","","","","arg_min","","","","arg_sort","","","arg_sort_by","arg_sort_multiple","arg_unique","","","arg_where","args","","arity","arr","arr_from_iter","","","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","","","array","arrow_schema","as_any","","","","as_any_mut","","as_any_value","as_binary","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_fd","as_list","as_ptr","as_raw_fd","as_ref","","as_ref_dtype","as_series","as_single_ptr","as_slice","as_string","as_struct","as_time","assume_init","","avg","backward_fill","base64_decode","base64_encode","base_utc_offset","batch_size","batched","","","","","batched_borrowed","binary","","binary_expr","bitand","","","bitand_assign","bitor","","bitor_assign","bits","","bitxor","","","bitxor_assign","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","boxed","boxed_metadata","buffer","builder","cache","","","","call","","call_categorical_merge_operation","call_udf","","call_unchecked","cancel","cast","","","","","","cast_all","cast_unchecked","cast_with_options","","","cat","","cause","cbrt","ceil","","center","century","check_bound","checked_div","","checked_div_num","chunk_lengths","chunk_size","chunkedarray","chunks","chunks_mut","clip","","clip_max","","clip_min","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_inner","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","closed_window","","","cloud","cloud_options","","","","","cmp","","coalesce","","","","coalesce_columns","col","collect","collect_all","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","collect_concurrently","collect_schema","cols","column_order","column_orders","columns","columns_to_dummies","comment_prefix","compare","","complement","compression","","","compute_schema","concat","","concat_expr","concat_impl","","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","contains","","","","","contains_chunked","","contains_literal","convert_inner_type","convert_to_unsigned_index","count","","","count_matches","count_matches_many","count_rows","count_rows_from_slice","create_enum_dtype","create_left_df_chunked","created_by","cross_join","","cross_join_dfs","cum_count","","cum_fold_exprs","cum_max","","cum_min","","cum_prod","","cum_reduce_exprs","cum_sum","","cumulative_eval","data_page_size","datatypes","date_format","date_ranges","datetime","","datetime_format","datetime_range","datetime_ranges","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","day","","","","days","","","days_only","ddof","","decimal_comma","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","default_arrays","default_join_ids","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","descending","","","describe","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","describe_tree_format","description","deserialize","df","","diagonal","diff","","","difference","display","distinct_count","","div","","divide","dot","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_no_validate","drop_nulls","","","dst_offset","dt","","dtype","","","","","","","dtype_col","dtype_cols","dtype_overwrite","duration","empty","","encode_hex","encode_hex_upper","encoding","ends_with","ends_with_chunked","ensure_duration_matches_dtype","ensure_is_constant_duration","ensure_matching_schema","ensure_sorted_arg","eol_char","eq","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eq_missing","equal","equal_missing","equivalenteval","every","exact","exclude","exclude_dtype","execute","expand_paths","expand_paths_hive","expanded_from_single_directory","explain","explode","","","explode_and_offsets","expr","extend","extend_constant","extract","","extract_all","extract_all_many","extract_groups","fast_explode","fetch","","fetch_blocking","field","","field_by_index","field_by_name","field_by_names","fields","fields_to_cast","fill_nan","","fill_null","","","fill_null_with_strategy","fill_null_with_values","filter","","","","find","find_chunked","find_literal","finish","","","","","","","","","","","","","","","","","","","","finish_no_glob","","","finish_with_scan_ops","finishes_this_batch","first","","","","fixed_size_list","flatten","float_precision","float_scientific","float_sorted_arg_max","float_type","floor","","floor_div","floor_div_series","flush","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fmt_group_by_column","fmt_str","fn_params","","fold_exprs","force_parallel","","format","format_str","forward_fill","fromfrom_arrow_schema","from_bits","from_bits_retain","","from_bits_truncate","from_data_default","from_data_unchecked_default","","from_iter","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_options","from_iter_primitive_trusted_len","from_iter_trusted_length","","from_iter_utf8_trusted_len","from_iter_values","from_name","from_par_iter","","from_partitioned_ds","from_path","from_raw","from_raw_in","from_slice","from_slice_options","from_str","from_trusted_len_iter_rev","","from_type","from_vec","","from_zeroable_vec","full","","","","full_join","","full_null","","","fun","function_expr","function_with_options","gather","","gather_every","ge","get","","","","","get_any_value","","get_any_value_unchecked","","get_categories","get_current_optimizations","get_datatype","get_dtype","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_field","","","get_fields","get_fields_lens","get_glob_start_idx","get_metadata","","get_mut","get_mut_unchecked","get_object","get_object_chunked_unchecked","get_output","get_overlapping_bounds_iter","get_parse_options","get_reader_bytes","get_schema","get_unchecked","","","glob","","","group_by","group_by_dynamic","","group_by_stable","group_by_values","group_by_windows","group_tuples","gt","","","gt_eq","","has_header","has_nulls","hash","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","hash_join_inner","hash_join_outer","head","","","hex_decode","hex_encode","hive_options","","hor_str_concat","hour","","","","hours","","how","","idx","ignore_errors","impl_duration","impl_replace_time_zone","impl_replace_time_zone_fast","implode","in_nanoseconds_window","include_bom","","include_boundaries","include_file_paths","","include_header","","increment_strong_count","increment_strong_count_in","index","","index_cols","index_column","","indexes_to_usizes","infer_file_schema","infer_schema_len","","infer_schema_length","","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner","inner_array","inner_join","","inner_mut","input_fields","insert","int_range","int_ranges","interpol","interpolate","","","interpolate_by","","","intersection","intersects","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","","","into_data","into_inner","","into_iter","","","","","into_list_name_space","","into_raw","into_raw_with_allocator","into_reader_with_file_handle","into_scalar","into_series","","","into_vec","","is_all","is_arithmetic","is_asof","is_between","","is_cloud_url","is_comparison","is_constant_duration","is_empty","","","is_finished","is_finite","is_first_distinct","","","is_full","is_full_days","is_in","","is_infinite","is_last_distinct","","","is_leap_year","","","is_nan","","is_not_nan","is_not_null","","","is_null","","","","","is_null_idx","is_nullable","is_positive_idx_uncertain","is_read_vectored","is_scalar","is_series","is_sorted","is_tty","is_valid_bit_pattern","is_valid_join","is_write_vectored","is_zero","iso_year","","","iter","","","iter_fields","iter_names","iter_names_and_dtypes","join","","","","join_asof_by","join_builder","join_literal","join_many","join_nulls","","join_where","json_encode","keep","key_value_metadata","","label","last","","","","","lazy","","le","left_by","left_join","","left_on","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","len","","","","","limit","","line_terminator","list","lit","","","","","","logical_and","logical_or","logical_plan","","low_memory","","","","","lower_bound","lst_arg_max","lst_arg_min","lst_concat","lst_diff","lst_get","lst_join","lst_lengths","lst_max","lst_mean","lst_median","lst_min","lst_n_unique","lst_reverse","lst_shift","lst_slice","lst_sort","lst_std","lst_sum","lst_unique","lst_unique_stable","lst_var","lt","","","lt_eq","","maintain_order","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","map","","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_parse_options","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","materialize","materialize_empty_df","materialize_projection","max","","","","","","max_reduce","","max_row_group_height","max_value","","mean","","","","","","median","","","","","","","median_reduce","","memory_mapped","merge_dtypes","metadata","method","microsecond","microseconds","","millennium","milliseconds","","min","","","","","","min_max","min_periods","","","min_reduce","","min_value","","minute","","","","minutes","","missing_is_null","mode","","month","","","","months","months_only","mul","","","multiply","multithreaded","","n_chunks","n_rows","","","","","","","","n_threads","","n_unique","","","","","name","","","","","","nan_max","nan_min","nan_propagating_aggregate","nanosecond","","","nanoseconds","","","ne","needs_checks","neg","","negate","negate_bitwise","negative","negative_to_usize","neq","neq_missing","nested_sum_type","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_cyclic","new_empty","new_from_index","","new_from_str","new_in","new_int_range","new_multi","new_null","new_paths","","new_single","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_with_sources","","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","next","","next_batch","next_batches","","","nodes","nodes_owned","not","","","not_equal","not_equal_missing","nth","null","","","","null_count","","","","","null_values","nulls_last","","num_rows","","offset","","","offsets","on","","","optimize","options","or","ordinal","","ordinal_day","ordinal_year","otherwise","","output_schema","over","over_with_options","overwrite_schema","parallel","","","parse","parse_from_str_slice","","","parse_options","parsed_int","partial_cmp","","path","period","","pi","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","pow","predicate","prefix","prefix_fields","private_left_join_multiple_keys","prob","prod_reduce","product","profile","projection","propagate_nulls","provide","ptr_eq","quantile","","","","quantile_reduce","","quarter","","","queue","quote_char","","quote_style","raise_if_empty","rank","","read","read_buf","read_parallel","read_to_end","read_to_string","read_varint","read_vectored","rechunk","","","","","","","","reduce_exprs","reinterpret_signed","reinterpret_unsigned","rem","","remainder","remove","remove_bom","rename","","rename_fields","repeat","repeat_by","","replace","","","replace_all","replace_dtype","replace_literal","replace_literal_all","replace_or_default","replace_strict","","replace_time_zone","reshape","resolve_homedir","return_type","reverse","","","","","","right_by","right_on","rolling","","","rolling_map","","","rolling_map_float","rolling_max","","rolling_max_by","","rolling_mean","","rolling_mean_by","","rolling_median","rolling_median_by","rolling_min","","rolling_min_by","","rolling_quantile","","rolling_quantile_by","","rolling_std","","rolling_std_by","","rolling_sum","","rolling_sum_by","","rolling_var","","rolling_var_by","","round","","","round_ms","round_ns","round_sig_figs","","round_us","row_group_size","row_groups","row_index","","","","","","","rows_left","rows_right","same_type","","sample_frac","sample_n","sample_size","scan","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","scatter","scatter_single","scatter_with","schema","","","","","","","","","schema_descr","schema_inference","schema_only","schema_overwrite","schema_with_arenas","search_sorted","second","","","","seconds","","seek","select","select_seq","separator","","serialize_options","series","set","","set_cached_arena","set_low_memory","set_metadata","set_parallel","set_rechunk","","","","","set_sorted_flag","set_validity","shift","","","","","","shift_and_fill","","","should_coalesce","shrink_dtype","shrink_to_fit","","shuffle","sink_csv","sink_ipc","sink_json","sink_parquet","size_bytes","skip_rows","","","skip_rows_after_header","slice","","","","","","","slice_typed","","slice_typed_unchecked","","slice_unchecked","","sliced","sliced_unchecked","sort","","","","","","sort_by","sort_by_exprs","sort_with","","source","sources","","","split","split_at","split_at_boxed","split_at_boxed_unchecked","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","sqrt","start_by","starts_with","starts_with_chunked","statistics","std","","","","","","std_reduce","","store","str","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strategy","strftime","strict","strict_cast","strings","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","strong_count","struct_","sub","","","","sub_assign","subtract","suffix","","","","suffix_fields","sum","","","","","","sum_reduce","","super_type","swap_operands","symmetric_difference","sync_update","tail","","","","take","","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","","take_validity","ternary_expr","then","","time_format","time_ranges","time_unit","","time_zone","timestamp","to_alp","","to_alp_optimized","to_any_value","to_array","to_arrow","to_boxed","to_byte_slices","to_dot","to_dummies","","to_field","to_integer","to_list","to_lowercase","","to_opt","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","","","","","","to_supertype","to_supertypes","to_titlecase","to_uppercase","","to_writer","","toggle","tolerance","tolerance_str","top_k","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","true_div","true_div_scalar","true_div_scalar_lhs","truncate","truncate_impl","truncate_ms","","truncate_ns","","truncate_ragged_lines","truncate_us","","try_arr_from_iter","","","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_from_thrift","try_get_field","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into_reader_with_file_path","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_negative_to_usize","try_new","","","","","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_parse_dates","try_pin","try_pin_in","try_serialize","","","try_to_compact_string","","","","","","","","","","","","","try_unwrap","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","type_name","udf","union","unique","","","","","","unique_generic","unique_stable","","","","unique_stable_generic","unnest","unwrap","unwrap_or_clone","update","update_with_inference_result","upper_bound","upsample","upsample_stable","use_statistics","","","utf8","validate","validation","validity","","value","","value_counts","","value_name","","value_unchecked","values","values_iter","","var","","","","","","var_reduce","","variable_name","","vec_hash","vec_hash_combine","version","view","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weak_count","week","","","weekday","","","weeks","","weeks_only","weights","when","","","window_size","","","with","with_ambiguous","with_arrow_schema_projection","with_batch_size","","","with_cache","with_capacity","","with_chunk_size","","with_cloud_options","","with_cluster_with_columns","with_coalesce","with_column","with_columns","","","","","","with_columns_seq","with_comment_prefix","","with_compat_level","","with_compression","","","","with_context","with_data_page_size","with_date_format","with_datetime_format","with_day","with_days","with_decimal_comma","","with_dtype","with_dtype_overwrite","","with_encoding","","with_eol_char","","with_extension","with_fields","with_float_precision","with_float_scientific","with_fractional_seconds","with_glob","with_has_header","","with_hive_partition_columns","","with_hms","","with_hour","with_hours","with_ignore_errors","","","","","with_include_file_path","","with_include_file_paths","","with_infer_schema_length","","","with_json_format","","with_line_terminator","with_low_memory","","with_metadata","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_missing_is_null","","with_month","with_n_rows","","","","","","","","","with_n_threads","","with_nanoseconds","with_null_value","with_null_values","","with_optimizations","with_parse_options","with_path","","with_paths","with_predicate","","with_predicate_pushdown","with_projection","","","","","","with_projection_pushdown","with_quote_char","","","with_quote_style","with_raise_if_empty","","with_rechunk","","","","","with_row_estimate","with_row_group_size","with_row_index","","","","","","","","","","","with_same_dtype","with_sample_size","with_schema","","","","","with_schema_modify","with_schema_overwrite","","","","with_second","with_seconds","with_separator","","","with_simplify_expr","with_skip_rows","","with_skip_rows_after_header","","with_slice","with_slice_pushdown","with_sources","","","with_statistics","with_suffix","with_time_format","with_time_unit","with_time_zone","with_truncate_ragged_lines","","with_try_parse_dates","","with_type_coercion","with_validity","","with_validity_typed","","with_weeks","with_year","without_optimizations","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","write","write_df_to_file","","write_partitioned_dataset","write_varint","write_vectored","xor","year","","","","zip","zip_with","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","include_nulls","groups","rolling","dtype","high","low","error","","msg","","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","ArrayNameSpace","AsArray","array_arg_max","array_arg_min","array_get","array_join","array_max","array_median","array_min","array_n_unique","array_reverse","array_shift","array_sort","array_std","array_sum","array_unique","array_unique_stable","array_var","as_array","BinaryNameSpace","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","CategoricalNameSpace","DateMethods","DatetimeMethods","DurationMethods","RollingOptionsDynamicWindow","SeriesOpsTime","StringMethods","TimeMethods","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_time","closed_window","day","","days","fn_params","hour","","hours","is_leap_year","","iso_year","","microseconds","milliseconds","min_periods","minute","","minutes","month","","nanosecond","","nanoseconds","ordinal","","parse_from_str_slice","","","quarter","","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","second","","seconds","string","week","","weekday","window_size","year","","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_date","as_date_not_exact","as_datetime","as_datetime_not_exact","as_string","as_time","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","vzip","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","","","pattern","to_owned","try_from","try_from_with_unit","","","try_into","type_id","vzip","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eq","","equivalent","","","fmt","from","","from_str","from_untyped_config","hash","init","","into","","max_retries","options","to_owned","try_from","","try_into","","type_id","","vzip","","with_max_retries","Aws","Azure","CloudOptions","CloudType","File","Gcp","Hf","Http","max_retries","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","Any","AnyValue","Array","","","ArrayChunked","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","","Date32","Date64","DateChunked","DateType","Datetime","","DatetimeChunked","DatetimeOwned","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","","DurationChunked","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","FixedSizeListType","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","","","StructOwned","StructType","Time","","Time32","Time64","TimeChunked","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_ref_dtype","as_slice","call_categorical_merge_operation","cast","cast_with_options","categorical","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","create_enum_dtype","dtype","","finish","from_vec","from_zeroable_vec","full","full_null","get","get_any_value","get_any_value_unchecked","get_dtype","get_unchecked","","into_scalar","iter","last","make_categoricals_compatible","make_list_categoricals_compatible","merge_dtypes","name","new","","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","value","value_unchecked","values_iter","with_capacity","","with_validity_typed","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","call_categorical_merge_operation","finish","make_categoricals_compatible","make_list_categoricals_compatible","revmap","string_cache","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","impl_replace_time_zone","impl_replace_time_zone_fast","replace_time_zone","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","DateLikeNameSpace","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","nanosecond","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","PhysicalAggExpr","evaluate","root_name","AnonymousBuilder","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","is_empty","new","push","push_null","try_from","try_into","type_id","vzip","width","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","Abs","All","AllHorizontal","Any","AnyHorizontal","ArgUnique","ArgWhere","ArrayExpr","AsStruct","BackwardFill","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","GatherEvery","Generic","GetCategories","Head","HexEncode","Hour","Interpolate","InterpolateBy","IsBetween","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsoYear","JsonEncode","LenBytes","LenChars","ListExpr","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MultipleFields","Nanosecond","Negate","Not","NullCount","OrdinalDay","Pow","PowFunction","PrefixFields","Quarter","Random","Range","Rank","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Truncate","Unique","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","cat","pow","rolling","rolling_by","closed","ignore_nulls","","decimals","digits","has_max","has_min","limit","","method","n","name","normalize","offset","options","parallel","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","ignore_nulls","","inclusive","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","fmt","","from","hash","init","into","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","InterpolationMethod","Linear","Nearest","interpolate","interpolate_by","mode","ca_nan_agg","group_agg_nan_max_s","group_agg_nan_min_s","nan_max_s","nan_min_s","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Any","Left","Right","SearchSortedSide","binary_search_ca","lower_bound_chunks","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","timestamp","to_string","week","weekday","year","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","descending","","maintain_order","","multithreaded","","nulls_last","","slice_typed","slice_typed_unchecked","AsString","SplitNChars","StringNameSpaceImpl","as_string","base64_decode","base64_encode","concat","contains","contains_chunked","contains_literal","count_matches","count_matches_many","extract","extract_all","extract_all_many","extract_groups","find","find_chunked","find_literal","hex_decode","hex_encode","hor_str_concat","replace","replace_all","replace_literal","replace_literal_all","split","split_exact","split_exact_inclusive","split_helper","split_inclusive","split_to_struct","splitn","str_head","str_join","str_len_bytes","str_len_chars","str_reverse","str_slice","str_tail","strip_chars","","strip_chars_end","","strip_chars_start","","strip_prefix","","strip_suffix","","to_integer","to_lowercase","to_titlecase","to_uppercase","UserDefinedFunction","fun","input_fields","name","options","return_type","BinaryFromIter","Utf8FromIter","from_values_iter","","Ascending","BitRepr","ChunkCompare","Descending","IntoSeries","IsSorted","Item","Large","Not","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","append","arg_max","arg_min","arg_sort","arg_unique","arithmetic","array","array_ref","as_any","as_any_mut","as_list","as_mut","as_ref","","as_series","","as_single_ptr","","binary","binary_offset","bitand","bitor","bitxor","bool","borrow","","","","borrow_mut","","","","boxed_metadata","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","date","datetime","decimal","default","deref","","","","","deref_mut","","","","div","","","","drop","","","","drop_nulls","dtype","duration","eq","","equal","","","","equal_missing","","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","","fmt_list","from","","","","","","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","get_object","get_object_chunked_unchecked","get_unchecked","gt","","","","gt_eq","","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_column","into_frame","into_iter","into_series","","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","is_sorted_flag","iter","iter_chunks","len","","limit","list","lit","lt","","","","lt_eq","","","","max","max_reduce","mean","mean_reduce","median","median_reduce","min","min_reduce","mul","","","","n_chunks","","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","","not_equal_missing","","","","null","null_count","ops","phys_iter","product","quantile_reduce","rechunk","rem","","","rename","","reshape_array","reshape_list","reverse","","rolling_map","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","shuffle","size_hint","slice","","sort","sort_with","split_at","","std","std_reduce","str","str_value","strict_cast","struct_","sub","","","","sum","sum_reduce","","tail","take","take_chunked_unchecked","take_opt_chunked_unchecked","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","time","to_arrow","to_dummies","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_from","","","","","","","","try_into","","","","try_mul_owned","try_new","try_set_metadata","try_sub_owned","try_to_compact_string","type_id","","","","u16","u32","u64","u8","unique","unique_stable","unpack","var","var_reduce","vzip","","","","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","_struct_arithmetic","add","add_to","","checked","div","divide","","mul","multiply","","rem","remainder","","sub","subtract","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","checked_div_num","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip"],"q":[[0,"polars"],[17,"polars::chunked_array"],[859,"polars::chunked_array::arithmetic"],[887,"polars::chunked_array::builder"],[1148,"polars::chunked_array::builder::list"],[1165,"polars::chunked_array::cast"],[1194,"polars::chunked_array::collect"],[1208,"polars::chunked_array::float"],[1210,"polars::chunked_array::from_iterator_par"],[1214,"polars::chunked_array::iterator"],[1269,"polars::chunked_array::iterator::par"],[1271,"polars::chunked_array::metadata"],[1555,"polars::chunked_array::object"],[1632,"polars::chunked_array::object::builder"],[1655,"polars::chunked_array::object::registry"],[1683,"polars::chunked_array::ops"],[1889,"polars::chunked_array::ops::arity"],[1925,"polars::chunked_array::ops::float_sorted_arg_max"],[1927,"polars::chunked_array::ops::gather"],[1930,"polars::chunked_array::ops::search_sorted"],[1960,"polars::chunked_array::ops::sort"],[1967,"polars::chunked_array::ops::sort::arg_bottom_k"],[1968,"polars::chunked_array::ops::sort::arg_sort_multiple"],[1976,"polars::chunked_array::ops::sort::options"],[1989,"polars::chunked_array::temporal"],[1997,"polars::chunked_array::temporal::conversion"],[2000,"polars::datatypes"],[3462,"polars::datatypes::categorical"],[3479,"polars::datatypes::categorical::revmap"],[3485,"polars::datatypes::categorical::string_cache"],[3504,"polars::docs"],[3506,"polars::error"],[3598,"polars::error::PolarsError"],[3602,"polars::error::constants"],[3605,"polars::frame"],[3881,"polars::frame::column"],[4097,"polars::frame::explode"],[4126,"polars::frame::group_by"],[4365,"polars::frame::group_by::GroupByMethod"],[4366,"polars::frame::group_by::GroupsProxy"],[4368,"polars::frame::group_by::aggregations"],[4381,"polars::frame::group_by::expr"],[4384,"polars::frame::row"],[4494,"polars::functions"],[4496,"polars::prelude"],[9768,"polars::prelude::AggExpr"],[9775,"polars::prelude::BooleanFunction"],[9778,"polars::prelude::DslPlan"],[9829,"polars::prelude::Expr"],[9864,"polars::prelude::FunctionExpr"],[9886,"polars::prelude::GroupByMethod"],[9887,"polars::prelude::GroupsProxy"],[9889,"polars::prelude::LiteralValue"],[9892,"polars::prelude::PolarsError"],[9896,"polars::prelude::StringFunction"],[9910,"polars::prelude::TemporalFunction"],[9912,"polars::prelude::_internal"],[9933,"polars::prelude::aggregations"],[9946,"polars::prelude::arity"],[9982,"polars::prelude::array"],[10001,"polars::prelude::binary"],[10018,"polars::prelude::buffer"],[10092,"polars::prelude::buffer::Buffer"],[10095,"polars::prelude::cat"],[10096,"polars::prelude::chunkedarray"],[10162,"polars::prelude::chunkedarray::string"],[10201,"polars::prelude::chunkedarray::string::infer"],[10232,"polars::prelude::cloud"],[10282,"polars::prelude::cloud::options"],[10291,"polars::prelude::compression"],[10309,"polars::prelude::datatypes"],[10585,"polars::prelude::datatypes::categorical"],[10602,"polars::prelude::datatypes::categorical::revmap"],[10608,"polars::prelude::datatypes::categorical::string_cache"],[10612,"polars::prelude::datetime"],[10615,"polars::prelude::default_arrays"],[10621,"polars::prelude::dt"],[10673,"polars::prelude::expr"],[10676,"polars::prelude::fixed_size_list"],[10696,"polars::prelude::float_sorted_arg_max"],[10698,"polars::prelude::function_expr"],[10871,"polars::prelude::function_expr::BooleanFunction"],[10874,"polars::prelude::function_expr::FunctionExpr"],[10896,"polars::prelude::function_expr::StringFunction"],[10910,"polars::prelude::function_expr::TemporalFunction"],[10912,"polars::prelude::function_expr::cat"],[10914,"polars::prelude::function_expr::pow"],[10918,"polars::prelude::function_expr::rolling"],[10949,"polars::prelude::function_expr::rolling_by"],[10980,"polars::prelude::gather"],[10983,"polars::prelude::interpolate"],[10987,"polars::prelude::interpolate_by"],[10988,"polars::prelude::mode"],[10989,"polars::prelude::nan_propagating_aggregate"],[10994,"polars::prelude::null"],[11025,"polars::prelude::schema_inference"],[11052,"polars::prelude::search_sorted"],[11058,"polars::prelude::series"],[11080,"polars::prelude::sort"],[11087,"polars::prelude::sort::arg_bottom_k"],[11088,"polars::prelude::sort::arg_sort_multiple"],[11096,"polars::prelude::sort::options"],[11109,"polars::prelude::strings"],[11163,"polars::prelude::udf"],[11169,"polars::prelude::utf8"],[11173,"polars::series"],[11613,"polars::series::amortized_iter"],[11637,"polars::series::arithmetic"],[11658,"polars::series::arithmetic::checked"],[11664,"polars::series::ops"],[11691,"dyn_clone::sealed"],[11692,"polars_core::datatypes"],[11693,"polars_core::chunked_array"],[11694,"polars_error"],[11695,"core::result"],[11696,"polars_core::series"],[11697,"core::ops::function"],[11698,"num_traits"],[11699,"num_traits::cast"],[11700,"polars_core::series::arithmetic::borrowed"],[11701,"polars_core::frame::group_by::proxy"],[11702,"polars_core::chunked_array::object"],[11703,"core::option"],[11704,"polars_arrow::array"],[11705,"alloc::boxed"],[11706,"core::iter::traits::iterator"],[11707,"polars_core::chunked_array::list::iterator"],[11708,"polars_utils::pl_str"],[11709,"core::marker"],[11710,"alloc::borrow"],[11711,"polars_core::series::amortized_iter"],[11712,"alloc::string"],[11713,"polars_core::datatypes::dtype"],[11714,"polars_arrow::array::binview::view"],[11715,"polars_core::chunked_array::ops::sort::options"],[11716,"polars_core::frame::column"],[11717,"polars_core::chunked_array::metadata::md_trait"],[11718,"polars_core::chunked_array::cast"],[11719,"polars_core::series::arithmetic::borrowed::checked"],[11720,"core::slice::iter"],[11721,"core::iter::adapters::map"],[11722,"alloc::vec"],[11723,"compact_str"],[11724,"polars_core::chunked_array::metadata"],[11725,"core::iter::traits::double_ended"],[11726,"polars_arrow::offset"],[11727,"core::fmt"],[11728,"core::iter::traits::collect"],[11729,"polars_arrow::bitmap::immutable"],[11730,"core::convert"],[11731,"polars_core::chunked_array::from_iterator"],[11732,"core::borrow"],[11733,"polars_arrow::pushable"],[11734,"rayon::iter"],[11735,"core::iter::traits::exact_size"],[11736,"core::clone"],[11737,"polars_arrow::trusted_len"],[11738,"polars_core::datatypes::any_value"],[11739,"polars_arrow::array::binary"],[11740,"std::sync::rwlock"],[11741,"polars_core::chunked_array::logical"],[11742,"polars_core::datatypes::time_unit"],[11743,"polars_core::series::series_trait"],[11744,"polars_core::chunked_array::iterator"],[11745,"polars_core::scalar"],[11746,"polars_core::chunked_array::metadata::guard"],[11747,"polars_core::chunked_array::metadata::interior_mutable"],[11748,"alloc::sync"],[11749,"core::ops::range"],[11750,"polars_core::datatypes::field"],[11751,"polars_arrow::legacy::kernels::rolling::no_nulls"],[11752,"polars_core::chunked_array::ops::rolling_window"],[11753,"polars_ops::chunked_array::scatter"],[11754,"polars_utils::index"],[11755,"ahash::random_state"],[11756,"polars_utils::hashing"],[11757,"ndarray"],[11758,"ndarray::dimension::dim"],[11759,"ndarray::data_repr"],[11760,"either"],[11761,"core::any"],[11762,"polars_core::frame"],[11763,"polars_core::chunked_array::arithmetic::numeric"],[11764,"polars_core::chunked_array::builder::list::anonymous"],[11765,"polars_core::chunked_array::builder::list::boolean"],[11766,"polars_core::chunked_array::builder::list::primitive"],[11767,"polars_core::chunked_array::builder::list"],[11768,"polars_core::chunked_array::builder"],[11769,"polars_core::chunked_array::builder::list::binary"],[11770,"polars_core::chunked_array::builder::list::null"],[11771,"polars_core::chunked_array::builder::string"],[11772,"polars_arrow::array::binview"],[11773,"polars_core::chunked_array::builder::boolean"],[11774,"polars_core::chunked_array::builder::null"],[11775,"polars_core::chunked_array::builder::primitive"],[11776,"polars_core::series::implementations::null"],[11777,"core::hash"],[11778,"polars_core::chunked_array::collect"],[11779,"polars_core::chunked_array::float"],[11780,"polars_core::chunked_array::from_iterator_par"],[11781,"polars_arrow::array::boolean"],[11782,"polars_arrow::array::fixed_size_list"],[11783,"polars_core::chunked_array::metadata::env"],[11784,"polars_core::chunked_array::metadata::collect"],[11785,"bitflags::iter"],[11786,"std::fs"],[11787,"std::sync::mutex"],[11788,"polars_arrow::datatypes"],[11789,"polars_arrow::bitmap::utils::iterator"],[11790,"polars_arrow::bitmap::utils::zip_validity"],[11791,"polars_core::chunked_array::object::builder"],[11792,"polars_core::chunked_array::object::registry"],[11793,"polars_core::chunked_array::ops"],[11794,"polars_arrow::legacy::array::slice"],[11795,"polars_core::chunked_array::ops::arity"],[11796,"polars_arrow::array::static_array"],[11797,"core::error"],[11798,"polars_arrow::array::primitive"],[11799,"polars_core::chunked_array::ops::search_sorted"],[11800,"polars_core::utils"],[11801,"polars_row::row"],[11802,"chrono::naive::datetime"],[11803,"chrono_tz::timezones"],[11804,"chrono::naive::time"],[11805,"polars_core::chunked_array::logical::categorical"],[11806,"polars_core::chunked_array::logical::categorical::builder"],[11807,"polars_arrow::array::static_array_collect"],[11808,"std::path"],[11809,"std::ffi::os_str"],[11810,"bytemuck::zeroable"],[11811,"polars_core::chunked_array::logical::categorical::revmap"],[11812,"polars_core::chunked_array::logical::categorical::merge"],[11813,"core::cmp"],[11814,"polars_arrow::datatypes::physical_type"],[11815,"polars_arrow::types"],[11816,"chrono::time_delta"],[11817,"chrono::naive::date"],[11818,"polars_core::datatypes::into_scalar"],[11819,"polars_plan::dsl::expr"],[11820,"polars_core::chunked_array::logical::categorical::string_cache"],[11821,"polars_error::warning"],[11822,"alloc::collections"],[11823,"simdutf8::basic"],[11824,"regex::error"],[11825,"std::io::error"],[11826,"polars_parquet::parquet::error"],[11827,"planus::errors"],[11828,"polars_schema::schema"],[11829,"hashbrown::set"],[11830,"polars_core::frame::row"],[11831,"polars_core::frame::group_by"],[11832,"polars_time::group_by::dynamic"],[11833,"polars_lazy::frame"],[11834,"polars_core::series::from"],[11835,"polars_core::chunked_array::ndarray"],[11836,"polars_arrow::record_batch"],[11837,"polars_arrow::array::struct_"],[11838,"polars_time::windows::duration"],[11839,"polars_core::frame::explode"],[11840,"polars_utils::idx_vec"],[11841,"rayon::iter::plumbing"],[11842,"polars_plan::plans::aexpr"],[11843,"polars_core::frame::group_by::into_groups"],[11844,"core::iter::adapters::copied"],[11845,"core::iter::adapters::zip"],[11846,"polars_arrow::legacy::kernels::rolling"],[11847,"polars_utils::float"],[11848,"polars_arrow::types::native"],[11849,"polars_core::frame::group_by::aggregations::agg_list"],[11850,"polars_core::frame::group_by::aggregations"],[11851,"polars_core::frame::group_by::expr"],[11852,"polars_core::frame::row::av_buffer"],[11853,"polars_utils::arena"],[11854,"polars_plan::plans::ir"],[11855,"polars_ops::frame::join::hash_join"],[11856,"polars_ops::frame::join::args"],[11857,"polars_plan::dsl::struct_"],[11858,"polars_ops::chunked_array::gather::chunked"],[11859,"polars_ops::frame"],[11860,"polars_io::csv::read::reader"],[11861,"polars_io::predicates"],[11862,"polars_io::mmap"],[11863,"polars_plan::dsl::selector"],[11864,"polars_plan::frame::opt_state"],[11865,"core::alloc"],[11866,"polars_plan::plans::anonymous_scan"],[11867,"polars_lazy::scan::anonymous_scan"],[11868,"polars_plan::dsl::expr_dyn_fn"],[11869,"polars_plan::plans::visitor"],[11870,"polars_plan::dsl::function_expr"],[11871,"polars_ops::series::ops::arg_min_max"],[11872,"polars_plan::dsl::array"],[11873,"polars_plan::dsl::list"],[11874,"polars_plan::dsl::function_expr::schema"],[11875,"polars_io::ipc::ipc_stream"],[11876,"std::io"],[11877,"polars_ops::chunked_array::binary"],[11878,"polars_time::chunkedarray::string"],[11879,"std::os::fd::owned"],[11880,"polars_ops::chunked_array::list"],[11881,"std::os::fd::raw"],[11882,"polars_ops::series::ops"],[11883,"polars_ops::chunked_array::strings"],[11884,"core::mem::maybe_uninit"],[11885,"polars_ops::chunked_array::strings::namespace"],[11886,"polars_io::csv::read::read_impl::batched"],[11887,"polars_io::csv::write::writer"],[11888,"polars_io::ipc::write"],[11889,"polars_io::parquet::read::reader"],[11890,"polars_io::parquet::read::read_impl"],[11891,"polars_io::parquet::write::writer"],[11892,"polars_io::parquet::write::batched_writer"],[11893,"polars_plan::dsl::binary"],[11894,"polars_plan::dsl::udf"],[11895,"polars_lazy::frame::exitable"],[11896,"hashbrown::map"],[11897,"polars_plan::dsl::cat"],[11898,"polars_ops::series::ops::round"],[11899,"polars_time::series"],[11900,"polars_lazy::scan::csv"],[11901,"polars_lazy::scan::ipc"],[11902,"polars_lazy::scan::ndjson"],[11903,"polars_lazy::scan::parquet"],[11904,"polars_time::chunkedarray::rolling_window"],[11905,"polars_time::windows::bounds"],[11906,"polars_time::windows::group_by"],[11907,"polars_time::windows::window"],[11908,"polars_io::csv::read::options"],[11909,"polars_io::csv::write::options"],[11910,"polars_io::ipc::ipc_file"],[11911,"polars_ops::frame::join::asof"],[11912,"polars_io::json"],[11913,"polars_ops::series::ops::interpolation::interpolate"],[11914,"polars_ops::series::ops::is_between"],[11915,"polars_io::parquet::read::options"],[11916,"polars_ops::series::ops::rank"],[11917,"polars_io::parquet::write::options"],[11918,"polars_plan::plans"],[11919,"polars_plan::dsl::arity"],[11920,"polars_plan::dsl::function_expr::boolean"],[11921,"polars_plan::dsl::function_expr::cat"],[11922,"polars_plan::dsl::function_expr::datetime"],[11923,"polars_plan::dsl::function_expr::pow"],[11924,"polars_plan::dsl::function_expr::strings"],[11925,"polars_plan::dsl::function_expr::struct_"],[11926,"polars_parquet::arrow::write"],[11927,"polars_plan::dsl::functions::temporal"],[11928,"polars_plan::dsl::options"],[11929,"polars_parquet::parquet::metadata::file_metadata"],[11930,"polars_plan::plans::lit"],[11931,"polars_plan::plans::options"],[11932,"polars_arrow::legacy::kernels::time"],[11933,"polars_lazy::scan::file_list_reader"],[11934,"polars_io::cloud::options"],[11935,"polars_parquet::parquet::metadata::column_order"],[11936,"polars_ops::chunked_array::binary::namespace"],[11937,"polars_io::ndjson::core"],[11938,"polars_ops::frame::join::cross_join"],[11939,"polars_lazy::dsl::eval"],[11940,"polars_time::chunkedarray::date"],[11941,"polars_time::chunkedarray::datetime"],[11942,"polars_time::chunkedarray::duration"],[11943,"core::default"],[11944,"core::ffi::c_str"],[11945,"polars_parquet::parquet::metadata::column_chunk_metadata"],[11946,"polars_core::series::ops"],[11947,"polars_plan::dsl::dt"],[11948,"polars_ops::series::ops::various"],[11949,"polars_arrow::scalar"],[11950,"polars_lazy::dsl::list"],[11951,"crossterm::command"],[11952,"polars_io::shared"],[11953,"polars_plan::plans::apply"],[11954,"polars_plan::dsl::function_expr::binary"],[11955,"polars_plan::dsl::function_expr::list"],[11956,"polars_plan::dsl::function_expr::array"],[11957,"polars_plan::dsl::function_expr::range"],[11958,"polars_parquet::arrow::read::statistics"],[11959,"alloc::ffi::c_str"],[11960,"polars_arrow::array::growable::structure"],[11961,"polars_arrow::array::struct_::mutable"],[11962,"polars_core::schema"],[11963,"polars_arrow::legacy::array::default_arrays"],[11964,"polars_arrow::buffer::immutable"],[11965,"polars_arrow::array::list"],[11966,"polars_core::named_from"],[11967,"polars_ops::frame::join"],[11968,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[11969,"polars_time::chunkedarray::time"],[11970,"core::num::nonzero"],[11971,"polars_arrow::array::struct_::iterator"],[11972,"polars_ops::frame::join::asof::groups"],[11973,"polars_ops::chunked_array::list::namespace"],[11974,"polars_plan::dsl::name"],[11975,"parquet_format_safe::parquet_format"],[11976,"polars_core::utils::supertype"],[11977,"polars_io::options"],[11978,"polars_core::chunked_array::ops::aggregate"],[11979,"polars_core::chunked_array::ops::aggregate::quantile"],[11980,"polars_arrow::legacy::index"],[11981,"polars_plan::plans::ir::scan_sources"],[11982,"polars_ops::chunked_array::strings::split"],[11983,"core::pin"],[11984,"core::io::borrowed_buf"],[11985,"parquet_format_safe::thrift::varint::decode"],[11986,"polars_time::chunkedarray::rolling_window::dispatch"],[11987,"polars_time::round"],[11988,"polars_parquet::parquet::metadata::schema_descriptor"],[11989,"polars_core::chunked_array::ops::aggregate::var"],[11990,"polars_plan::dsl::string"],[11991,"polars_ops::series::ops::to_dummies"],[11992,"polars_time::truncate"],[11993,"polars_io::csv::read::schema_inference"],[11994,"polars_time::upsample"],[11995,"polars_core::hashing::vector_hasher"],[11996,"alloc::collections::btree::map"],[11997,"polars_parquet::parquet::metadata::row_metadata"],[11998,"polars_utils::mmap::private"],[11999,"polars_parquet::arrow::read::deserialize::utils::filter"],[12000,"polars_ops::chunked_array::array::namespace"],[12001,"polars_ops::chunked_array::array"],[12002,"polars_io::csv::read::buffer"],[12003,"polars_time::chunkedarray::string::patterns"],[12004,"polars_time::chunkedarray::string::infer"],[12005,"polars_io::utils::compression"],[12006,"polars_arrow::legacy::array::fixed_size_list"],[12007,"polars_plan::dsl::function_expr::rolling"],[12008,"polars_plan::dsl::function_expr::rolling_by"],[12009,"polars_arrow::legacy::array::null"],[12010,"polars_arrow::bitmap::mutable"],[12011,"polars_arrow::array::utf8"],[12012,"polars_core::series::iterator"],[12013,"alloc::rc"],[12014,"polars_core"],[12015,"polars_core::chunked_array::struct_"],[12016,"polars_core::chunked_array::iterator::par"],[12017,"polars_core::chunked_array::object::extension"],[12018,"polars_core::chunked_array::ops::float_sorted_arg_max"],[12019,"polars_core::chunked_array::ops::gather"],[12020,"polars_core::chunked_array::ops::sort"],[12021,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[12022,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[12023,"polars_core::chunked_array::temporal"],[12024,"polars_core::chunked_array::temporal::conversion"],[12025,"polars_core::chunked_array::temporal::time"],[12026,"polars_core::chunked_array::logical::date"],[12027,"polars_core::chunked_array::logical::datetime"],[12028,"polars_core::chunked_array::logical::decimal"],[12029,"polars_core::chunked_array::logical::duration"],[12030,"polars_core::datatypes::aliases"],[12031,"polars_utils::aliases"],[12032,"polars_core::chunked_array::logical::time"],[12033,"polars_error::constants"],[12034,"polars_core::functions"],[12035,"polars_core::frame::horizontal"],[12036,"polars_arrow::datatypes::schema"],[12037,"polars_io::utils::other"],[12038,"polars_io::parquet::metadata"],[12039,"polars_arrow::legacy::prelude"],[12040,"polars_arrow::legacy::array"],[12041,"polars_io::path_utils"],[12042,"polars_ops::series::ops::rolling"],[12043,"polars_parquet::parquet::write"],[12044,"polars_io::utils"],[12045,"polars_ops::frame::join::general"],[12046,"polars_io::parquet::read"],[12047,"polars_ops::series::ops::abs"],[12048,"polars_plan::dsl::functions::selectors"],[12049,"polars_plan::dsl::functions::horizontal"],[12050,"polars_plan::dsl::functions::arity"],[12051,"polars_plan::dsl"],[12052,"polars_plan::dsl::functions::range"],[12053,"polars_plan::dsl::functions::index"],[12054,"polars_ops::chunked_array"],[12055,"polars_plan::dsl::functions::coerce"],[12056,"polars_plan::dsl::functions::syntactic_sugar"],[12057,"polars_time::base_utc_offset"],[12058,"polars_io::csv::read"],[12059,"polars_time"],[12060,"polars_ops::series::ops::clip"],[12061,"polars_io"],[12062,"polars_ops::series::ops::horizontal"],[12063,"polars_lazy::dsl::functions"],[12064,"polars_plan::dsl::functions::concat"],[12065,"polars_ops::series::ops::index"],[12066,"polars_io::csv::read::parser"],[12067,"polars_ops::series::ops::cum_agg"],[12068,"polars_ops::series::ops::diff"],[12069,"polars_time::dst_offset"],[12070,"polars_ops::series::ops::floor_divide"],[12071,"polars_ops::chunked_array::strings::concat"],[12072,"polars_ops::series::ops::duration"],[12073,"polars_ops::chunked_array::datetime::replace_time_zone"],[12074,"polars_time::date_range"],[12075,"polars_ops::series::ops::interpolation"],[12076,"polars_ops::series::ops::interpolation::interpolate_by"],[12077,"polars_ops::series::ops::is_first_distinct"],[12078,"polars_ops::series::ops::is_in"],[12079,"polars_ops::series::ops::is_last_distinct"],[12080,"polars_io::parquet::read::utils"],[12081,"polars_ops::series::ops::negate"],[12082,"polars_ops::series::ops::not"],[12083,"polars_ops::series::ops::int_range"],[12084,"polars_plan::dsl::functions::repeat"],[12085,"polars_ops::chunked_array::repeat_by"],[12086,"polars_ops::series::ops::replace"],[12087,"polars_ops::chunked_array::strings::strip"],[12088,"polars_io::partition"],[12089,"polars_io::parquet::read::predicates"],[12090,"polars_io::parquet::read::mmap"],[12091,"polars_time::chunkedarray"],[12092,"polars_io::cloud"],[12093,"polars_ops::chunked_array::mode"],[12094,"polars_ops::chunked_array::nan_propagating_aggregate"],[12095,"polars_arrow::legacy::array::utf8"]],"i":"````````````````````Mf000`l000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00000000000000000001010``000000000000000000000000000`0`000000010100000001000000000000000000000000000000000000`0000000000001000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000010000010000000000000000000000000000000`0000000000000000000000000000000000000000000000000`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`00`00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`0000000000000000000000000010010010000000000000000000000000000000000000000000000100000000000000000000000000000000000000000000000000`ABj00000000000000000000000000````````````````ACnADbADdADfABl0ABnAC`ACb0ACdACf54AChACj5ACl5<;:98845<3487216055213<;9218721605<;:98721605<;:95<;:9<;:9<;:9878721605<;:98721605<;:98721605<;:9216542165438704<<;:9`8721605<;:9ADj000`9832716=<;:327659832716=<;:`9832716=<;:64<;:=<;:9832716=<;:9832716=<;:9832716=<;:9832716=<;:````````5556555`5`Fn000000000000000000000000000``ADnAE`1000101000`AEb``AEdAEf````AEjAEnAF`21021021021021021021021021210210`210210210210210``AFnKhGn0Jn`3Ml22````````42110Mn4AFb43434343434344334343215604321560431150431504315043AFd54542654332671543267154541Fl777437826565265265777777726666655555437826565665565656577507777354378265656565437826565657657777656522077770777365365657757777775776565653372656543782654378265334378265653437826513````AGb00000K`1111`111111110011111111111111111111``111111101111111110Cd2222222222`AGn000000000000000000000````AH`00AHb0000000```00`0`10000AIb```````````````````````````0AHh``AId22222DKj3``0``3F`Fh5AHd5AHj066AHl0AHn`549549AI`0065:65:65:6565:65:6565:65:88666555AIf0`AIhAIj`98=9988=`AIlAIn`AJ`0>><;AIb=<0=<0AJbAJdAId0F`FhAHd0AJf1132?32AJh5543>1AJj0AJlAJnAK`0`0AKbAKdAKf0`AHl0AKh;AKjAKlAKnF`FhAIb210210210AHn7321323232232232`AL``ALjALfALb`````````````````````````````````````ALn00`0`000000000000000000`00000`````>>````````````87878787>>```````````AOn`JjElDl```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0320``Dd04341```11`51431``431```AOd`3DKlDKn``````8``764``764``764``764``4`555444AOj875``3``5B@dLd1010Al;:8`;:`;``939```````````BAb`3`=<;`<`<;9<`<;99````90`<;9``<;9``<;9``<;9``9;9`99ALd0;09L`69AMjAOlJjAOnElB@`Oj;ObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dAMjJj01L`1AhCfLhObNnFbNlNhNdKlLbEhEfAnBhBdAMlAMj110AMn0AN`0ElJjL`0Dd0003OjANfALd3433:BBb5DL`DjAhjCfLhCbB@jAOjAOdAMjAOlJjAOnElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dDdAMlBBbL`DL`DjAhjCfLhCbB@jAOjAOdAMjAOlJjAOnElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dElAOd`AOhJj3L`0200000AMj`LhObNnFbNlNhNdKlLbEhEfDd=AOjAOd>AOlJjAOnElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dDdL`AOjAOdAMjAOlJjAOnElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dDdL`AOjAOdAMjAOlJjAOnElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dDdOjB@h0002El00`L`4B@jAOjAOdJjAOn6;99AMlBBb77DL`DjAhjCfLhCb=<;AMjAOl<;ElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dDdAMlBBbL`0DL`DjAhjCfLhCbB@jAOjAOdAMjAOlJjAOnElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dL`AhCfLhObNnFbNlNhNdKlLbEhEfAMlDd1BBbL`DL`DjAhjCfLhCbB@jAOjAOdAMjAOlJjAOnElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dAOhL`0000AMjJjOj0Dd00AOj3AOnEl0B@`5Ld<;7888888555777333222111666000<<<;;;9AOdAOfAMlB@j9983AOl<<8776;55AGdB@d<<<<<4BBbL`00DL`DjAhjCfLhCb<AOjAOdAMj>Jj00000AOnEl000B@`Oj00Ld0ObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGd00B@dElAMjL`01Dd00000001111110002ALd00030AOd33333AOh544444051DlAhjCfLhCbObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAOdAMjElJjBAnALd444444Dd3AOn5OjLdAGdB@d8L`09:6AMlBBb2DL`DjAhjCfLhCbB@jAOjAOdAMjAOlJjAOnElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dEl2DdAMlBBbL`DL`DjAhjCfLhCbB@jAOjAOdAMjAOlJjAOnElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dL`AMjBBbBB`333332JjDdEl00200055020AOd31110131931313111131111319ALd702173777777``2AOn8`B@j::9:::AhCfLhObNnFbNlNhNdKlLbEhEfAMj0Oj0L`0DKlDKnAMl33333333B@j54B@`BBb8888888166DdJjLd9;96AhCfLhObNnFbNlNhNdKlLbEhEfL`0AOd111Oj2222BBbAMj0Jj55505AhCfLhObNnFbNlNhNdKlLbEhEfL`00?ElOjLd20AMj00AGdDd6AOjAOd4AOlJjAOn:B@`:9ObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dEl2L`Dd111Jj3Ld133AMn0AN`0B@h00045AMlBBb8DL`DjAhjCfLhCbB@jAOjAOdAMjAOlJjAOnElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dDdAMlBBbL`DL`DjAhjCfLhCbB@jAOjAOdAMjAOlJjAOnElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dJjElDd21Ld1AMlBBbL`DL`DjAhjCfLhCbB@jAOjAOdAMjAOlJjAOnElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@d1AMj0ALd10El1DdAMlBBbL`DL`DjAhjCfLhCbB@jAOjAOdAMjAOlJjAOnElB@`OjLdObNnFbNlNhNdKlLbEhEfKnLnAnBhFdBdLjLfLlB@bAGdB@dDKlDKnALdDd00Jj`````AOd`AOj10``AOf`````2121``BBn0000`00`0000000`0``BCbn000DLb`112101```11111112BC`302302`223002302302`300223002222222`302302`0``````02302302023023022DLdDLf10```BDh`0BDf11``0``01AAn0000000000000000BElBEn3421034222342342342`224210342103421034222222222242224442`2222223422103422222222222222222`222242222222222222103422103421022222222222222222222210222222222222222`2222222222222222221022222222222222222342222221034222221034221034222222222210342222222``Ff`00BGb11111111111111111110110111111111111010101010111010101111101011111101101111111111111110111001111111111101111111010BDd21222122222222122222222221212122222222222222212222222222221222222221222212121212122222222212222`BGf000000000000000000000000000`BGl0``0``````BHdC``2`22222222210`222BGh1BDn40`1023BHnBH`BGn453762104537453745374537345621004537621045373162104453745444555`643445377`6210444455377445335BHh4673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648DLhDLj0``````````BIfBIh0`BIj0BIlBIn``1011110101010101010`10011010101010BDl211210210210210210`02102102100000022110`2102102121021```210210210210210``BMbBKlBBd`BNn1CGlCD`01`CDj`CA`5```3ALnAOnBDh6```::`CIhJjElDl``>``````````CDh```?```CFbCF``CEdAIbBMbCHdCH```CIn;:AGd``BBd5`<``=``152=<1`````CC`CEl``CFh`BFjBLb00CG`69`;JjEl``````1`CHb><```````````````````````````````````>``>CDb`:`nCFb<`?``1BMbCHd003CH`BNnBGl3CDh```````555553`````<CCbCCd`DBn6CIn?>AGd0``1`8JjEl``:`1`:31022``CF``3=CG`CA`??`CGjBBdn`CH`:879`````BLbD@nCHd;:;77DLb6`BKl7CIf```;BMbAGd55577````:CHf0`````2``2>;6BNnBGlBDh44`CInAOn61JjEl8``3108``9CA`BFjCEdAIb=CCd```CDhAHhBBd``0BMbCHb`CGn`AOd``CG``BGl``````CIf>>CFh`33DlDKlDKnCHd0A@`CH```n:DBnBHdC``````BNn=`BBd````CDh`CInAOn``1JjElAGd``4210``4210``4210``BKlBMb0`2```````=````````CGl0`000`0?0Dl11100CH`AIdCG`CIf`````CDb``DH`CHf``1```2BBdCEf`=`=``=BNnBGlBDhD@n`````DLlCC`CCbCDhCElALn`;CHd0AOj`CEjA@`CIhJjElAGd````BMb````````BBd`AOd`CA`0`CCl94<11CFh0CDl07CG`CF`BNnAIbBGl1;210;20CH`B@dLdA@`332176545?<3?<CCd4CCnCHf?BLb`:8CGjCD```::987AlCEdCEj9CDjBMb`1`n``2CC`DKjCElCFbBDhCGlCA`0BBd`CInD@nJjElAGdCJh?``````32`3`DLbAIbCDl0``:CF`CH`:ABjnBKjCId``Dl`BLb0```````AOj2```````CA````````````BAb`BMb`CFbCHf`BNnBGlBI```?`9D@nCJhCF`88CIn9```BBd`8:CHd;;CH`<`1<DLlCC`CCbCDhCElALnCId`BMb0```````BKl911``CFbBLb0n01CCd`FfABjCG``````44```CH`B@d2`BBd````CIn6``````<8<<<CCn552CHdBHdC```CFhDKj:77```444`CHb`5``BNnBGlAOn::JjEl`n``BMb```3`<<<<<<`32AGd``12``4`BKlBBdCHf:94CCdBLbCHd`7``4`2CH`CIn<;88``1```822`2911111111ABjBAbCA``473?>;``3?>;``3?>;``3?>;````CFhCG`=`>`El>```?8`CCl??BMbALd0BNnBGlBI```CCd>>`BBd`01``CHfCH`=0CEfAIbDl:?`CAhBF`BL`BLjCBdCBfCBhCBjCBlBE`BFdCBnBG`CC`CCbCCdCCfAB`A@hCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`CJ`CJbA@bBFjBFnMjBAdA@`BI`CJdCJfCJh`BF`BJh0``BJl:AHdBJnBK`000BKb6BKd`BBdBKj1BKlBG`0BKn1BL`5`5`5BLb`N`BLfCIbBLh00CHj;BF`<`<ACdACf1010AHh:?`?AHj0BBd0`22`BFnBMdBMfBMh42104AHl5BJn`1AHn71`BMjCIb`9AMn990AN`0::`BMlBLh7BN`=8=MjBNbBNd000N`BNj11BNn2ANfBO`BJnALdBOb`877`BBdBOf0`CDdBKdBOjC@`C@dC@h4`7`BKlBLb<00<00010<0CAlBMfAM`BLfC@lBOh<CAhBF`BL`BLjCBdCBfCBhCBjDE`BOjBMjCNbDAjBMlCNdCL`CBlC@`BE`BFdCBnBG`DH`CNfCC`CNhCCbCCdCCfBMhDCdCKdBJlC@fC@dAB`A@hC@hDEbCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnDClCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCLhCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`0CJ`CJbA@bD@nBFjBFnMjBAdA@`BI`CJdCJfCJhCAlBMfAM`BLfC@lBOhBKdCAhBF`BL`BLjCBdCBfCBhCBjDE`BOjBMjCNbDAjBMlCNdCL`CBlC@`BE`BFdCBnBG`DH`CNfCC`CNhCCbCCdCCfBMhDCdCKdBJlC@fC@dAB`A@hC@hDEbCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnDClCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCLhCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`CJ`CJbA@bD@nBFjBFnMjBAdA@`BI`CJdCJfCJhBF`8BJn`ACb2CBfCBjCI`CAbCAd`BN`CAf2CAh`9:AI`BBdAOh=2201`1N`2CAn3A@bCB`BFnCBbBJn10CCh`11`9`9`9;BF`BL`BLjCBdCBfCBhCBjCBlBE`BFdCBnBG`CC`CCbCCdCCfAB`A@hCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`CJ`CJbA@bBFjBFnMjBAdA@`BI`CJdCJfCJhBJnCAhBF`BL`BLjCBdCBfCBhCBjCBlBE`BFdCBnBG`CC`CCbCCdCCfAB`A@hCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`CJ`CJbA@bBFjBFnMjBAdA@`BI`CJdCJfCJhCAhBF`BL`BLjCBdCBfCBhCBjCBlBE`BFdCBnBG`CC`CCbCCdCCfAB`A@hCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`CJ`CJbA@bBFjBFnMjBAdA@`BI`CJdCJfCJhCBlBE`BFd`CJjCBdCBhCBfCBjBG`N``BLfCDbBJj``BF``B@h000ADnAE`100033`CIl0CChBKbCCj<;BLb`CEbCFfCG``BOf`CJjCBd````BMfCKb4BMh9155``BF`CKdBBd88```BJhCIl4CKf0`3``3`3`3``3CKh>`CDf```0`````CKjCKlCB`CHjCKnBG`CHl1CHnCJdCCjN`0BF`BLjCBfCBjCL`BE`BFdCCdCCh:CClBJjCDbCDdCDfCDjCDlCE`CEbCEdCEfCEhCElCFbCFdCFfCFhCG`BBdBLn00CHhCHjCHlCI`CIbCIdCIfCIjBLbN`000CJ`CJbA@bBFjBAdA@```CAlBMfAM`0BLfC@lBOhBKdCAhBF`BL`BLjCBdCBfCBhCBjDE`BOjBMjCNbDAjBMlCNdCL`CBlC@`BE`BFdCBnBG`DH`CNfCC`CNhCCbCCdCCfBMhDCdCKdBJlC@fC@dAB`A@hC@hDEbCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnDClCG`CGbCGdCGfCGhBNnBBdCGjCA`BLn0CGlCGnCH`CHbCHdCHfBMbCLhCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`0CJ`CJbA@bD@nBFjBFnMjBAdA@`BI`CJdCJfCJhCAlBMfAM`0BLfC@lBOhBKdCAhBF`BL`BLjCBdCBfCBhCBjDE`BOjBMjCNbDAjBMlCNdCL`CBlC@`BE`BFdCBnBG`DH`CNfCC`CNhCCbCCdCCfBMhDCdCKdBJlC@fC@dAB`A@hC@hDEbCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnDClCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCLhCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`CJ`CJbA@bD@nBFjBFnMjBAdA@`BI`CJdCJfCJhCFdF`FhCG`BF`0001N``BDn`CJb`BMhBBdBLb7CLhCHhBKj4BKn5999CAlBMfAM`BLfC@lBOhBKdCAh0BF`0BL`BLjCBdCBfCBhCBjDE`BOjBMjCNbDAjBMlCNdCL`CBlC@`BE`BFdCBnBG`DH`CNfCC`CNhCCbCCdCCfBMhDCdCKdBJlC@fC@dAB`A@hC@hDEbCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnDClCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCLhCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`0CJ`CJbA@bD@nBFjBFnMjBAdA@`BI`CJdCJfCJhBBdBF`01BJn``2AOh1;:9Oj:``CCh`CHhBLbN`0CCjCKb0```CMb2CBlBE`BFdBG`CC`CCbCCdAB`>:CClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnBNnBBd0CGjCA`BLn0CGlCGnCH`CHbCHdCHfBMbCLhCHhCHnCI`CIbCIdCIfCIhCIjBKlCInN`00CJ`CJbA@bBFjBFn0MjBAdA@`BI`CJdCJfCJhBBdAId0BE`00BFd00BG`00CC`00CCb00CCd00AB`00CCh00CCj00CCl00CCn00CD`00BJj00CDb00CDd00CDf00CDh00CDj00CDl00CE`00CEb00CEd00CEf00CEh00CEj00CEl00CEn00CFb00CFf00CFh00CFj00CFl00CFn00BBd00CGj00CA`00CGl00CGn00CH`00CHb00CHd00CHf00CHh00CHn00CI`00CIb00CId00CIf00CIh00CIj00BKl00N`00CJ`00CJb00BFj00BAd00A@`00CJh00CMhBE`?BBd09```BF`0AIf20`BLb3BOfA@h111ACdCAh601BJnBJl00BFnCCh:;`:;;AIhAIj5<=999CMnCN`ACfAOfBLfBKdCJjCBdCBhBOjCNbBMlCNdC@`CNfCNhCKdC@dC@hACd=<;9C@f`BF`BMhBBd`0CDf0`BLnCAn33`N`BN`CAfCAbCBlBE`BFdCBnBG`0CC`CCbCCdAB`A@hBLhCChCCjCClCCnCD`BJjCDbCNjCDdCDfCDh0CDjCDl0CDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnBBd0CGjCA`0BLnCGl0CGn0CH`0CHb0CHd0CHf0BMb0CLhCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLb0000CIlCInN`00CJ`CJbA@bBFjBFnMjBAdA@`BI`CJdCJfCJh`;CBl:`BLfCIbCI``BBdCAlBMfAM`6C@lBOhBKdCAhBF`00BL`BLjCBdCBfCBhCBjDE`BOjBMjCNbDAjBMlCNdCL`CBlC@`BE`BFdCBnBG`DH`CNfCC`CNhCCbCCdCCfBMhDCdCKdBJlC@fC@dAB`0A@hC@hDEbCChCCjCClCCn0CD`BJj0CDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnDClCG`CGbCGdCGfCGhBNnBBd0000000000000CGjCA`BLn0000000000CGlCGnCH`CHbCHdCHfBMb0000CLh0CHhCHjCHlCHnCI`CIbCId0CIfCIhCIjBKl0000CAdBLbCIlCInN`00000000000000000CJ`CJbA@bD@nBFjBFn00Mj0000000000BAdA@`BI`CJdCJfCJhD@bBLb000D@dD@hD@jAM`04N`DLn00ADj13310732CJbCKd4422D@n66BLnDA`ALd0`AIl1CHhBF`DAbAIn5BFnCAd`BBd`00N`BJnBMfBMh<4AJ`AOh10CAl<CInDlCCf00CLbBLlD@b?BMj`C@d=>>==BN`6CCh`CNjBAnALdBJnCJjCBdCBjBF`DAn11``BHhAIdBBdN`21=9BE`BFdBG`CC`CCbCCdCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnBNnBBdCGjCA`CGlCGnCH`CHbCHdCHfBMbCHhCHnCI`CIbCIdCIfCIhCIjBKlCInN`CJ`CJbBFjBAdA@`CJhDBb0BL`BMhBBdBOf0CBfCBj`DBdCKlCB`CHjCKnCHlBLfBJjAB`CCh```=`BOjCDdBE`>=21N`0CIjBGf`3BFd``CNhCKdBLj:CAlBMfAM`BLfC@lBOhBKdCAhBF`BL`:CBdCBfCBhCBjDE`BOjBMjCNbDAjBMlCNdCL`CBlC@`BE`BFdCBnBG`DH`CNfCC`CNhCCbCCdCCfBMhDCdCKdBJlC@fC@dAB`A@hC@hDEbCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnDClCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCLhCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`CJ`CJbA@bD@nBFjBFnMjBAdA@`BI`CJdCJfCJhAB`ACdBF`DAbA@hCAdBLb``8``BBd``011CAlBMfAM`BLfC@lBOhBKdCAh=BL`BLjCBdCBfCBhCBjDE`BOjBMjCNbDAjBMlCNdCL`CBlC@`BE`BFdCBnBG`DH`CNfCC`CNhCCbCCdCCfBMhDCdCKdBJlC@fC@dAB`A@hC@hDEbCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnDClCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCLhCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`CJ`CJbA@bD@nBFjBFnMjBAdA@`BI`CJdCJfCJhBDd>78AM`?DE`DAjBBdBLb=DBhBMhN`0CChBB`BFb3MjBFh;8CA`CDh`;`1BG`CHh<BJnC@f?`AJbBBd45`00`AJd1CKjCKlCB`4=4`74`7A@h5>AB`BAd`N`CInBFbCMb35CDl4BG`;:9ALdBLbBFnD@b2DBnBMfBF`BMhDAbDC`3DCb0BLfBJj1BJlDCdCIl0BE``:9ALdBBdDCh=N`CE`?=:ABj00`BJnBMh6BFnBF`3CDf9`DCjBG`DClCInMj>>6BL`CBhCKdCBjCChCEnBBdDCb00000000000000000000AId2N`13CDdCEbCEhCFfF`Fh``6BF`DCd;`;BMj0BLn0=020=`==`1?1111CIn```BMf5BMhAHdBBdDDdBJnCIlCLhCHh`=7653`8=7AJf64DDf5CNb`BAdCFdCHjCKnCHlCB`21`BMfBF`BMhAHdBBd1CBlCHnA@bDDdBJnCLhCHhDBdCKl>CHjCKnCHlCCj`=CKj5CB`5BG`0BKj1BBdBKnF`FhBJnCJjCBdCBhBLjCBfCBjDEbCChBOj1BMfBMhAHnBBd==09CAdOjBAd33`DBdCKlCB`CKnBG`CHlN`CDl3;``3DDh<<BMjDKlCMnCN`DKnDDjAM`BLfBKdCBdCBhBOj;CNbBMlCNdCL`C@`BG`CNfCNhCCfCKdC@fC@dC@hBJjBLnCHjCHlBKlCAdN`BFnMjBAd32AJhBJnCCn6`05CBdCBh28888108888DE`DAjBLhC@lBOhC@fBBd0`0BLbAId0``AB`A@hCDf?BF`6CLhCHhCCjF`FhC@dCIlBE`BFdCCfAIfBLfCIjBGf>CAdBBdCKjCKlCB`0CGdCGhDEb66`CBjCEnCJbBG`9DBd9CCh22N`1BE`BFd?22````?9DCd0`CJfDDdBBdBF`8BFn88`1AJf3DDfBJnCKjCKlCB`>CCjCDf0CChDEh<N`0C@d1111CJj:CBdCBhCBfCBj8CJb`AJj0BKjBBdBKnBLb`BJnBF`BJl``5`BOf60BMj11``7`7`CAdAJl6BMf6BMh;CE`BLfDAn:>AJn?<?DF`BBd1010100010101010101010101010DFbCAn2CCf0130CFfCIlCJjCBdCBhBLjCBfCBjCChCIb0DCbBLn??3BLhBF`00000DFdAK`0CNbBMlC@fC@d7CIl?DEb=1`BLb>9`DBdCKlCB`CHjCKnCHlN`BF`0CCjCDfCDd`AK`<4??C@hCNbBMlCNhC@dCMnBBdBFnAKbBJnBMf?BMh5AKdBF`7BJj8ACf692222CKbBLjCChCJ`1:68=<<5AKf=0=====`AHl;8:??80<N`CJjCBdCBhBOfBJnBFn022`2`2BBdBE`>>CFfBMfBF`BMhAKh68DFj9A@h8;`;;;;;CE`CB`CI`;``>`>`>`>`>N`<BKj=BKlBLb0BKnBLfDCdBJj01`BMfBF`BMhAHdBBdDDdBJnBLnCA`=N`8BL`86AKj5DFn066AKl7BFn`CGbCGfCDf`CHjCHl1CB`BF`CG`1CInBMhD@b;AKn5DGbBKbBBdBOfBMf1DCdAB`CAh=BL`BLjCBdCBfCBhCBjCBlBE`BFdCBnBG`CC`CCbCCdCCfAB`A@hCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`CJ`CJbA@bBFjBFnMjBAdA@`BI`CJdCJfCJhBBdBMjCB`BG`CDhCDl5CA`CGlCGnCH`CHbCHdCHfBMbN`D@bCJbBOf0DCdCEbCFfBLbCE`0BF`BFn000ABj00DGdBG`0CCf10CCj21AMn660AN`077B@h000ADnAE`1000CAlBMfAM`BLfC@lBOhBKdCAhBF`BL`BLjCBdCBfCBhCBjDE`BOjBMjCNbDAjBMlCNdCL`CBlC@`BE`BFdCBnBG`DH`CNfCC`CNhCCbCCdCCfBMhDCdCKdBJlC@fC@dAB`A@hC@hDEbCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnDClCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCLhCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCIn0N`0CJ`CJbA@bD@nBFjBFnMjBAdA@`BI`CJdCJfCJh?D@bCAlBMfAM`BLfC@lBOhBKdCAhBF`BL`BLjCBdCBfCBhCBjDE`BOjBMjCNbDAjBMlCNdCL`CBlC@`BE`BFdCBnBG`DH`CNfCC`CNhCCbCCdCCfBMhDCdCKdBJlC@fC@dAB`A@hC@hDEbCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnDClCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCLhCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`CJ`CJbA@bD@nBFjBFnMjBAdA@`BI`CJdCJfCJhCChBMj0BBd1DDhCFjCFlCFnN`?00000CCj11BN`CAbBLlBG`CDhCDl<CA`CGlCGnCH`CHbCHdCHfBMb??CAlBMfAM`BLfC@lBOhBKdCAhBF`BL`BLjCBdCBfCBhCBjDE`BOjBMjCNbDAjBMlCNdCL`CBlC@`BE`BFdCBnBG`DH`CNfCC`CNhCCbCCdCCfBMhDCdCKdBJlC@fC@dAB`A@hC@hDEbCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnDClCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCLhCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`CJ`CJbA@bD@nBFjBFnMjBAdA@`BI`CJdCJfCJhCd`BLbAHnBMfBF`BMhBBdBJn3432133N`0?CCh3DGl0C@dCBjCEn`BLfBJjBFn0ALdMjCMb=CIjBGf4545BMfBF`BMhAKhBBdBJnDFj187DGn0CIlN`CAl:AM`BLfC@lBOhBKdCAh?BL`BLjCBdCBfCBhCBjDE`BOjBMjCNbDAjBMlCNdCL`CBlC@`BE`BFdCBnBG`DH`CNfCC`CNhCCbCCdCCfBMhDCdCKdBJlC@fC@dAB`A@hC@hDEbCChCCjCClCCnCD`BJjCDbCDdCDfCDhCDjCDlCDnCE`CEbCEdCEfCEhCEjCElCEnCF`CFbCFdCFfCFhCFjCFlCFnDClCG`CGbCGdCGfCGhBNnBBdCGjCA`BLnCGlCGnCH`CHbCHdCHfBMbCLhCHhCHjCHlCHnCI`CIbCIdCIfCIhCIjBKlCAdBLbCIlCInN`CJ`CJbA@bD@nBFjBFnMjBAdA@`BI`CJdCJfCJh=CKjCKlCB`10CCdBG`CHl1A@b`CGdCGhCBlCHn4BLfCHjC@dCBhBOjCNhCBdDKlDKnCKdCCh47BF`BJj11CNbBMl<4DEb49CCjCNdC@`1CL`1C@h90BOj0CHjCHlCBd8BMj1?19196BJl55322CCh>C@d65654CBhCNhCKd4CNb483835CNf3<96BAd<;;<;:CCj=CJj<<774BMl6:6:>BOj>3BF`<8<38;07298;<0?141?<3?:8<0C@h41CBd0<<94:=>BMj?1=<;?1=<;?CHjCHl36953CCh40C@d7:5CBh7BJj:557=7=9BFn0ALd167;ABj00000000000000000N`CEbCFf`22BBdCKjCKlCB`?`AL`DM`DMbDMd2102DMfDMhDMjDMl0DMnDN`DNbDNdDNfDNhDNjDNl55DNnDO`DOb14;3DOd:DOf49DOhDOj0>DOlDMl240;4:029513622><??>;DOnE@`E@b0E@dE@f4E@hE@jE@lE@n3EA`528EAb1EAd11098432323570;5EAfEAhEAj0EAlEAnEB`EBbEBd01EBf1EBhEBjEBlEBnEC`ECb697DLhDLj0ECd00DLdDLf10ECfEChECj21EClECnED`EDb03421EDd0DHh00`00`0000000`0`0000``````````BIfBIh0`ALjALfALb``````````````````````````````````DI`000000000000000DIb`C@n000000000000000DId`0`00`0000000000000`00EDfEDhEDj32103210321032103321032103`210332103210321032103EDl00````````BNd0000CBlCKjCKlCKn3DBd213232114021320213230232DF`0000000000000132`433543`DIh0000``07777DIf8111111111111111`11111111`DJ```DIj000000000`0000DIl11111211111DJb0``0000CJl010100000101010100000110001010`001010101011``11110DJd`00000000000`0000AOn`JjElDl```````21AGd`2``3`0320```32````3`````3200``32`3`3200``0320``3230```00`40320``320```AOd`2DKlDKn``````7``653``653``653``653``3`444333AOj764``3``4B@dLd1010Al:97`:9`:``838```````````BAb`3`<;:`;`;:8;`;:88````80`;:8``;:8``;:8``;:8``8:8`88ALd0:0AMn0AN`0ANf3`AOh0`B@h000`1OjAOf7777733DlBAn9BB`::```4DKlDKn;;::7777<<<10<`````AOd`AOj10``7`````1010```````````D@dD@hD@j`CM`00000000000000000000000000000000000000000000000000`BIj0`DJf000000000000000000``BMbCGl00011111CHdCH`33`03`CHb414414222124444411111444124222CHf055355`51CGn443665555553555531446646633363631365636`1366616466364666366366664444246`4444446`1646`334446333333333664633133````DMfDMhDMjEAfEAhEAj0EAlEAnEB`EBbEBd01EBf1EBhEBjEBlEBnEC`ECb697ECfEChECj21EClECnED`EDb03421EDd0`CGnCHb0`0DJh000`00000000000000000000000000DJj000`00000000000000000000000000````CEj0`````````DJl00000000000000000000000000000`DGj000000000`0000``000000000ALn00`````DK`CB`000000000000000000`````AKf0````````````F`Fh10101022```BObBOf0000000000000000`0000000`0`00`00000`0`0`0`0`00000`CAd0000``EDnEE`Mb``0``AIdBGd2````02AbBJn111111`11100`110010011101110001DKf352035211222212212112252152522222203522035222220352112524222422222555222222121522203522222222222222222222222222222222222222222222222222222222222222122211114222422215222222`203520352220BFb3233332203333232335333533332232232333323223333333333333333333333333333333333333333333333333333332315333533332`332233323332623333223312332232233333333323323322233333633331463333314633333314633333232221463333``Ed000000000000000000000```BKj`0BKnBn`210210210210``CBbG`10CLl0`000000000000000000000000","f":"``````{{}b}`````````{{}d}````````{{fh}b}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Ah}}}}}d}{{{f{{l{c}}}}}AjAl}{{{l{An}}{l{An}}}}{{{f{{l{An}}}}{f{{l{An}}}}}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{An}}}}{f{Bf}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}}{{{l{c}}{l{c}}}{}Al}{{{l{Bd}}{l{Bd}}}}{{{l{Bh}}{l{Bh}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{j}}}}{f{C`}}}Ab}{{{f{{l{{Cb{c}}}}}}{f{C`}}}AbCd}{{{f{{l{Cf}}}}{f{C`}}}Ab}{{{f{{l{Bh}}}}{f{C`}}}Ab}{{{f{{l{An}}}}{f{C`}}}Ab}{{{f{{l{Ah}}}}{f{C`}}}Ab}{{{f{{l{Bd}}}}{f{C`}}}Ab}{{{f{{l{c}}}}{f{C`}}}AbAl}{{{f{{l{Bd}}}}}d}{{{f{{l{Bd}}}}}{{Ch{d}}}}{{{f{{l{Cf}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Ah}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}{{{f{{l{Cf}}}}Dd}{{Db{{`{{D`{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}}}}}54{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}{{Dl{}{{Dh{Dj}}}}}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dn{{Ch{Ab}}}{{Ad{{Ch{Ab}}}}}}E`}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Dn{{Ch{d}}}{{Ad{{Ch{d}}}}}}E`}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Dn{{Ch{{f{{Bl{Bj}}}}}}}{{Ad{{Ch{{Eb{{Bl{Bj}}}}}}}}}}E`}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Dn{{Ch{{f{c}}}}}{{Ad{{Ch{c}}}}}}E`}}{{{f{{l{An}}}}c}{{l{An}}}{{Dn{{Ch{{f{Bf}}}}}{{Ad{{Ch{{Eb{Bf}}}}}}}}E`}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dn{Ch}{{Ad{Ch}}}}E`}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Af{Ed}{{Ad{Ab}}}}}}{{{f{{l{Cf}}}}e}{{l{g}}}{}{{Af{{Ch{Ed}}}{{Ad{{Ch{c}}}}}}E`}Dl}{{{f{{l{Ah}}}}e}{{l{g}}}{}{{Af{{Ch{Ed}}}{{Ad{{Ch{c}}}}}}E`}Dl}{{{f{{l{Cf}}}}c}{{l{Cf}}}{{Af{Ed}{{Ad{Ab}}}}}}{{{f{{l{Ef}}}}c}Ab{{Dn{{f{Ab}}}{{Ad{Ab}}}}}}{{{f{{l{Eh}}}}c}Ab{{Dn{{f{Ab}}}{{Ad{Ab}}}}}}{{{l{c}}e}{{l{c}}}Al{{Dn{}{{Ad{}}}}E`}}{{{f{{l{c}}}}e}{{l{An}}}Dl{{Af{{f{DfEj}}}}}}{{{f{{l{An}}}}{f{Dn}}}{{l{An}}}}{{{f{{l{c}}}}{f{Dn}}}{{l{c}}}Al}{{{f{{l{Bd}}}}{f{Dn}}}{{l{Bd}}}}{{{f{{l{Bh}}}}{f{Dn}}}{{l{Bh}}}}{{{f{{l{An}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{Dn}}}{{l{e}}}AlDl}{{{f{{l{Bd}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{{l{Bh}}}}{f{Dn}}}{{l{c}}}Dl}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Af{{f{{Bl{Bj}}}}}{{Ad{{f{{Bl{Bj}}}}}}}}}}{{{f{Df{l{c}}}}e}bAl{{Dn{}{{Ad{}}}}E`}}{{{f{{l{An}}}}c}{{l{An}}}{{Af{{f{Bf}}}{{Ad{{f{Bf}}}}}}}}{{{f{{l{c}}}}Elg}{{l{i}}}Dl{}{{Af{}{{Ad{e}}}}}Dl}{{{f{{l{Ah}}}}{f{Dn}}}{{A`{{l{Ah}}n}}}}{{{f{{l{Cf}}}}{f{Dn}}}{{A`{{l{Cf}}n}}}}{{{f{{l{{Cb{c}}}}}}g{f{Df{Bl{e}}}}}bCd{}{{Dn{{Ch{{f{c}}}}{f{e}}}{{Ad{e}}}}}}{{{f{{l{Bd}}}}e{f{Df{Bl{c}}}}}b{}{{Dn{{Ch{d}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}e{f{Df{Bl{c}}}}}b{}{{Dn{{Ch{Ab}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{c}}}}g{f{Df{Bl{e}}}}}bAl{}{{Dn{Ch{f{e}}}{{Ad{e}}}}}}{{{f{{l{An}}}}e{f{Df{Bl{c}}}}}b{}{{Dn{{Ch{{f{Bf}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Bh}}}}e{f{Df{Bl{c}}}}}b{}{{Dn{{Ch{{f{{Bl{Bj}}}}}}{f{c}}}{{Ad{c}}}}}}{{{f{{l{Ah}}}}c}{{l{Ah}}}{{Dn{Ab}{{Ad{Ab}}}}E`}}{{{f{{l{c}}}}e}{{l{c}}}Al{{Dn{}{{Ad{}}}}E`}}{{{f{{l{An}}}}c}{{l{An}}}{{Dn{{f{Bf}}}{{Ad{{Eb{Bf}}}}}}E`}}{{{f{{l{Bh}}}}c}{{l{Bh}}}{{Dn{{f{{Bl{Bj}}}}}{{Ad{{Eb{{Bl{Bj}}}}}}}}E`}}{{{f{{l{Bd}}}}c}{{l{Bd}}}{{Dn{d}{{Ad{d}}}}E`}}{{{f{{l{{Cb{c}}}}}}e}{{l{{Cb{c}}}}}Cd{{Dn{{f{c}}}{{Ad{c}}}}E`}}{{{f{{l{An}}}}c}{{l{An}}}{{Af{En{f{Bf}}}{{Ad{En}}}}E`}}{{{f{{l{c}}}}F`}{{l{Fb}}}Al}{{{f{{l{Fd}}}}F`}{{l{Fb}}}}{{{f{{l{j}}}}F`}{{l{Fb}}}}{{{f{{l{Bd}}}}F`}{{l{Fb}}}}{{{f{{l{Bh}}}}F`}{{l{Fb}}}}{{{f{{l{An}}}}F`}{{l{Fb}}}}{{{f{{l{Fd}}}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bd}}}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bh}}}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{An}}}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{{l{c}}}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}Al}{{{f{{l{An}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{Bh}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{{Cb{c}}}}}}}{{A`{{l{Fb}}n}}}Cd}{{{f{{l{Bd}}}}}{{A`{{l{Fb}}n}}}}{{{f{{l{c}}}}}{{A`{{l{Fb}}n}}}Al}`{{{f{{l{Cf}}}}}{{f{{l{Cf}}}}}}{{{f{{l{Bh}}}}}{{f{{l{Bh}}}}}}{{{f{{l{An}}}}}{{l{Bh}}}}{{{f{{l{Ah}}}}}{{f{{l{Ah}}}}}}{{{f{{l{c}}}}}{{f{{l{c}}}}}Dl}{{{f{{l{c}}}}}{{f{El}}}Dl}{{{f{{l{An}}}}}{{f{{l{An}}}}}}0{{{f{{l{Ah}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{Ah}}}DlDl{{Af{{Ch{Ed}}ChCh}{{Ad{{Ch{Ab}}}}}}}}{{{l{Bd}}{l{Bd}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Fj}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}}102210{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{{l{c}}}}}{{Cn{Fl}}}Dl}``{{{f{{l{j}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}{{l{g}}}Al{{Dn{}{{Ad{}}}}E`}Al}{{{f{{l{Ah}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Fd}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{An}}}}{f{El}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{El}}}{{A`{Abn}}}Al}{{{f{{l{Ah}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{c}}}}{f{El}}Fn}{{A`{Abn}}}Al}{{{f{{l{j}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Fd}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{An}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}G`}{{{f{{l{c}}}}e}{{A`{Abn}}}G`Bb}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{Gb}}}}}}}Dl}{{{f{{l{c}}}}}{{Gh{{Gd{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{Gb}}}}}}}Dl}{{{f{{l{c}}}}}{{f{{Gj{{Cn{Cl}}}}}}}Dl}{{{f{Df{l{c}}}}}{{f{Df{Gj{{Cn{Cl}}}}}}}Dl}{{{f{{l{c}}}}}{{l{c}}}Dl}0{{f{f{Dfc}}}b{}}{fb}`{{{f{Df{l{c}}}}}b{DlAl}}`{fGl}{{{f{{l{c}}}}}{{A`{{f{Bl}}n}}}Al}{{{f{Df{l{c}}}}{f{{l{c}}}}Gn}bDl}{{{f{Df{l{c}}}}{f{{l{e}}}}Gn}bDlDl}{{{f{{l{c}}}}}{{`{H`}}}Al}{{}{{l{c}}}Dl}{Gb{{f{c}}}{}}0{Gb{{f{Dfc}}}{}}0{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}}bDl}{Gbb}0{{{f{{l{c}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}}{{f{El}}}Dl}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bd}}}}{{{f{{l{c}}}}e}{{l{Bd}}}AlBb}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bd}}}Al}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{l{Bd}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{Bd}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bd}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bd}}}}{{{f{{l{An}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bd}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}3402189756{{{f{{l{Ah}}}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}{{{f{{l{Cf}}}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}{{{f{Df{l{c}}}}{f{{l{c}}}}}{{A`{bn}}}Al}{{{f{{l{j}}}}{f{Bf}}}{{A`{Abn}}}}{{{f{{l{j}}}}}{{Gj{Ab}}}}{{{f{{l{Bd}}}}d}{{A`{{l{Bd}}n}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{f{{l{{Cb{c}}}}}}{f{{l{Bd}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{Bh}}}}{f{{l{Bd}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{An}}}}{f{{l{Bd}}}}}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}{f{{l{Bd}}}}}{{A`{{l{c}}n}}}{{Dl{}{{Hh{Dj}}{Hj{Dj}}}}}}{{{f{{l{c}}}}}ChDl}{{{f{{l{c}}}}}{{Ch{Gb}}}Dl}`{{{f{{l{An}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Bh}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Ah}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{Cf}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{c}}}}{f{DfHl}}}{{A`{bHn}}}Al}{{{f{{l{Bd}}}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{l{{Cb{c}}}}}}{f{DfHl}}}{{A`{bHn}}}Cd}{{{f{{l{c}}}}e}bDl{{Af{Ch}}}}{{{f{{l{Cf}}}}c}b{{Af{{Ch{Ed}}}}}}{{{f{{l{Ah}}}}c}b{{Af{{Ch{Ed}}}}}}{c{{l{e}}}Cl{{Dl{}{{I`{c}}}}}}{cc{}}0{{Ddc}{{l{e}}}Ib{{Dl{}{{I`{}}}}Dl}}{{{f{{l{c}}}}e}{{l{c}}}{{Dl{}{{I`{}}}}Dl}Ib}{{Dd{Gj{{Cn{Cl}}}}}{{l{c}}}Dl}{{Dd{Gj{{Cn{Cl}}}}El}{{l{c}}}Dl}{{Dd{f{{Bl{Ff}}}}}{{A`{{l{j}}n}}}}{e{{l{{Cb{c}}}}}Cd{{Ib{}{{Cj{{Ch{c}}}}}}}}{c{{l{e}}}{{Ib{}{{Cj{{Hf{Gj{Ch{Id}}}}}}}}}Al}{c{{l{Bd}}}{{Ib{}{{Cj{{Ch{d}}}}}}}}{c{{l{Bd}}}{{Ib{}{{Cj{d}}}}}}{c{{l{Ah}}}{{Ib{}{{Cj{{Ch{{Cn{Cl}}}}}}}}}}{e{{l{An}}}{{If{Bf}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{c{{l{e}}}{{Ib{}{{Cj{Ch}}}}}Al}{e{{l{An}}}{{Ih{Bf}}}{{Ib{}{{Cj{c}}}}}}{e{{l{Bh}}}{{If{{Bl{Bj}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{c{{l{Ah}}}{{Ib{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{Bh}}}{{Ih{{Bl{Bj}}}}}{{Ib{}{{Cj{c}}}}}}{e{{l{Ah}}}{{Ij{Ab}}}{{Ib{}{{Cj{c}}}}}}{{Dde}{{l{Bh}}}{{If{{Bl{Bj}}}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{Ch}}}}}Al}{{Dde}{{l{{Cb{c}}}}}Cd{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}{{l{An}}}{{If{Bf}}}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Ddc}{{l{Bd}}}{{D`{}{{Cj{{Ch{d}}}}}}}}8{e{{l{Fd}}}{{If{{Bl{Bj}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}:>?{e{{l{{Cb{c}}}}}Cd{{Ib{}{{Cj{{Ch{c}}}}}}}}97<=8{e{{l{Fd}}}{{Ih{{Bl{Bj}}}}}{{Ib{}{{Cj{c}}}}}}{{Dde}{{l{An}}}{{If{Bf}}}{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{Bd}}}{{D`{}{{Cj{d}}}}}}{{Dde}{{l{{Cb{c}}}}}Cd{{D`{}{{Cj{c}}}}}}{{Ddc}{{l{e}}}{{D`{}{{Cj{}}}}}Al}{{Dde}{{l{Bh}}}{{If{{Bl{Bj}}}}}{{D`{}{{Cj{c}}}}}}`{e{{l{An}}}{{Ih{Bf}}IlInJ`}{{Jb{}{{Cj{c}}}}}}{c{{l{e}}}{{Jb{}{{Cj{Ch}}}}}Al}{c{{l{Bd}}}{{Jb{}{{Cj{{Ch{d}}}}}}}}{c{{l{Ah}}}{{Jb{}{{Cj{{Ch{Ab}}}}}}}}{e{{l{Bh}}}{{Ih{{Bl{Bj}}}}IlInJ`}{{Jb{}{{Cj{c}}}}}}{e{{l{An}}}{{If{Bf}}IlIn}{{Jb{}{{Cj{{Ch{c}}}}}}}}{c{{l{Bd}}}{{Jb{}{{Cj{d}}}}}}{e{{l{Bh}}}{{If{{Bl{Bj}}}}IlIn}{{Jb{}{{Cj{{Ch{c}}}}}}}}{{cDdEl}{{l{Ah}}}{{Jb{}{{Cj{{Ch{Ab}}}}}}}}{{Ddc}{{A`{{l{j}}n}}}{{Jd{}{{Cj{{f{Ab}}}}}}Jf}}{{Dd{f{{Bl{c}}}}}{{l{An}}}{{If{Bf}}}}{{Dd{f{{Bl{d}}}}}{{l{Bd}}}}{{Dd{f{{Bl{c}}}}}{{l{Bh}}}{{If{{Bl{Bj}}}}}}{{Dd{f{Bl}}}{{l{c}}}Al}{{Dd{f{{Bl{c}}}}}{{l{{Cb{c}}}}}Cd}{{Dd{f{{Bl{{Ch{d}}}}}}}{{l{Bd}}}}{{Dd{f{{Bl{Ch}}}}}{{l{c}}}Al}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{{Cb{c}}}}}Cd}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{An}}}{{If{Bf}}}}{{Dd{f{{Bl{{Ch{c}}}}}}}{{l{Bh}}}{{If{{Bl{Bj}}}}}}{c{{l{Bd}}}{{Jh{}{{Cj{{Ch{d}}}}}}}}{c{{l{e}}}{{Jh{}{{Cj{Ch}}}}}Al}{{DdGj}{{l{c}}}Al}{{DdGj{Ch{Id}}}{{l{c}}}Al}{{Dd{f{Ab}}Gb}{{l{Ah}}}}{{Dd{f{{Bl{Bj}}}}Gb}{{l{Fd}}}}{{DdGb}{{l{c}}}Al}{{DddGb}{{l{Bd}}}}{{Dd{f{Bf}}Gb}{{l{An}}}}{{DdcGb}{{l{{Cb{c}}}}}Cd}{{Dd{f{Ab}}Gb}{{l{Cf}}}}{{Dd{f{{Bl{Bj}}}}Gb}{{l{Bh}}}}{{DdGb}{{l{Fd}}}}{{DdGb}{{l{Bh}}}}7{{DdGb}{{l{An}}}}{{DdGb}{{l{Bd}}}}{{DdGb}{{l{j}}}}{{DdGb}{{l{Ah}}}}{{DdGb}{{l{Cf}}}}{{DdGb}{{l{{Cb{c}}}}}Cd}{{{f{{l{c}}}}Gb}{{l{c}}}Dl}{{DdGb{f{El}}Gb}{{l{Cf}}}}{{DdGb{f{El}}}{{l{Ah}}}}{{{f{{l{c}}}}Gb}ChDl}{{{f{{l{Bd}}}}Gb}{{A`{Jjn}}}}{{{f{{l{Fd}}}}Gb}{{A`{Jjn}}}}{{{f{{l{j}}}}Gb}{{A`{Jjn}}}}{{{f{{l{c}}}}Gb}{{A`{Jjn}}}Al}{{{f{{l{{Cb{c}}}}}}Gb}{{A`{Jjn}}}Cd}{{{f{{l{Cf}}}}Gb}{{A`{Jjn}}}}{{{f{{l{An}}}}Gb}{{A`{Jjn}}}}{{{f{{l{Ah}}}}Gb}{{A`{Jjn}}}}{{{f{{l{Bh}}}}Gb}{{A`{Jjn}}}}{{{f{{l{Fd}}}}Gb}Jj}{{{f{{l{c}}}}Gb}JjAl}{{{f{{l{Ah}}}}Gb}Jj}{{{f{{l{j}}}}Gb}Jj}{{{f{{l{Cf}}}}Gb}Jj}{{{f{{l{Bh}}}}Gb}Jj}{{{f{{l{{Cb{c}}}}}}Gb}JjCd}{{{f{{l{An}}}}Gb}Jj}{{{f{{l{Bd}}}}Gb}Jj}{{{f{{l{Cf}}}}Gb}{{Ch{Ab}}}}{{{f{{l{Ah}}}}Gb}{{Ch{Ab}}}}{{{f{{l{c}}}}}{{Ch{Jl}}}Dl}{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}}JnDl}{{{f{{l{Ah}}}}}Ab}{{{f{{l{Cf}}}}}Ab}{{{f{{l{c}}}}}ChDl}0{{{f{{l{{Cb{c}}}}}}Gb}{{Ch{{f{K`}}}}}Cd}0{{{f{{l{j}}}}F`}{{A`{{l{Fd}}n}}}}{{{f{{l{j}}}}F`}{{A`{{Kb{Hb}}n}}}}{{{f{{l{c}}}}Gb}ChDl}{{{f{{l{Ah}}}}}Gb}{{{f{{l{Cf}}}}}Gb}{{{f{{l{An}}}}}Gb}{{{f{{l{Fd}}}}}Gb}{{{f{{l{Bh}}}}dd}{{A`{C`n}}}}{{{f{{l{Ah}}}}dd}{{A`{C`n}}}}{{{f{{l{Fd}}}}dd}{{A`{C`n}}}}{{{f{{l{c}}}}dd}{{A`{C`n}}}Al}{{{f{{l{Cf}}}}dd}{{A`{C`n}}}}{{{f{{l{{Cb{c}}}}}}dd}{{A`{C`n}}}Cd}{{{f{{l{An}}}}dd}{{A`{C`n}}}}{{{f{{l{Bd}}}}dd}{{A`{C`n}}}}{{{f{{l{c}}}}GbdGb}C`Fj}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bd}}}}{{{f{{l{c}}}}e}{{l{Bd}}}AlBb}{{{f{{l{An}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bd}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{l{Bd}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{Bd}}}}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bd}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bd}}}Al}175063284{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}{Ch{Gb}}}{{l{c}}}Dl}{{}Gb}0{{GbKd{Ch{Kf}}}{{l{c}}}Al}{{{f{{l{Ah}}}}}{{f{El}}}}{{{f{{l{Cf}}}}}{{f{El}}}}{{{f{{l{c}}}}}{{Kj{{Kh{c}}}}}Dl}{{}c{}}0{{}Ff}{{{l{Kl}}}{{L`{KnKl}}}}{{{l{Lb}}Ld{Ch{Dd}}}{{L`{LfLb}}}}{{{l{Lh}}{Ch{Gb}}Gb}{{A`{{L`{LjLh}}n}}}}{{{l{Lh}}{Ch{Gb}}Gb}{{L`{LjLh}}}}{{{l{Lb}}Ld}{{L`{LlLb}}}}{{{f{{l{Cf}}}}}}{{{f{{l{c}}}}}{}Al}{{{f{{l{{Cb{c}}}}}}}{}Cd}{{{f{{l{Bd}}}}}}{{{f{{l{Ah}}}}}}{{{f{{l{Fd}}}}}}{{{f{{l{Bh}}}}}}{{{f{{l{An}}}}}}{{{f{{l{c}}}}}{{`{IlInJdH`Jh}}}Al}{{{l{c}}}AbDl}{{{l{Lh}}}Ab}{{{l{Lb}}}{{L`{LnLb}}}}{{{f{{l{c}}}}}dDl}{{{f{{l{c}}}}}{{l{Bd}}}M`}000{{{f{{l{c}}}}}{{l{Bd}}}Dl}02{{{f{{l{c}}}}}MbDl}{{{f{{l{c}}}}}{{`{Md}}}Dl}{{{f{{l{c}}}}}{{`{{D`{}{{Cj{{l{c}}}}}}}}}Dl}{{{f{{l{Ah}}}}}{{`{{D`{}{{Cj{Hb}}}}}}}}{{{f{{l{c}}}}}{{Gh{{Gd{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{{Ch{{f{Id}}}}}}}}}}}Dl}`{{fc}Gl{{If{Bf}}}}{{{f{{l{c}}}}}ChDl}{{{f{{l{c}}}}}{{Ch{Gb}}}Dl}{{{f{{l{c}}}}}{{Mf{c}}}Dl}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}01{{{f{{l{c}}}}}GbDl}0{{{f{{l{c}}}}e}{{l{c}}}Al{B`Mh}}00{{{f{{l{c}}}}Gb}{{l{c}}}Dl}{{{f{{l{An}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bd}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{l{Bd}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bd}}}Al}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bd}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{Bd}}}}{{{f{{l{c}}}}e}{{l{Bd}}}AlBb}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bd}}}}741582360{{{f{{l{c}}}}}ChAl}{{{f{{l{Bd}}}}}{{Ch{d}}}}{{{f{{l{An}}}}}Mj}{{{f{{l{Bh}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bd}}}}}Mj}{{{f{{l{c}}}}}{{Ch{Aj}}}Al}{{{f{{l{Bd}}}}}{{Ch{Aj}}}}{{{f{{l{Ef}}}}}{{Ch{Aj}}}}{{{f{{l{c}}}}}{{Ch{Aj}}}Fj}{{{f{{l{Eh}}}}}{{Ch{Kd}}}}{{{f{{l{Ef}}}}}Mj}{{{f{{l{Eh}}}}}Mj}{{{f{{l{c}}}}}MjFj}{{{f{Df{l{c}}}}{Kh{c}}}bDl}`{{{f{{l{c}}}}}{{Ml{c}}}Dl}{{{f{{l{c}}}}}{{f{{N`{{Mn{c}}}}}}}Dl}{{{f{{l{c}}}}}{{Ch{{Nb{Fl}}}}}Dl}{{{f{Df{l{c}}}}}{{f{Df{N`{{Mn{c}}}}}}}Dl}{{{f{{l{c}}}}}{{N`{{Mn{c}}}}}Dl}{{{f{{l{Bd}}}}}{{Ch{d}}}}{{{f{{l{c}}}}}ChAl}{{{f{{l{c}}}}}{{Ch{Hf}}}Al}{{{f{{l{An}}}}}Mj}{{{f{{l{Bd}}}}}Mj}{{{f{{l{Bh}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{Dd{f{{Bl{Bj}}}}GbGb}{{l{Bd}}}}{{Dd{f{Bl}}}{{l{c}}}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}GbDl}{{{f{{l{c}}}}}{{A`{Gbn}}}Al}{{{f{{l{An}}}}}{{A`{Gbn}}}}{{{f{{l{Bh}}}}}{{A`{Gbn}}}}{{{f{{l{c}}}}}{{f{Dd}}}Dl}{{Ddc}{{l{Nd}}}{{If{{Bl{{Ch{Nf}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bl{{Ch{Ej}}}}}}}}{{Ddc}{{l{Nh}}}{{If{{Bl{{Ch{Nj}}}}}}}}{{Ddc}{{l{Nl}}}{{If{{Bl{{Ch{Kf}}}}}}}}{{Ddc}{{l{Fb}}}{{If{{Bl{{Ch{Jl}}}}}}}}{{Ddc}{{l{Nn}}}{{If{{Bl{{Ch{O`}}}}}}}}{{Ddc}{{l{Ob}}}{{If{{Bl{{Ch{Bj}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bl{Ej}}}}}}{{Ddc}{{l{Ef}}}{{If{{Bl{{Ch{Aj}}}}}}}}{{Ddc}{{l{Eh}}}{{If{{Bl{{Ch{Kd}}}}}}}}{{Ddc}{{l{Lh}}}{{If{{Bl{Od}}}}}}{{Ddc}{{l{Lb}}}{{If{{Bl{Hb}}}}}}{{Ddc}{{l{Kl}}}{{If{{Bl{Of}}}}}}{{Dd{Oh{Of}}}{{l{Kl}}}}{{Ddc}{{l{Lh}}}{{If{{Bl{{Ch{Od}}}}}}}}{{Ddc}{{l{Nd}}}{{If{{Bl{Nf}}}}}}{{Ddc}{{l{Nh}}}{{If{{Bl{Nj}}}}}}{{Ddc}{{l{Nl}}}{{If{{Bl{Kf}}}}}}{{Ddc}{{l{Eh}}}{{If{{Bl{Kd}}}}}}{{Dde}{{l{{Cb{c}}}}}Cd{{If{{Bl{{Ch{c}}}}}}}}{{Dd{f{{Bl{c}}}}}{{l{{Cb{c}}}}}Cd}{{Ddc}{{l{Lb}}}{{If{{Bl{{Ch{Hb}}}}}}}}{{Ddc}{{l{Kl}}}{{If{{Bl{{Ch{Of}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{{Ch{d}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{{Gj{Bj}}}}}}}}{{Ddc}{{l{Bd}}}{{If{{Bl{d}}}}}}{{Dd{Oh{Kf}}}{{l{Nl}}}}{{Ddc}{{l{Ob}}}{{If{{Bl{Bj}}}}}}{{Ddc}{{l{Nn}}}{{If{{Bl{O`}}}}}}{{Dd{Oh{Jl}}}{{l{Fb}}}}{{Ddc}{{l{An}}}{{If{{Bl{{f{Bf}}}}}}}}{{Ddc}{{l{Fb}}}{{If{{Bl{Jl}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{{Ch{{Eb{{Bl{Bj}}}}}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{{Eb{{Bl{Bj}}}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bl{{Ch{{f{Bf}}}}}}}}}}{{Ddc}{{l{An}}}{{If{{Bl{{Eb{Bf}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{{Ch{{Gj{Bj}}}}}}}}}}{{Dd{Oh{Hb}}}{{l{Lb}}}}{{Ddc}{{l{An}}}{{If{{Bl{{Ch{{Eb{Bf}}}}}}}}}}{{Ddc}{{l{Ef}}}{{If{{Bl{Aj}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{{f{{Bl{Bj}}}}}}}}}}{{Ddc}{{l{Bh}}}{{If{{Bl{{Ch{{f{{Bl{Bj}}}}}}}}}}}}{Dd{{l{{Cb{c}}}}}Cd}{{{f{{l{Bd}}}}GbGb}{{l{Bd}}}}{{{f{{l{c}}}}GbGb}{{l{c}}}Al}{{{f{{l{An}}}}GbGb}{{l{An}}}}{{{f{{l{{Cb{c}}}}}}GbGb}{{l{{Cb{c}}}}}Cd}{{{f{{l{Bh}}}}GbGb}{{l{Bh}}}}{{{f{{l{Cf}}}}GbGb}{{l{Cf}}}}{{{f{{l{Fd}}}}GbGb}{{l{Fd}}}}{{{f{{l{Ah}}}}GbGb}{{l{Ah}}}}{{{f{{l{j}}}}GbGb}{{l{j}}}}{{Dd{Gj{c}}}{{l{{Cb{c}}}}}Cd}{{Dd{Gj{c}}Id}{{l{{Cb{c}}}}}Cd}{{DdGj}{{l{c}}}Al}{{{N`{Oj}}{Gj{{Cn{Cl}}}}JlJl}{{l{c}}}Dl}{{{f{{l{c}}}}}{{l{c}}}M`}{{{l{Bd}}}}{{{f{{l{Bd}}}}}}{{{f{{l{c}}}}e}{{l{Bd}}}AlBb}{{{f{{l{An}}}}{f{{l{An}}}}}{{l{Bd}}}}{{{f{{l{j}}}}{f{{l{j}}}}}{{l{Bd}}}}{{{f{{l{Bh}}}}{f{{Bl{Bj}}}}}{{l{Bd}}}}{{{f{{l{Cf}}}}{f{{l{Cf}}}}}{{l{Bd}}}}{{{f{{l{An}}}}{f{Bf}}}{{l{Bd}}}}{{{f{{l{Ah}}}}{f{{l{Ah}}}}}{{l{Bd}}}}{{{f{{l{Bh}}}}{f{{l{Bh}}}}}{{l{Bd}}}}{{{f{{l{c}}}}{f{{l{c}}}}}{{l{Bd}}}Al}{{{f{{l{Bd}}}}{f{{l{Bd}}}}}{{l{Bd}}}}6{{{f{{l{Cf}}}}{f{{l{Cf}}}}}}8245139:{{{f{{l{c}}}}}GbDl}`{{{f{{l{Cf}}}}}{{A`{{Hd{Hb}}n}}}}{{{f{{l{Ah}}}}}{{A`{{Hd{Hb}}n}}}}`{{{f{{l{Ah}}}}}{{`{{Ol{}{{Cj{{Ch{Ab}}}}}}}}}}{{{f{{l{An}}}}}{{`{{Ol{}{{Cj{{Ch{{f{Bf}}}}}}}}}}}}{{{f{{l{An}}}}}{{`{On}}}}{{{f{Df{l{Ah}}}}}{{`{On}}}}{{{f{{l{c}}}}}MjAl}{{{f{Df{l{c}}}}}bDl}{{{f{{l{Ef}}}}AjA@`}{{A`{{Ch{Aj}}n}}}}{{{f{{l{Eh}}}}AjA@`}{{A`{{Ch{Kd}}n}}}}{{{f{{l{c}}}}AjA@`}{{A`{{Ch{Aj}}n}}}Fj}{{{f{{l{Ef}}}}AjA@`}{{A`{Mjn}}}}{{{f{{l{c}}}}AjA@`}{{A`{Mjn}}}Fj}{{{f{{l{Eh}}}}AjA@`}{{A`{Mjn}}}}{{DdGbAj}{{A`{{l{Bd}}n}}}}{{DdGbAjAj}{{A`{{l{c}}n}}}Al}{{DdGb}{{l{c}}}Al}{{DdGbAjAj}{{l{c}}}Al}{{{f{{l{c}}}}}{{l{c}}}Dl}{{{f{{l{c}}}}}{{f{Oj}}}Dl}{{{f{{l{Fb}}}}}Ab}{{{f{{l{Ef}}}}}Ab}{{{f{{l{Nh}}}}}Ab}{{{f{{l{Ob}}}}}Ab}{{{f{{l{Nn}}}}}Ab}{{{f{{l{Nl}}}}}Ab}{{{f{{l{Lb}}}}}Ab}{{{f{{l{Nd}}}}}Ab}{{{f{{l{Kl}}}}}Ab}{{{f{{l{Eh}}}}}Ab}{{{f{{l{Ah}}}}}Ab}5:081734269{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{Df{l{c}}}}Dd}bDl}{{{f{{l{Fd}}}}}{{l{Fd}}}}{{{f{{l{{Cb{c}}}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{Cf}}}}}{{l{Cf}}}}{{{f{{l{Ah}}}}}{{l{Ah}}}}{{{f{{l{An}}}}}{{l{An}}}}{{{f{{l{c}}}}}{{l{c}}}Al}{{{f{{l{Bd}}}}}{{l{Bd}}}}{{{f{{l{Bh}}}}}{{l{Bh}}}}{{{f{{l{c}}}}{f{Dn}}A@b}{{A`{Abn}}}Al}{{{f{{l{c}}}}Gbe}{{A`{{l{c}}n}}}M`{{Af{{f{Df{l{c}}}}}{{Ad{Ch}}}}}}{{{f{{l{c}}}}Ajdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{c}}}}Gbdd{Ch{Kf}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{Bd}}}}{f{{Bl{Jl}}}}c}{{A`{Abn}}}{{Ib{}{{Cj{{Ch{d}}}}}}}}{{{f{Df{l{c}}}}{f{{Bl{Jl}}}}e}{{A`{Abn}}}A@d{{Ib{}{{Cj{Ch}}}}}}{{{f{{l{An}}}}{f{{Bl{Jl}}}}c}{{A`{Abn}}}{{Ib{}{{Cj{{Ch{{f{Bf}}}}}}}}}}{{{f{{l{Bd}}}}c{Ch{d}}}{{A`{{l{Bd}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{c}}}}eCh}{{A`{{l{c}}n}}}Al{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{Bh}}}}c{Ch{{f{{Bl{Bj}}}}}}}{{A`{{l{Bh}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{An}}}}c{Ch{{f{Bf}}}}}{{A`{{l{An}}n}}}{{Ib{}{{Cj{Jl}}}}}}{{{f{{l{An}}}}ce}{{A`{{l{An}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Dn{{Ch{{f{Bf}}}}}{{Ad{{Ch{Ej}}}}}}}}{{{f{{l{Bd}}}}ce}{{A`{{l{Bd}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Dn{{Ch{d}}}{{Ad{{Ch{d}}}}}}}}{{{f{{l{Bh}}}}ce}{{A`{{l{Bh}}n}}}{{Ib{}{{Cj{Jl}}}}}{{Dn{{Ch{{f{{Bl{Bj}}}}}}}{{Ad{{Ch{{Gj{Bj}}}}}}}}}}{{{f{{l{c}}}}eg}{{A`{{l{c}}n}}}Al{{Ib{}{{Cj{Jl}}}}}{{Dn{Ch}{{Ad{Ch}}}}}}{{{f{{l{c}}}}{f{{l{Bd}}}}Ch}{{A`{{l{c}}n}}}Al}{{{f{{l{Bh}}}}{f{{l{Bd}}}}{Ch{{f{{Bl{Bj}}}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{Bd}}}}{f{{l{Bd}}}}{Ch{d}}}{{A`{{l{Bd}}n}}}}{{{f{{l{An}}}}{f{{l{Bd}}}}{Ch{{f{Bf}}}}}{{A`{{l{An}}n}}}}{{{f{Df{l{Ah}}}}}b}{{{f{Df{l{c}}}}d}bDl}{{{f{Df{l{Ah}}}}El}b}{{{f{Df{l{c}}}}Jl}bDl}{{{f{Df{l{c}}}}Mb}bDl}{{{f{{l{An}}}}Hb}{{l{An}}}}{{{f{{l{Fd}}}}Hb}{{l{Fd}}}}{{{f{{l{Bh}}}}Hb}{{l{Bh}}}}{{{f{{l{c}}}}Hb}{{l{c}}}Al}{{{f{{l{j}}}}Hb}{{l{j}}}}{{{f{{l{Bd}}}}Hb}{{l{Bd}}}}{{{f{{l{Ah}}}}Hb}{{l{Ah}}}}{{{f{{l{Cf}}}}Hb}{{l{Cf}}}}{{{f{{l{{Cb{c}}}}}}Hb}{{l{{Cb{c}}}}}Cd}{{{f{{l{Bd}}}}Hb{Ch{d}}}{{l{Bd}}}}{{{f{{l{Fd}}}}Hb{Ch{{f{{Bl{Bj}}}}}}}{{l{Fd}}}}{{{f{{l{An}}}}Hb{Ch{{f{Bf}}}}}{{l{An}}}}{{{f{{l{{Cb{c}}}}}}Hb{Ch{{Cb{c}}}}}{{l{{Cb{c}}}}}Cd}{{{f{{l{Bh}}}}Hb{Ch{{f{{Bl{Bj}}}}}}}{{l{Bh}}}}{{{f{{l{c}}}}HbCh}{{l{c}}}Al}{{{f{{l{Cf}}}}Hb{Ch{{f{Ab}}}}}{{l{Cf}}}}{{{f{{l{Ah}}}}Hb{Ch{{f{Ab}}}}}{{l{Ah}}}}{{{f{Df{l{c}}}}}bDl}{{{f{{l{c}}}}HbGb}{{l{c}}}Dl}0{{{f{{l{c}}}}d}{{l{c}}}Al}{{{f{{l{j}}}}d}{{l{j}}}}{{{f{{l{Bd}}}}d}{{l{Bd}}}}{{{f{{l{An}}}}d}{{l{An}}}}{{{f{{l{Fd}}}}d}{{l{Fd}}}}{{{f{{l{Bh}}}}d}{{l{Bh}}}}{{{f{{l{Bh}}}}F`}{{l{Bh}}}}{{{f{{l{j}}}}F`}{{l{j}}}}{{{f{{l{c}}}}F`}{{l{c}}}Al}{{{f{{l{Bd}}}}F`}{{l{Bd}}}}{{{f{{l{An}}}}F`}{{l{An}}}}{{{f{{l{Fd}}}}F`}{{l{Fd}}}}{{{f{{l{c}}}}Hb}{{Hf{{l{c}}{l{c}}}}}Dl}0{{{f{{l{c}}}}Bj}{{Ch{Aj}}}Al}{{{f{{l{Eh}}}}Bj}Mj}{{{f{{l{Ef}}}}Bj}Mj}{{{f{{l{c}}}}Bj}MjFj}{{{f{{l{j}}}}}{{f{{Bl{Oj}}}}}}{{{l{c}}{l{c}}}{}Al}{{{l{c}}e}{}Al{B`Bb}}{{{f{{l{c}}}}e}{}Al{B`Bb}}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}Bn}{{{f{{l{c}}}}}ChAl}{{{f{{l{Bd}}}}}{{Ch{Jl}}}}{{{f{{l{Bd}}}}}Mj}{{{f{{l{c}}}}}MjAl}{{{f{{l{Bh}}}}}Mj}{{{f{{l{c}}}}{Ch{Gb}}}{{l{c}}}Dl}{{{f{{l{c}}}}{f{e}}}{{A`{{l{c}}n}}}Dl{{If{{Bl{Jl}}}}A@f}}{{{f{{l{c}}}}{f{{l{Fb}}}}}{{A`{{l{c}}n}}}Dl}{{{f{{l{c}}}}{f{{Bl{A@h}}}}Mb}{{l{c}}}Dl}{{{f{{l{c}}}}{f{{Bl{A@h}}}}}{{l{c}}}Dl}{{{f{{l{j}}}}{f{{l{Fb}}}}}{{l{j}}}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{Dl{}{{Hh{Dj}}{A@j{Dj}}}}Dl}{{If{{Bl{Jl}}}}A@f}}{{{f{{l{c}}}}{f{{l{Fb}}}}}{{l{c}}}{{Dl{}{{Hh{Dj}}{A@j{Dj}}}}Dl}}{{{f{{l{j}}}}{f{c}}}{{l{j}}}{{If{{Bl{Jl}}}}A@f}}{{{f{{l{An}}}}{f{c}}}{{l{An}}}{{If{{Bl{Jl}}}}A@f}}{{{f{{l{Bh}}}}{f{c}}}{{l{Bh}}}{{If{{Bl{Jl}}}}A@f}}{{{f{{l{An}}}}{f{{l{Fb}}}}}{{l{An}}}}{{{f{{l{Bh}}}}{f{{l{Fb}}}}}{{l{Bh}}}}`{{{f{{l{c}}}}dA@l}{{Gj{{Gj{A@n}}}}}Dl}{{{f{{l{c}}}}}{{l{c}}}M`}{{{f{{l{An}}}}Gb}{{A`{Abn}}}}{{{f{Df{l{Ah}}}}El}b}{{{f{Df{l{Cf}}}}El}b}{{{f{{l{c}}}}}{{A`{{AAf{{AA`{f}}{AAd{{AAb{Gb}}}}}}n}}}Al}{{{f{{l{Ah}}}}}{{A`{{AAf{AAh{AAd{{AAb{Gb}}}}}}n}}}}{fc{}}{{{f{{l{Bh}}}}}{{l{An}}}}{{{f{{l{c}}}}}{{Gj{Ch}}}Al}{{{f{{l{c}}}}}{{AAj{Gj{Gj{Ch}}}}}Al}{{{l{c}}{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}}{}Al}10{{{f{{l{Ah}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cf}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ed}}}{{Ad{{A`{{Ch{c}}n}}}}}}E`}Dl}{{{f{{l{Ah}}}}e}{{A`{{l{g}}n}}}{}{{Af{{Ch{Ed}}}{{Ad{{A`{{Ch{c}}n}}}}}}E`}Dl}{{{f{{l{Cf}}}}c}{{A`{{l{Cf}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{Cf}}}}c}{{A`{{l{Ah}}n}}}{{Af{Ed}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{j}}}}c}{{A`{{l{j}}n}}}{{Af{{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{f{{l{c}}}}g}{{A`{{l{An}}e}}}Dl{}{{Af{{f{DfEj}}}{{Ad{{A`{be}}}}}}}}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{c{{A`{e}}}{}{}}0{{Ddg}{{A`{{l{i}}e}}}Cl{}{{Ib{}{{Cj{{A`{ce}}}}}}}{{Dl{}{{I`{c}}}}Dl}}{{}{{A`{c}}}{}}0{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{A`{{l{Ah}}n}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{A`{{Ch{Ab}}n}}}}}}}}{fAAl}0{{{f{{l{{Cb{c}}}}}}}{{A`{{l{{Cb{c}}}}n}}}Cd}{{{f{{l{Bd}}}}}{{A`{{l{Bd}}n}}}}{{{f{{l{Bh}}}}}{{A`{{l{Bh}}n}}}}{{{f{{l{An}}}}}{{A`{{l{An}}n}}}}{{{f{{l{c}}}}}{{A`{{l{c}}n}}}Al}{{{l{j}}}AAn}{{{f{{l{c}}}}{f{Ab}}}{{A`{{f{{l{c}}}}n}}}Dl}{{{f{Df{l{c}}}}}bDl}{{{f{{l{c}}}}Gb}{}Dl}{{{f{{l{c}}}}Bj}{{Ch{Aj}}}Al}{{{f{{l{Ef}}}}Bj}Mj}{{{f{{l{Eh}}}}Bj}Mj}{{{f{{l{c}}}}Bj}MjFj}{{{f{{l{Lb}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}Cd}{{{f{{l{Nn}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ob}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fd}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nd}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ef}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fb}}}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{{l{{Cb{c}}}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}Cd}{{{f{{l{Nd}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fd}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Fb}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Kl}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nn}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nl}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bd}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ob}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Nh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Ef}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lb}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Bh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Eh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{Lh}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{{f{{l{An}}}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{{f{{l{Cf}}}}}Gb}{{Ddc}{{l{e}}}Cl{{Dl{}{{I`{c}}}}Dl}}{{{f{{l{e}}}}c}{{l{e}}}Cl{{Dl{}{{I`{c}}}}Dl}}{{{f{{l{c}}}}{Gj{{Cn{Cl}}}}}{{l{c}}}Dl}{{{l{c}}Dd}{{l{c}}}Dl}{{{f{{Bl{AB`}}}}e}c{}{{ABb{{f{{l{Fb}}}}}{{Ad{c}}}}}}{{{l{j}}{Ch{Id}}}{{l{j}}}}{{{l{j}}{l{Bd}}}{{l{j}}}}{{{f{{l{c}}}}Mb}{{l{c}}}Dl}{{{f{{l{c}}}}}{}Al}{{{l{c}}}{}Al}{{{f{{l{c}}}}{f{{l{c}}}}}{}Al}{{{l{c}}{l{c}}}{}Al}23012332103232103232012332013232{{{f{{l{Ah}}}}{f{{l{c}}}}e}{{l{Ah}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{{l{Cf}}}}{f{{l{c}}}}e}{{l{Cf}}}Dl{{Af{{Ch{Ed}}Ch}{{Ad{{Ch{Ab}}}}}}}}{{{f{Df{l{j}}}}{f{{l{j}}}}}b}{{{f{{l{j}}}}{f{{l{Bd}}}}{f{{l{j}}}}}{{A`{{l{j}}n}}}}{{{f{{l{c}}}}{f{{l{Bd}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}{{Dl{}{{A@j{Dj}}}}}}````{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}65654654650654654````````````````{{fh}b}000{{{f{DfABl}}{f{Cl}}}b}{{{f{DfABl}}}b}{{{f{DfABn}}}b}{{{f{DfAC`}}c}b{{D`{}{{Cj{{Ch{d}}}}}}Jh}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{Ch}}}}Jh}}{{{f{Df{ACb{c}}}}e}bAl{{D`{}{{Cj{}}}}Jh}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}65{{{f{DfACh}}}b}{{{f{DfACj}}}b}{{{f{DfAC`}}}b}{{{f{DfACl}}}b}{{{f{Df{ACb{c}}}}}bAl}{{{f{Df{ACn{c}}}}}b{AD`A@f}}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfABl}}{Ch{{f{Cl}}}}}b}{{{f{DfABl}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{Ch{{f{Bl}}}}}bAl}{{{f{Df{ACn{c}}}}{Ch{e}}}b{AD`A@f}{{If{c}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABl}}{f{Ab}}}{{A`{bn}}}}{{{f{DfABn}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACh}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACj}}{f{Ab}}}{{A`{bn}}}}{{{f{DfAC`}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACl}}{f{Ab}}}{{A`{bn}}}}{{{f{Df{ACb{c}}}}{f{Ab}}}{{A`{bn}}}Al}{{{f{Df{ACb{c}}}}{f{Bl}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{Ch{{f{Bf}}}}}}}}Jh}}{{{f{DfACj}}c}b{{D`{}{{Cj{{Ch{{f{{Bl{Bj}}}}}}}}}}Jh}}{{{f{DfACf}}c}b{}}{{{f{Df{ACn{c}}}}e}b{AD`A@f}{{If{c}}}}{{{f{DfADb}}d}b}{{{f{Df{ADf{c}}}}}bAl}{{{f{DfACh}}c}b{{D`{}{{Cj{{f{Bf}}}}}}}}{{{f{DfACj}}c}b{{D`{}{{Cj{{f{{Bl{Bj}}}}}}}}}}{f{{f{c}}}{}}0000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000`{{{f{{ACn{c}}}}}{{ACn{c}}}{AD`A@f}}{{{f{ADb}}}ADb}{{{f{ADd}}}ADd}{{{f{{ADf{c}}}}}{{ADf{c}}}{JfAl}}{{f{f{Dfc}}}b{}}000{fb}000{{}ABl}{{}ABn}{Gb{{f{c}}}{}}0000000000{Gb{{f{Dfc}}}{}}0000000000{Gbb}0000000000{{{f{ACh}}}d}{{{f{ACj}}}d}{{{f{AC`}}}d}{{{f{{ACb{c}}}}}dAl}{{{f{ACd}}}d}{{{f{ACh}}}{{f{Oj}}}}{{{f{ACj}}}{{f{Oj}}}}{{{f{AC`}}}{{f{Oj}}}}{{{f{{ACb{c}}}}}{{f{Oj}}}Al}{{{f{ACd}}}{{f{Oj}}}}{ACf{{l{c}}}Dl}{{{f{DfABl}}}{{l{Ah}}}}{{{f{DfABn}}}{{l{Ah}}}}{{{f{DfACl}}}{{l{Ah}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{ACn{Bf}}}{{l{An}}}}{{{ACn{{Bl{Bj}}}}}{{l{Bh}}}}{ADb{{l{Bd}}}}{ADdADh}{{{ADf{c}}}{{l{c}}}Al}`{cc{}}0000000000{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{Dd{f{{Bl{c}}}}}ADj{}}{{Dd{f{{Bl{{Ch{c}}}}}}}ADj{}}{{{f{El}}GbGbDd}{{A`{{Cn{ACd}}n}}}}{{}Gb}0000000000{{{f{DfACh}}}{{Cn{Cl}}}}{{{f{DfACj}}}{{Cn{Cl}}}}{{{f{DfAC`}}}{{Cn{Cl}}}}{{{f{Df{ACb{c}}}}}{{Cn{Cl}}}Al}{{{f{DfACd}}}{{Cn{Cl}}}}{{}c{}}0000000000`{{DdGb{Ch{El}}}ABl}{{DdGb{Ch{El}}}ABn}{{DdGbGb}ACh}{{DdGbGb}ACj}{{DdGbGb}AC`}{{DdGb}ACl}{{DdGbGbEl}{{ACb{c}}}Al}{{DdGb}{{ACn{c}}}{AD`A@f}}{{DdGb}ADb}{{DdGb}ADd}{{DdGb}{{ADf{c}}}Al}{{DdGbGbElEl}{{ACb{c}}}Al}{{{f{DfACf}}}b}{{{f{DfADb}}}b}{{{f{DfADd}}}b}{{{f{Df{ADf{c}}}}}bAl}{fc{}}000{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{fAAl}0000000000{{}c{}}0000000000````````{{{f{DfACd}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}`{{{f{ACd}}}d}{{{f{ACd}}}{{f{Oj}}}}{{{f{DfACd}}}{{l{Ah}}}}{{{f{El}}GbGbDd}{{A`{{Cn{ACd}}n}}}}{{{f{DfACd}}}{{Cn{Cl}}}}````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Fn}}}Fn}{{f{f{Dfc}}}b{}}{fb}{{}Fn}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{Fn}}{f{Fn}}}d}{{f{f{c}}}d{}}00{{{f{Fn}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{Fn}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{{{f{Fn}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5``{{ADnDd}{{l{c}}}Dl}{{AE`{f{{l{c}}}}}{{l{c}}}Dl}10{{AE`DdEl}{{l{c}}}Dl}0{{ADnDd}{{A`{{l{c}}e}}}Dl{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dl{}}10{{AE`DdEl}{{A`{{l{c}}e}}}Dl{}}0`{AEbAEb}``{{AEdDdEl}e{}{{AEf{c}}}}{{eDdEl}AEf{}{{Jb{}{{Cj{c}}}}}}````{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{Gb{{f{c}}}{}}00{Gb{{f{Dfc}}}{}}00{Gbb}00{cc{}}00{{}Gb}00{{}c{}}00000{{{f{AEh}}}AEj}{{{f{AEl}}El}AEn}{{{f{DfAEj}}}Ch}{{{f{DfAEn}}}Ch}{{{f{Df{AF`{c}}}}}ChD`}21{{{f{Df{AF`{c}}}}}ChH`}`{{{f{AEj}}}{{Hf{Gb{Ch{Gb}}}}}}{{{f{AEn}}}{{Hf{Gb{Ch{Gb}}}}}}{{{f{{AF`{c}}}}}{{Hf{Gb{Ch{Gb}}}}}D`}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00<<<`````````````````````````{{fh}b}0000{{}Gn}{{}Jn}{{GnGn}Gn}{{JnJn}Jn}{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}3210{{{f{Gn}}}Jl}0{{{f{Jn}}}Bj}05432{f{{f{c}}}{}}000000{{{f{Df}}}{{f{Dfc}}}{}}000000{{{f{{Mn{c}}}}}{{Cn{Fl}}}Dl}{{{f{{Mn{c}}}}}{{Mn{c}}}Dl}{{{f{{Kh{c}}}}}{{Kh{c}}}Dl}{{{f{AFb}}}AFb}{{{f{Gn}}}Gn}{{{f{Jn}}}Jn}{{f{f{Dfc}}}b{}}0000{fb}0000{{{f{DfAFd}}}b}{GnGn}{JnJn}{{{f{Gn}}Gn}d}{{{f{Jn}}Jn}d}{{}{{Mn{c}}}Dl}{{}{{Kh{c}}}Dl}{{}Gn}{{}Jn}{Gb{{f{c}}}{}}{{{f{{Ml{c}}}}}fDl}111111{Gb{{f{Dfc}}}{}}000000{{GnGn}Gn}{{JnJn}Jn}{{}d}{{{f{Fl}}}{{Ch{Jl}}}}{{{f{{Kh{c}}}}}{{Ch{Jl}}}Dl}{{{Kh{c}}Jl}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{Jl}}}{{Kh{c}}}Dl}{Gbb}000000<;5{{{f{Gn}}{f{Gn}}}d}{{{f{Jn}}{f{Jn}}}d}7{{{f{DfGn}}c}b{{Ib{}{{Cj{Gn}}}}}}{{{f{DfJn}}c}b{{Ib{}{{Cj{Jn}}}}}}{{{Kh{c}}d}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{d}}}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}Gn}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}Gn}{{Kh{e}}}DlDl}{{{Kh{c}}Jn}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{Jn}}}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}{f{DfHl}}}{{A`{bHn}}}Dl}{{{f{AFb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Gn}}{f{DfHl}}}{{A`{bHn}}}}0000{{{f{Jn}}{f{DfHl}}}{{A`{bHn}}}}0000{cc{}}000000{Jl{{Ch{Gn}}}}{Bj{{Ch{Jn}}}}{JlGn}0{BjJn}010{cGn{{Ib{}{{Cj{Gn}}}}}}{cJn{{Ib{}{{Cj{Jn}}}}}}{{{f{Bf}}}{{Ch{Gn}}}}{{{f{Bf}}}{{Ch{Jn}}}}{{{f{{Kh{c}}}}}{{Ch{Jl}}}Dl}{{{f{{Kh{c}}}}}dDl}{{{f{Jn}}}d}{{{f{Fl}}}Jn}{{{f{{Kh{c}}}}}JnDl}0{{{f{{Kh{c}}}}}{{Ch{f}}}Dl}0{{{f{Df{Mn{c}}}}}{{f{Df{Kh{c}}}}}Dl}{{{f{Jn}}}Mb}{{}Gb}000000{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}{{GnGn}Gn}{{JnJn}Jn}{{{f{Gn}}Gn}d}{{{f{Jn}}Jn}d}{{}c{}}000000{Gn}{Jn}{{{f{Gn}}}d}{{{f{Jn}}}d}{{{f{{Kh{c}}}}}dDl}21{{{f{{Kh{c}}}}}MbDl}111{{{f{Gn}}}{{AFf{Gn}}}}{{{f{Jn}}}{{AFf{Jn}}}}{{{f{Gn}}}{{AFh{Gn}}}}{{{f{Jn}}}{{AFh{Jn}}}}{{}d}{{}{{f{{AFl{AFj}}}}}}{{{f{Fl}}}{{Ch{Mj}}}}{{{f{{Kh{c}}}}}{{Ch{Mj}}}Dl}{{{Kh{c}}}{{Kh{c}}}Dl}{{{Kh{c}}Ch}{{Kh{c}}}Dl}{{{f{{Kh{c}}}}{Kh{c}}}{{AFn{c}}}Dl}4231{{{Kh{c}}}{{Mn{c}}}Dl}{GnGn}{JnJn}{{{f{{Mn{c}}}}}{{Nb{{Kh{c}}}}}Dl}{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}{{{f{DfGn}}Gnd}b}{{{f{DfJn}}Jnd}b}{{{f{Df{Kh{c}}}}{Ch{Jl}}}bDl}{{{f{Df{Kh{c}}}}d}bDl}{{{f{DfJn}}d}b}{{{f{Df{Kh{c}}}}Jn}bDl}{{{f{Df{Kh{c}}}}Ch}bDl}033{{{f{Df{Kh{c}}}}Mb}bDl}{{{f{DfJn}}Mb}b}{{{Kh{c}}Mb}{{Kh{c}}}Dl}{{{Kh{c}}{Ch{Mb}}}{{Kh{c}}}Dl}{{GnGn}Gn}{{JnJn}Jn}>=10{{{Mn{c}}}{{Kh{c}}}Dl}{fc{}}0000{{{f{DfGn}}Gn}b}{{{f{DfJn}}Jn}b}{c{{A`{e}}}{}{}}000000{{}{{A`{c}}}{}}000000{{{f{{Mn{c}}}}}{{Ch{{Nb{{Kh{c}}}}}}}Dl}{{{f{{Mn{c}}}}}{{Ch{{Kj{{Kh{c}}}}}}}Dl}{fAAl}000000:9{{{f{{Mn{c}}}}}{{f{{AG`{Fl}}}}}Dl}{{}c{}}000000{AFdAFd}{{{f{{Mn{c}}}}}{{Kj{{Kh{c}}}}}Dl}````{{fh}b}{{{f{{AGb{c}}}}Gb}{{Hf{{AGb{c}}{AGb{c}}}}}Cd}{e{{AGb{c}}}Cd{{Ib{}{{Cj{{f{c}}}}}}}}{e{{AGb{c}}}Cd{{Ib{}{{Cj{{Ch{{f{c}}}}}}}}}}{{AGde}g{}{{Ib{}{{Cj{c}}}}}{}}0{{{f{K`}}}{{f{AGf}}}}{{{f{{AGb{c}}}}}{{f{AGf}}}Cd}{{{f{Df{AGb{c}}}}}{{f{DfAGf}}}Cd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{{{f{{AGb{c}}}}Gb}dCd}{{{f{{AGb{c}}}}}{{AGb{c}}}{JfCd}}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{{AGb{c}}}}}{{f{AGd}}}Cd}{{{f{{f{K`}}}}{f{{f{K`}}}}}d}{{{f{K`}}{f{K`}}}d}{{{f{{AGb{c}}}}{f{DfHl}}}{{A`{bHn}}}{AGhCd}}{{{Gj{c}}}{{AGb{c}}}Cd}{cc{}}{{GbAGd}{{AGb{c}}}Cd}{{{f{{AGb{c}}}}Gb}{{Ch{{f{c}}}}}Cd}{{}AGd}{{{f{Id}}{f{{AGb{c}}}}{f{{AGb{c}}}}}{{AGb{c}}}Cd}{{AGd{f{Id}}}{{AGb{c}}}Cd}{{{f{Id}}{f{{AGb{c}}}}}{{AGb{c}}}Cd}0{{}Gb}{{}c{}}{{{f{{AGb{c}}}}}{}Cd}{{{f{{AGb{c}}}}Gb}dCd}0{{fGb}d}{{{f{{AGb{c}}}}}{{AGl{{f{c}}{Gd{c}}AGj}}}Cd}{{{f{{AGb{c}}}}}{{AGl{AGj}}}Cd}{{{f{{AGb{c}}}}}GbCd}0`{db}{{{f{Df{AGb{c}}}}{Ch{Id}}}bCd}{{{f{Df{AGb{c}}}}GbGb}bCd}{{fGbGb}c{}}01{{{f{{AGb{c}}}}Gb}{{Hf{{Cn{Cl}}{Cn{Cl}}}}}Cd}0{{{f{K`}}}{{Cn{K`}}}}{{{f{{AGb{c}}}}}{{Cn{Cl}}}Cd}{fc{}}{g{{A`{{AGb{c}}e}}}Cd{}{{Ib{}{{Cj{{A`{{f{c}}e}}}}}}}}{g{{A`{{AGb{c}}e}}}Cd{}{{Ib{}{{Cj{{A`{{Ch{{f{c}}}}e}}}}}}}}{{AGdg}{{A`{ie}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}{}}0{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{K`}}}{{f{Bf}}}}{{}{{f{Bf}}}}{{{f{{AGb{c}}}}}{{Ch{{f{Id}}}}}Cd}{{{f{{AGb{c}}}}Gb}{{f{c}}}Cd}0{{{f{{AGb{c}}}}Gb}{}Cd}{{{f{{AGb{c}}}}}{{Gd{c}}}Cd}{{{f{{AGb{c}}}}}{}Cd}{{}c{}}{{{AGb{c}}{Ch{Id}}}{{AGb{c}}}Cd}{{{f{{AGb{c}}}}{Ch{Id}}}{{Cn{Cl}}}Cd}1`{{{f{Df{AGn{c}}}}}bCd}0{{{f{Df{AGn{c}}}}{Ch{c}}}bCd}{{{f{Df{AGn{c}}}}c}bCd}{{{f{Df{AGn{c}}}}{f{AGf}}}bCd}{{{f{Df{AGn{c}}}}{f{AGf}}}{{A`{bn}}}Cd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}{{AGn{c}}}Cd}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{AGn{c}}}{{l{{Cb{c}}}}}Cd}{cc{}}{{}Gb}{{}c{}}{{DdGb}{{AGn{c}}}Cd}{{{f{Df{AGn{c}}}}}AbCd}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{{f{DfAH`}}}b}{{{f{DfAH`}}{Ch{{f{AGf}}}}}b}{{{f{DfAH`}}{f{AGf}}}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}`{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{AHb}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{DdGb}{{Cn{AH`}}}}{{}{{N`{Dn}}}}{{}AGd}{{}Gb}{{}c{}}{{}d}`{{{Cn{Dn}}{N`{Dn}}AGd}b}{{{f{DfAH`}}}Ab}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6``````````````````````````````````````````````{{fh}b}00{{{f{AHd}}}Aj}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{c}}}}}}E`}}{{{f{AHj}}{f{Dn}}}AHj}{{{f{AHj}}{f{Dn}}}{{l{c}}}Dl}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bl{g}}}}}b{}{}{}{{Dn{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{e}{{Ad{c}}}}E`}}{{{f{AHl}}F`}{{l{Fb}}}}{{{f{AHl}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{AHn}}}{{A`{{l{Fb}}n}}}}`{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{AI`}}{f{El}}}{{A`{Abn}}}}0{{{f{AI`}}{f{El}}Fn}{{A`{Abn}}}}{{{f{F`}}}F`}{{{f{Fh}}}Fh}{{{f{AIb}}}AIb}{{f{f{Dfc}}}b{}}00{fb}00{{}F`}{{}Fh}{Gb{{f{c}}}{}}00{Gb{{f{Dfc}}}{}}00``{Gbb}00{{{f{F`}}{f{F`}}}d}{{{f{Fh}}{f{Fh}}}d}{{{f{AIb}}{f{AIb}}}d}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000{{{f{AIf}}}{{A`{Abn}}}}{{{f{AIf}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}`{{{f{AIh}}c}{{A`{AIhn}}}{}}{{{f{AIj}}{f{{l{Bd}}}}}{{A`{{l{c}}n}}}Dl}`{{{f{F`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Fh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AIb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Fh}}}F`}{cc{}}0{{{f{F`}}}Fh}1`{{DdcGb}AIl{}}{{DdGb}AIn}`{{{f{AJ`}}Gb}{{A`{Jjn}}}}{{{f{AJ`}}Gb}Jj}??{{{f{F`}}{f{Dfc}}}bADl}{{{f{Fh}}{f{Dfc}}}bADl}{{{f{AIb}}{f{Dfc}}}bADl}{{}Gb}00{{}c{}}00{{{f{AJb}}}{{A`{{l{Bd}}n}}}}{{{f{AJd}}}{{A`{{l{Bd}}n}}}}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0``{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AHd}}}{{Ch{Aj}}}}{{{f{AJf}}}{{Ch{c}}}{}}2{{{f{AHd}}}{{Ch{{Hf{cc}}}}}{}}``{{{f{AHn}}}{{A`{Gbn}}}}{{}F`}{{}Fh}{{{f{AJh}}GbGb}{{l{c}}}Dl}88``{{{f{AIf}}}{{A`{{Hd{Hb}}n}}}}{{{f{AJf}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{{f{AJj}}}Ab}0{{{f{AJl}}}AJl}{{{f{AJn}}{f{Dn}}A@b}{{A`{Abn}}}}{{{f{AK`}}c{Ch{e}}}{{A`{AK`n}}}{{Ib{}{{Cj{Jl}}}}}{}}{{{f{AK`}}ci}{{A`{AK`n}}}{{Ib{}{{Cj{Jl}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}`{{{f{AK`}}{f{{l{Bd}}}}{Ch{c}}}{{A`{AK`n}}}{}}{{{f{AKb}}Hb}{{l{c}}}Dl}{{{f{AKd}}Hbc}{{l{e}}}{}Dl}{{{f{AKf}}GbGb}AKf}0`{{{f{AHl}}d}{{l{c}}}Dl}{{{f{AHl}}F`}{{l{c}}}Dl}{{{f{AKh}}Bj}{{Ch{Aj}}}}{{{f{AHd}}}{{Ch{c}}}{}}{{{f{AKj}}{f{c}}}{{A`{AKjn}}}A@f}{{{f{AKl}}{f{c}}}AKlA@f}{{{f{AKn}}}{{Gj{{f{{Bl{Bj}}}}}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00{{{f{AHn}}}{{A`{AHnn}}}}9{{}c{}}00{{F`d}F`}{{Fhd}Fh}1010{{Fhc}Fh{{Ib{}{{Cj{d}}}}}}210{F`F`}{FhFh}`{{{f{AL`}}{f{{l{Bd}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dl}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DlDl{{Dn{ff}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}Dl}{{{l{c}}{l{e}}gik}{{l{m}}}DlDl{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DlDl{{ALb{ChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}g}bDlDl{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{An}}}DlDl{{Af{{f{DfEj}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDl{}{{Af{}{{Ad{g}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDl{ClALd}{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DlDlCl{{Af{}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDl{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DlDlDl{{ALf{ChChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDlClALh{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DlDlClALh{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DlDlALh{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DlDlDl{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{ClALd}ALh{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dl{{ALj{Ch}}}Dl}{{{f{{l{c}}}}e}{{l{g}}}DlALjDl}{{{f{{l{c}}}}g}{{l{i}}}DlCl{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{l{c}}g}{{l{i}}}DlCl{{Af{}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dl{ClALd}{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}0{{{f{{l{c}}}}}GbAl}0{{MbMb}Mb}{{{f{{l{Fb}}}}Jl}{{A`{bn}}}}{{{f{{ALl{Jl}}}}Jl}{{A`{bn}}}}````{{fh}b}{{{f{{l{c}}}}eALnd}{{Gj{Jl}}}Dl{{D`{}{{Cj{Ch}}}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{ALn}}}ALn}{{f{f{Dfc}}}b{}}{fb}{{}ALn}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{ALn}}{f{ALn}}}d}{{f{f{c}}}d{}}00{{{f{ALn}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{ALn}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{{{f{{Bl{f}}}}cJle}{{Gj{Jl}}}{{D`{}{{Cj{Ch}}}}}{{Dn{fGbf}{{Ad{d}}}}}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5`{{Gb{f{Df{Gj{d}}}}}b}```{{{f{AKf}}GbGb}AKf}0{{Gb{f{{Bl{Ff}}}}{f{DfFh}}}{{A`{{AM`{{l{Fb}}}}n}}}}{{{f{{Bl{Ff}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{AMbn}}}}{{{f{{Bl{Ff}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{Kb{Hb}}n}}}}{{Dd{f{{Bl{Ff}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{l{Fd}}n}}}}{{Dd{f{{Bl{Ab}}}}}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bl{Ab}}}}}{{A`{AMbn}}}}{{{f{{Bl{Ab}}}}}{{A`{{l{Fd}}n}}}}0```````````88`{AMdHb}00{{{f{Bf}}}{{A`{Ddn}}}}{{{f{Bf}}}{{A`{AMfn}}}}{{{f{AMh}}}Hb}{{{f{Bf}}}{{A`{bn}}}}444```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}000000000000000000000000000000000{{{f{AMj}}}d}{{{f{Jj}}}{{`{{D`{}{{Cj{Jj}}}}}}}}{{{f{Jj}}{f{Df{Gj{Jj}}}}}b}{{AMjd}AMj}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{Jj}}{f{Jj}}}Jj}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{l{An}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bd}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfAMl}}{Ch{{f{Bf}}}}}b}{{{f{DfAMj}}{f{AMj}}}{{A`{bn}}}}{{{f{DfAMl}}}b}{{{f{DfAMl}}{f{Bf}}}b}{{{f{AMj}}F`}{{l{Fb}}}}{eAMn{}{{Ib{}{{Cj{c}}}}}}0{{AGde}AN`{}{{Ib{}{{Cj{c}}}}}}0{{{f{El}}}{{Ch{{f{El}}}}}}{{{f{Jj}}}Jj}{{{f{{L`{KnKl}}}}}{{`{Jh}}}}{{{f{{L`{LfLb}}}}}{{`{Jh}}}}{{{f{Dd}}}{{f{ANb}}}}{{{f{Dd}}}{{f{ANd}}}}{{{f{Dd}}}{{f{Bf}}}}{{{f{Dd}}}{{f{{Bl{Bj}}}}}}{{{f{El}}}{{f{El}}}}{{{f{Oj}}}{{f{El}}}}{{{f{ANf}}}{{f{El}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}5{{{f{{L`{LnLb}}}}}{{`{Jh}}}}6{f{{f{c}}}{}}0000000000000000000000000000000000000000000{{{f{Df}}}{{f{Dfc}}}{}}0000000000000000000000000000000000000000000{El{{Cn{El}}}}{{{AOb{Bf}}}AOd}{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{{f{AOh}}{f{El}}}{{A`{Abn}}}}{{{f{Jj}}{f{El}}}Jj}{{{f{El}}El}El}{{{f{{L`{LfLb}}}}Ld}{{L`{LfLb}}}}{{{f{{L`{LlLb}}}}Ld}{{L`{LlLb}}}}{{{f{AOh}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LnLb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LlLb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LjLh}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{KnKl}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{{L`{LfLb}}}}{f{El}}Fn}{{A`{Abn}}}}{{{f{AMj}}{f{El}}Fn}{{A`{Abn}}}}`{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}00000000{{{f{{l{Eh}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Ef}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{Dd}}}Dd}{{{f{{L`{ce}}}}}{{L`{ce}}}DlDl}{{{f{AOj}}}AOj}{{{f{AOd}}}AOd}{{{f{AMj}}}AMj}{{{f{AOl}}}AOl}{{{f{Jj}}}Jj}{{{f{AOn}}}AOn}{{{f{El}}}El}{{{f{B@`}}}B@`}{{{f{Oj}}}Oj}{{{f{Ld}}}Ld}{{{f{Ob}}}Ob}{{{f{Nn}}}Nn}{{{f{Fb}}}Fb}{{{f{Nl}}}Nl}{{{f{Nh}}}Nh}{{{f{Nd}}}Nd}{{{f{Kl}}}Kl}{{{f{Lb}}}Lb}{{{f{Eh}}}Eh}{{{f{Ef}}}Ef}{{{f{Kn}}}Kn}{{{f{Ln}}}Ln}{{{f{An}}}An}{{{f{Bh}}}Bh}{{{f{Fd}}}Fd}{{{f{Bd}}}Bd}{{{f{Lj}}}Lj}{{{f{Lf}}}Lf}{{{f{Ll}}}Ll}{{{f{B@b}}}B@b}{{{f{AGd}}}AGd}{{{f{B@d}}}B@d}{{f{f{Dfc}}}b{}}000000000000000000000000000000000{fb}000000000000000000000000000000000{{{f{Dd}}{f{Dd}}}B@f}{{{f{DfOj}}El}b}{B@he{}{{AMn{c}}ALd}}0{{B@hAGd}e{}{{AN`{c}}ALd}}0{{f{f{c}}}B@f{}}{{{f{El}}}d}00{{{AOb{Bf}}}El}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{}Dd}{{}B@j}{{}AOj}{{}AOd}{{}Jj}{{}AOn}{{}El}{{}AGd}{Gb{{f{c}}}{}}{{{f{Dd}}}f}111{{{f{{L`{ce}}}}}fDlDl}2222222222222222222222222222222222222222{Gb{{f{Dfc}}}{}}000{{{f{Df{L`{ce}}}}}{{f{Df}}}DlDl}1111111111111111111111111111111111111111{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{AMlc}AMj{{Ib{}{{Cj{{Ch{{f{Bf}}}}}}}}}}{Gbb}0000000000000000000000000000000000000000000{{{f{AOh}}}{{f{El}}}}{{{f{{L`{LnLb}}}}}{{f{El}}}}{{{f{{L`{LfLb}}}}}{{f{El}}}}{{{f{{L`{LlLb}}}}}{{f{El}}}}{{{f{{L`{KnKl}}}}}{{f{El}}}}{{{f{{L`{LjLh}}}}}{{f{El}}}}{{{f{AMj}}}{{f{El}}}}{{{f{Jj}}}El}{{{f{Oj}}}{{f{El}}}}`{fc{{B@n{B@l}}}}0{{{f{Dd}}{f{c}}}d{{If{Bf}}A@f}}{{{f{AOj}}{f{AOj}}}d}{{{f{Jj}}{f{Jj}}}d}{{{f{AOn}}{f{AOn}}}d}{{{f{El}}{f{AGd}}}d}{{{f{El}}{f{El}}}d}{{{f{B@`}}{f{B@`}}}d}{{{f{Oj}}{f{Oj}}}d}{{{f{Ld}}{f{Ld}}}d}{{{f{AGd}}{f{AGd}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{Jj}}{f{Jj}}d}d}{{{f{AMj}}{f{{l{An}}}}}}{{{f{AMj}}{f{AMj}}}}{{{f{AMj}}{f{Bf}}}}021{{f{f{c}}}d{}}00000000000000000000000000{{{f{{L`{ce}}}}}OjDlDl}{{{f{AOd}}{f{Bf}}}{{Ch{Jl}}}}{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{AMlAMj}{B@j{{N`{AOd}}}}{{{f{Dd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{AOj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AOd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AOl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Jj}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{AOn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{El}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{B@`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Oj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Ld}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{AGd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{B@d}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Bf}}}Dd}{cc{}}{GlDd}{{{f{Ej}}}Dd}{EjDd}33{{{l{Lb}}}{{L`{LnLb}}}}4{{{l{Kl}}}{{L`{KnKl}}}}555555555555{dJj}{{{f{Bf}}}Jj}{{{Ch{c}}}Jj{{BA`{Jj}}}}{cJjBAb}{{{f{{Bl{Bj}}}}}Jj}:::{JjEl}{{{f{Jj}}}El}{{{f{AGd}}}El}={{{f{Jj}}}Oj}>{{{f{BAd}}}Oj}{{{f{B@d}}}Ld}{cc{}}000000000000000000000{BAfAGd}{BAhAGd}2{{{f{AGd}}d}El}{{{l{Fb}}{N`{AOd}}dAOj}AMj}{{DdcLd}{{L`{LlLb}}}{{Ib{}{{Cj{BAj}}}}}}{{DdcLd}{{L`{LlLb}}}{{Ib{}{{Cj{{Ch{BAj}}}}}}}}{{{l{Fb}}AOj}AMj}{cDd{{Ib{}{{Cj{Dd}}}}}}{cDd{{Ib{}{{Cj{Ej}}}}}}{cDd{{Ib{}{{Cj{{f{Dd}}}}}}}}{cDd{{Ib{}{{Cj{{Eb{Bf}}}}}}}}{cDd{{Ib{}{{Cj{B@l}}}}}}{cDd{{Ib{}{{Cj{{f{B@l}}}}}}}}{cDd{{Ib{}{{Cj{{f{Bf}}}}}}}}{cDd{{Ib{}{{Cj{{Cn{Bf}}}}}}}}{{Ddc}{{L`{KnKl}}}{{Ib{}{{Cj{BAl}}}}}}{{Ddc}{{L`{KnKl}}}{{Ib{}{{Cj{{Ch{BAl}}}}}}}}{{DdcLd}{{L`{LfLb}}}{{Ib{}{{Cj{AMd}}}}}}{{DdcLd}{{L`{LfLb}}}{{Ib{}{{Cj{{Ch{AMd}}}}}}}}{{Ddc}{{L`{LnLb}}}{{Ib{}{{Cj{AMh}}}}}}{{Ddc}{{L`{LnLb}}}{{Ib{}{{Cj{{Ch{AMh}}}}}}}}{{{f{Bf}}}Dd}0{EjDd}{{{f{{l{An}}}}{f{{AOb{Bf}}}}AOj}{{A`{AMjn}}}}{{{Gj{c}}AGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{Gj{c}}AGd}{{ALd{}{{ANh{e}}{ANj{c}}{ANl{g}}}}}{ANn{AO`{e}}}Jf{{H`{}{{Cj{e}}}}JhIlIn}}{{GbcAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{GbAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{DddGbAOj}AMj}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AOd}}Jl}{{f{Bf}}}}{{{f{{L`{KnKl}}}}Gb}{{A`{Jjn}}}}{{{f{{L`{LjLh}}}}Gb}{{A`{Jjn}}}}{{{f{{L`{LfLb}}}}Gb}{{A`{Jjn}}}}{{{f{{L`{LnLb}}}}Gb}{{A`{Jjn}}}}{{{f{{L`{LlLb}}}}Gb}{{A`{Jjn}}}}{{{f{AOh}}Gb}{{A`{Jjn}}}}{{{f{AMj}}Gb}{{A`{Jjn}}}}{{{f{{L`{LfLb}}}}Gb}Jj}{{{f{{L`{LlLb}}}}Gb}Jj}{{{f{{L`{LjLh}}}}Gb}Jj}{{{f{{L`{LnLb}}}}Gb}Jj}{{{f{{L`{KnKl}}}}Gb}Jj}{{{f{AOh}}Gb}Jj}{{{f{AMj}}Gb}Jj}{{{f{AOd}}}{{f{{AOb{Bf}}}}}}{{}El}0000000000000000000000000{{{f{AOd}}Jl}{{Ch{{f{Bf}}}}}}{{{f{AMj}}}{{f{{N`{AOd}}}}}}{{{f{El}}}{{Ch{{Gj{Gb}}}}}}{{{f{Jj}}}{{Ch{{f{Bf}}}}}}{{{f{BAn}}Gb}Jj}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AMj}}{f{AMj}}}}{{{f{AMj}}{f{Bf}}}}{{{f{AMj}}{f{{l{An}}}}}}201{{{f{Dd}}{f{Dfc}}}bADl}{{{f{Jj}}{f{Dfc}}}bADl}{{{f{AOn}}{f{Dfc}}}bADl}{{{f{El}}{f{Dfc}}}bADl}{{{f{Oj}}{f{Dfc}}}bADl}{{{f{Ld}}{f{Dfc}}}bADl}{{{f{AGd}}{f{Dfc}}}bADl}{{{f{B@d}}{f{Dfc}}}bADl}{{{f{Jj}}{f{Dfc}}d}bADl}{{{f{{L`{LnLb}}}}}{{l{Nh}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{Jj}}}Jl}{ElEl}{{}Gb}0000000000000000000000000000000000000000000{{{f{El}}}{{Ch{{f{El}}}}}}{{{f{AGd}}}{{Ch{{f{AGd}}}}}}{{}c{}}0000000000000000000000000000000000000000000{{}Ff}01{{BB`El}{{A`{Mjn}}}}{{{L`{LnLb}}}Ab}{{{L`{LlLb}}}Ab}{{{L`{LjLh}}}Ab}{{{L`{LfLb}}}Ab}{{{L`{KnKl}}}Ab}{AMjAb}{JjJj}{DdEj}{{{f{El}}}d}00{{{f{Jj}}}d}111{{{f{AMj}}}d}0212{{{f{AOd}}}d}23330323{{{f{AGd}}}d}34343444434444340{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{AGl{cgAGj}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AMj}}}BBb}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{El}}}{{f{El}}}}{{{f{AOd}}}Gb}{{{f{AMj}}}Gb}{DdBBd}{{{f{AMj}}{f{AMj}}}}{{{f{AMj}}{f{Bf}}}}{{{f{AMj}}{f{{l{An}}}}}}012{{{f{AMj}}{f{AMj}}}{{A`{{Hf{AMjAMj}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}{{{f{El}}{f{El}}}{{A`{dn}}}}{{{f{AOn}}}{{Ch{El}}}}{{{f{AMj}}}Mj}{{{f{El}}{f{El}}}{{A`{Eln}}}}{{{f{DfB@j}}{f{{N`{AOd}}}}}{{A`{bn}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}03{{{f{{L`{LnLb}}}}}{{l{Nh}}}}1{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{AMj}}}{{A`{Gbn}}}}{{{f{AMj}}}{{f{Dd}}}}{{{f{Oj}}}{{f{Dd}}}}`{{{f{{L`{LnLb}}}}}{{l{Kl}}}}9{{}c{}}0{{DdGbAOj}AMl}{{Ddc}{{L`{LfLb}}}{{If{{Bl{AMd}}}}}}{{Ddc}{{L`{LlLb}}}{{If{{Bl{BAj}}}}}}{{Ddc}{{L`{LnLb}}}{{If{{Bl{AMh}}}}}}{{Ddc}{{L`{LnLb}}}{{If{{Bl{{Ch{AMh}}}}}}}}{{Ddc}{{L`{KnKl}}}{{If{{Bl{{Ch{BAl}}}}}}}}{{Ddc}{{L`{LfLb}}}{{If{{Bl{{Ch{AMd}}}}}}}}{{Ddc}{{L`{KnKl}}}{{If{{Bl{BAl}}}}}}{{Ddc}{{L`{LlLb}}}{{If{{Bl{{Ch{BAj}}}}}}}}{{{N`{AOd}}}B@j}{{DdEl}Oj}{{{l{c}}}{{L`{ec}}}DlDl}{{}B@`}{{{f{DfBBb}}}Ch}{{{f{AMj}}{f{{l{An}}}}}}{{{f{AMj}}{f{Bf}}}}{{{f{AMj}}{f{AMj}}}}021{{{f{AMj}}}Gb}5{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{KnKl}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{LnLb}}}}{{{f{Dd}}{f{Dd}}}{{Ch{B@f}}}}{{{f{Jj}}{f{Jj}}}{{Ch{B@f}}}}{{{f{Ld}}{f{Ld}}}{{Ch{B@f}}}}{{{f{{L`{ce}}}}}{{f{{l{e}}}}}DlDl}{{{f{AMj}}}{{f{{l{Fb}}}}}}{{{f{{L`{LjLh}}}}}{{Ch{Gb}}}}{{{f{DfAMl}}{f{Bf}}}{{Hf{Jld}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{L`{KnKl}}}}{f{{l{An}}}}{Ch{{f{AMf}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{{L`{LfLb}}}}{f{{l{An}}}}{Ch{{f{AMf}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{AOd}}{f{AOd}}}d}{{{f{{L`{LjLh}}}}}Gb}{{{f{{L`{LnLb}}}}}{{l{Nh}}}}{{{f{{L`{LlLb}}}}}{{l{Lb}}}}{{{f{DfOj}}Dd}b}{{{f{Df{L`{LfLb}}}}Ld}b}{{{f{Df{L`{LlLb}}}}Ld}b}{{{f{Df{L`{LfLb}}}}LdDd}{{A`{bn}}}}{{{f{Df{L`{LfLb}}}}Dd}{{A`{bn}}}}{{{f{BBb}}}{{Hf{Gb{Ch{Gb}}}}}}{{{f{AMj}}d}AMj}{{{f{AMj}}F`}AMj}{{{f{Jj}}}{{Eb{Bf}}}}{{{f{{L`{LfLb}}}}{f{Bf}}}{{A`{{l{An}}n}}}}{{{f{{L`{KnKl}}}}{f{Bf}}}{{A`{{l{An}}n}}}}{{{f{{L`{LnLb}}}}{f{Bf}}}{{l{An}}}}{{{f{Jj}}{f{El}}}{{Ch{Jj}}}}{{{f{{L`{LjLh}}}}{f{{L`{LjLh}}}}}}{{{f{{l{Ah}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Cf}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}{f{Ab}}}{{A`{Abn}}}{}}0000000000{{{f{{L`{LfLb}}}}}Ld}{{{f{{L`{LlLb}}}}}Ld}{{{f{{L`{LfLb}}}}}{{f{{Ch{Dd}}}}}}{{{f{AMj}}B@`d}{{Cn{Cl}}}}{{{f{El}}B@`}AGd}{{{f{Oj}}B@`}BAd}{LdB@d}{{{f{El}}DdB@`}BAd}{Ld{{f{Bf}}}}{{{f{AMj}}{f{{AOb{Bf}}}}BBf}AMj}{{{f{AMj}}}{{A`{AMjn}}}}{{{f{AMj}}}AMj}{{{f{AGd}}}{{f{AGd}}}}{fc{}}000000000000000000000000000000000{{{f{El}}}El}{{{f{AGd}}}BBh}{{{f{{L`{LjLh}}}}Gb}{{A`{{Eb{{L`{LjLh}}}}n}}}}{fEj}{{{f{{L`{KnKl}}}}{f{Bf}}}{{A`{{l{An}}n}}}}{{{f{{L`{LnLb}}}}{f{Bf}}}{{l{An}}}}{{{f{{L`{LfLb}}}}{f{Bf}}}{{A`{{l{An}}n}}}}333{{{f{Jj}}{f{Jj}}}d}{{{f{{L`{LfLb}}}}{Ch{{f{AMf}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{L`{KnKl}}}}{Ch{{f{AMf}}}}{f{{l{An}}}}}{{A`{{L`{KnKl}}n}}}}{g{{A`{AMne}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{B@h{{A`{eg}}}{}{{AMn{c}}ALd}{}}0{{B@hAGd}{{A`{eg}}}{}{{AN`{c}}ALd}{}}0{{{f{Jj}}}{{A`{cn}}}Mh}{c{{A`{e}}}{}{}}0000000000000000000000000000000000000000000{{}{{A`{c}}}{}}0000000000000000000000000000000000000000000{{{f{Jj}}{f{El}}}{{A`{Jjn}}}}{{{f{El}}B@`}{{A`{AGdn}}}}{f{{A`{GlBBj}}}}000{fAAl}0000000000000000000000000000000000000000000{{{f{AGd}}}AGd}{{{f{AMj}}}{{A`{AMjn}}}}{{{f{AMj}}}d}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}cJf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AMj}}}{{A`{AAnn}}}}1{{{f{El}}Jj}d}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}gJf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{}c{}}0000000000000000000000000000000000000000000{Gbc{}}0{{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}{Ch{Id}}}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{DfDd}}B@l}{{A`{bHn}}}}{{{f{DfDd}}BBl}{{A`{bHn}}}}{{{f{DfDd}}{f{Bf}}}{{A`{bHn}}}}{{{f{El}}}Jj}```````````{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{{{f{AMj}}{f{AMj}}}{{A`{{Hf{AMjAMj}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}`````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}BBn}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{{}b}{Gbb}{{{f{DfBBn}}}b}2{cc{}}6{{}Gb}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{}d}4``````````````````````````{{{f{BC`}}}{{f{Bf}}}}???>>>`{{nBC`}n}{nn}>{{{f{BC`}}}f}??>>><<<`{{{f{BCb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BC`}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{n}}{f{DfHl}}}{{A`{bHn}}}}0=={cBC`{{BA`{{Eb{Bf}}}}}}>{BCdn}{BCfn}{BChn}{BCjn}{BCln}{BCnn}{{}{{Gf{{f{Bf}}BCb}{{Ad{b}}}}}}{{}Gb}00{{}c{}}00{cnALh}{{{f{Bf}}}BC`}````{{{Gf{{f{Bf}}BCb}{{Ad{b}}}}}b}{cnBD`}{fEj}0{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{f{{A`{GlBBj}}}}0{fAAl}00999{{{f{n}}c}n{{ABb{{f{Bf}}}{{Ad{Ej}}}}}}``````````````````{{fh}b}00{{{f{DfAAn}}{Gj{Ff}}{f{{BDb{El}}}}}{{A`{bn}}}}{{{f{DfAAn}}{Gj{Ab}}{f{{BDb{El}}}}}{{A`{bn}}}}{{{f{AAn}}{f{Dn}}}{{Gj{Ff}}}}0{{{f{AAn}}{f{{l{Bd}}}}}{{A`{AAnn}}}}{{{Gj{Ff}}}AAn}{{{f{AAn}}{f{{Bl{Dd}}}}}{{A`{AAnn}}}}0{{{f{AAn}}{f{{Bl{Dd}}}}{f{{BDb{El}}}}d}{{A`{AAnn}}}}{{{f{AAn}}HbGb}AAn}{{{f{AAn}}}AAn}{{{f{DfAAn}}}{{f{DfAAn}}}}{{{f{DfAAn}}{f{Bf}}e}{{A`{{f{DfAAn}}n}}}BDd{{ABb{{f{Ff}}}{{Ad{c}}}}}}{{{f{DfAAn}}Gbe}{{A`{{f{DfAAn}}n}}}BDd{{ABb{{f{Ff}}}{{Ad{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Df}}}{{f{Dfc}}}{}}0000{{{f{AAn}}}{{`{{D`{}{{Cj{Gb}}}}}}}}6{{{f{BDf}}}BDf}{{{f{BDh}}}BDh}8{{f{f{Dfc}}}b{}}00{fb}00`{{{f{AAn}}{f{Bf}}}{{A`{{f{Ff}}n}}}}{{{f{AAn}}e}{{A`{{Gj{{f{Ff}}}}n}}}{{If{Bf}}}{{Ib{}{{Cj{c}}}}}}{{}BDh}{{}AAn}{Gb{{f{c}}}{}}0000{Gb{{f{Dfc}}}{}}0000{Gbb}0000{{{f{AAn}}{f{Bf}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{Bf}}}{{A`{Ffn}}}}{{{f{AAn}}e}AAn{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{f{{BDj{DdA@l}}}}}AAn}{{{f{AAn}}{Ch{{f{{Bl{c}}}}}}}{{A`{AAnn}}}{}}{{{f{AAn}}}{{Gj{El}}}}9{{{f{{BDb{BAd}}}}}AAn}{{{f{{BDb{El}}}}}AAn}{{{f{BDh}}{f{BDh}}}d}{{{f{AAn}}{f{AAn}}}d}00{{f{f{c}}}d{}}00{{{f{AAn}}}Gb}`{{{f{AAn}}e}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{Gj{Ff}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}}{{Gj{Oj}}}}{{{f{AAn}}AIb}{{A`{AAnn}}}}{{{f{AAn}}{f{{l{Bd}}}}}{{A`{AAnn}}}}{{{f{BDf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BDh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AAn}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}0000{cAAn{{Ib{}{{Cj{Ab}}}}}}{cAAn{{Ib{}{{Cj{Ff}}}}}}{{{f{{Bl{BDl}}}}}{{A`{AAnn}}}}{{{f{{Bl{BDl}}}}{f{{BDb{El}}}}}{{A`{AAnn}}}}{{c{f{{BDb{El}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{f{BDl}}}}}}}}{{{f{AAn}}Gb}{{Ch{{Gj{Jj}}}}}}{{{f{AAn}}{f{Bf}}}{{Ch{Gb}}}}{{{f{AAn}}}{{Gj{{f{Dd}}}}}}{{{f{AAn}}}{{Gj{Dd}}}}{{{f{AAn}}}{{Gj{{f{Bf}}}}}}{{{f{AAn}}}{{f{{Bl{Ff}}}}}}{{{f{DfAAn}}}{{f{Df{Gj{Ff}}}}}}{{{f{AAn}}Gb}{{A`{BDln}}}}{{{f{AAn}}Gb{f{DfBDl}}}{{A`{bn}}}}{{{f{AAn}}Gb{f{DfBDl}}}b}{{{f{AAn}}}{{Ch{{A`{Eln}}}}}}`{{{f{AAn}}e}{{A`{BDnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}{Gj{Ff}}{f{BE`}}}{{A`{{Hf{Ff{Gj{Ff}}C`}}n}}}}1{{{f{AAn}}{Gj{Ff}}dd}{{A`{BDnn}}}}{{{f{BDh}}{f{Dfc}}}bADl}{{{f{AAn}}{Ch{Gb}}}AAn}{{{f{AAn}}}Gb}{{{f{AAn}}{f{{Bl{Ff}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{{Bl{Ff}}}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{{Bl{Ff}}}}}{{f{DfAAn}}}}{{{f{AAn}}{Oh{Gb}}}f}{{{f{AAn}}BEb}f}{{{f{AAn}}{BEd{Gb}}}f}{{{f{AAn}}{BEf{Gb}}}f}{{{f{AAn}}Gb}f}{{{f{AAn}}{BEh{Gb}}}f}{{{f{AAn}}{f{Bf}}}f}{{{f{AAn}}{BEj{Gb}}}f}{{}Gb}0000{{{f{DfAAn}}Gbc}{{A`{{f{DfAAn}}n}}}BDd}{{}c{}}000000{{AAnDd}{{l{j}}}}{{{f{AAn}}}{{A`{{l{Bd}}n}}}}{{{f{AAn}}}d}1{{{f{AAn}}}{{`{Jd}}}}{{{f{AAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{{f{AAn}}B@`d}BEl}{{{f{AAn}}}BEn}{AAnBF`}{{{f{AAn}}}Gb}5{{{f{AAn}}}{{A`{{Ch{Ab}}n}}}}{{{f{AAn}}BDf}{{A`{{Ch{Ab}}n}}}}122{{{Gj{Ff}}}{{A`{AAnn}}}}{{{Gj{Ff}}}AAn}111{{{f{DfBEl}}}Ch}{{{f{DfBEn}}}Ch}{{{f{AAn}}}AAn}{{{f{AAn}}}{{`{{Ol{}{{Cj{{f{Ab}}}}}}}}}}{{{f{AAn}}ed}{{A`{{Gj{AAn}}n}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}0{{AAne}{{A`{cn}}}{}{{Dn{AAn}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}e}{{A`{cn}}}{}{{Dn{{f{DfAAn}}}{{Ad{{A`{cn}}}}}}}}{{AAngc}{{A`{en}}}{}{}{{Dn{AAnc}{{Ad{{A`{en}}}}}}}}{{{f{DfAAn}}}{{Ch{Ff}}}}{{{f{AAn}}{f{AAn}}}d}{{{f{DfAAn}}{f{Bf}}Dd}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{Bf}}c}{{A`{{f{DfAAn}}n}}}BFb}{{{f{DfAAn}}Gbc}{{A`{{f{DfAAn}}n}}}BDd}{{{f{DfAAn}}Ddc}{{A`{{f{DfAAn}}n}}}BFb};{{{f{AAn}}{Gj{Ff}}{f{BFd}}}{{A`{{Hf{Ff{Gj{Ff}}C`}}n}}}}`{{{f{AAn}}{f{Ab}}dd{Ch{Kf}}}{{A`{AAnn}}}}0{{{f{AAn}}Gbdd{Ch{Kf}}}{{A`{AAnn}}}}{{{f{AAn}}}{{BDb{El}}}}{{{f{AAn}}{f{AAn}}}{{A`{bn}}}}{{{f{AAn}}e}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}Gb}{{Ch{{f{Ff}}}}}}{{{f{AAn}}c}{{A`{AAnn}}}{{BFf{Gb}}}}{{{f{AAn}}c}{{A`{{Gj{Ff}}n}}}{{BFh{Dd}}}}3{{{f{AAn}}e{f{{N`{{BDb{El}}}}}}}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}e{f{{BDb{El}}}}}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{DfAAn}}e}{{A`{bn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{AAn}}}{{Hf{GbGb}}}}{{{f{AAn}}Hb}AAn}{{{f{AAn}}}d}{{{f{DfAAn}}}b}{{{f{AAn}}}Gb}{{{f{BEl}}}{{Hf{Gb{Ch{Gb}}}}}}{{{f{BEn}}}{{Hf{Gb{Ch{Gb}}}}}}{{{f{AAn}}HbGb}AAn}00{{{f{AAn}}cFh}{{A`{AAnn}}}{{BFh{Dd}}}}{{{f{DfAAn}}cFh}{{A`{{f{DfAAn}}n}}}{{BFh{Dd}}}}{{{f{AAn}}Hb}{{Hf{AAnAAn}}}}0{{{f{DfAAn}}}{{`{{D`{}{{Cj{AAn}}}}}}}}{{AAnGbd}{{Gj{AAn}}}}{{{f{AAn}}BDf}{{A`{{Ch{Ab}}n}}}}{{{f{AAn}}{Ch{Gb}}}AAn}{{{f{AAn}}{f{{l{Fb}}}}}{{A`{AAnn}}}}{AAn{{Gj{Ff}}}}{{{f{AAn}}{f{{l{Fb}}}}}AAn}{{{f{AAn}}{f{{l{Fb}}}}d}AAn}{{{f{AAn}}}{{f{AAn}}}}{{{f{AAn}}BFj}{{A`{{AAf{AAh{AAd{{AAb{Gb}}}}}}n}}}}{fc{}}00{fEj}{{{f{DfAAn}}{Ch{{f{Bf}}}}{Ch{{AAj{Ej{Gj{Ej}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{Ch{{f{Bf}}}}{Ch{{AAj{Dd{Gj{Dd}}}}}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{Bf}}e}{{A`{{f{DfAAn}}n}}}BDd{{ABb{{f{Ab}}}{{Ad{{A`{cn}}}}}}}}{{{f{DfAAn}}Gbe}{{A`{{f{DfAAn}}n}}}BDd{{ABb{{f{Ff}}}{{Ad{{A`{cn}}}}}}}}{c{{A`{e}}}{}{}}000{{{Hf{{BFl{{Cn{Cl}}}}{f{{BDb{BAd}}}}}}}{{A`{AAnn}}}}1{BFn{{A`{AAnn}}}}{{c{f{{BDb{El}}}}}{{A`{AAnn}}}{{D`{}{{Cj{{A`{{f{BDl}}n}}}}}}}}{{{f{AAn}}{f{Bf}}}{{A`{Gbn}}}}{{}{{A`{c}}}{}}0000{f{{A`{GlBBj}}}}{fAAl}0000{{{f{AAn}}{Ch{{f{{Bl{Ej}}}}}}BDh{Ch{{Hf{HbGb}}}}}{{A`{AAnn}}}}{{{f{AAn}}d{Ch{{Gj{Dd}}}}BDh{Ch{{Hf{HbGb}}}}}{{A`{AAnn}}}}1{{{f{AAn}}c}{{A`{AAnn}}}{{BFh{Dd}}}}{{{f{AAn}}c{f{Bf}}BG`}{{A`{AAnn}}}{{BFh{Dd}}}}0{{{f{AAn}}{f{AAn}}}{{A`{AAnn}}}}{{{f{DfAAn}}{f{AAn}}}{{A`{{f{DfAAn}}n}}}}{{{f{DfAAn}}{f{AAn}}}b}{{}c{}}0000{{{f{AAn}}}Gb}{{{f{DfAAn}}c}{{A`{{f{DfAAn}}n}}}BDd}{{{f{DfAAn}}c{f{{BDb{El}}}}}{{A`{{f{DfAAn}}n}}}BDd}{{{f{DfAAn}}Ff}{{f{DfAAn}}}}{{{f{AAn}}Dd{Ch{Jl}}}{{A`{AAnn}}}}{{{f{DfAAn}}Dd{Ch{Jl}}}{{f{DfAAn}}}}`````{{fh}b}0{{FfFf}}{{{f{Ff}}c}{}{B`Mh}}{{Ffc}{}{B`Mh}}{{{f{Ff}}{f{Ff}}}}{{{f{Ff}}{f{C`}}}Ff}0000000{{{f{Ff}}{f{C`}}AjA@`}Ff}1{{{f{Ff}}{f{C`}}Bj}Ff}{{{f{DfFf}}{f{Ff}}}{{A`{{f{DfFf}}n}}}}{{{f{Ff}}F`}{{l{Fb}}}}{{{f{Ff}}}{{A`{{f{{l{Cf}}}}n}}}}{{{f{Ff}}}{{f{Ab}}}}{{{f{BGb}}}{{f{Ab}}}}{{{f{Ff}}}{{Ch{{f{BGb}}}}}}{{{f{Ff}}}{{Ch{{f{Ab}}}}}}{{{f{BGb}}}Ab}{{{f{Ff}}}{{A`{{f{{l{Bh}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{Ff}}}{{Ch{BGd}}}}{{{f{Ff}}{f{Ff}}}{{A`{Ffn}}}}?{{FfFf}}{{{f{Ff}}{f{Ff}}}}110{{{f{Ff}}}{{A`{{f{{l{Bd}}}}n}}}}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{Ff}}{f{El}}}{{A`{Ffn}}}}{{{f{BGb}}{f{El}}}{{A`{BGbn}}}}10{{{f{Ff}}{f{El}}Fn}{{A`{Ffn}}}}{{{f{BGb}}{f{El}}Fn}{{A`{BGbn}}}}{{{f{Ff}}}{{A`{{f{AMj}}n}}}}{{{f{Ff}}}Ff}0{{{f{BGb}}}BGb}{{f{f{Dfc}}}b{}}0{fb}0{{{f{Ff}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ff}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ff}{Gb{{f{c}}}{}}0{Gb{{f{Dfc}}}{}}0{{{f{Ff}}{f{Ff}}}}{{Ffc}{}{B`Mh}}{{{f{Ff}}c}{}{B`Mh}}{{FfFf}}{{{f{Ff}}{f{Ff}}}{{A`{Ffn}}}}{Gbb}0?{{{f{Ff}}}{{f{El}}}}{{{f{BGb}}}{{f{El}}}}{{{f{Ff}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Ff}}{f{Ff}}}d}{{{f{Ff}}{f{Ff}}}{{A`{{l{Bd}}n}}}}011{{{f{Ff}}}{{A`{Ffn}}}}{{{f{DfFf}}{f{Ff}}}{{A`{{f{DfFf}}n}}}}{{{f{Ff}}JjGb}{{A`{Ffn}}}}{{{f{Ff}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Ef}}}}n}}}}{{{f{Ff}}}{{Eb{Oj}}}}{{{f{Ff}}AIb}{{A`{Ffn}}}}{{{f{Ff}}{f{{l{Bd}}}}}{{A`{Ffn}}}}{{{f{Ff}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGb}}{f{DfHl}}}{{A`{bHn}}}}{BGbFf}{cc{}}{AbFf}1{{AbGb}{{A`{BGbn}}}}{{DdGb{f{El}}}Ff}{{{f{Ff}}GbGb}Ff}{{{f{Ff}}Gb}{{A`{Jjn}}}}{{{f{Ff}}}Gb}{{{f{Ff}}}Jn}{{{f{Ff}}}{{Ch{{Cn{Fl}}}}}}{{{f{Ff}}Gb}{{Ch{{f{K`}}}}}}{{{f{Ff}}Gb}Jj}{{{f{Ff}}{f{Ff}}}{{A`{{l{Bd}}n}}}}0{{{f{Ff}}}d}{{{f{BGb}}}d}{{{f{Ff}}{Ch{Gb}}}Ff}{{{f{Ff}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fb}}}}n}}}}{{}Gb}0{{}c{}}0{BDdFf}{FfFf}{BGbFf}{FfAAn}{{{f{DfFf}}}{{f{DfAb}}}}>={{{f{Ff}}}{{A`{{l{Bd}}n}}}}000{{{f{Ff}}}{{l{Bd}}}}0{{{f{Ff}}}Mb}{{{f{Ff}}}Gb}{{{f{BGb}}}Gb}{{{f{Ff}}}{{A`{{f{{l{Ah}}}}n}}}}{{{f{Ff}}{f{Ff}}}{{A`{{l{Bd}}n}}}}0{{{f{Ff}}}{{A`{Mjn}}}}0{{FfFf}}{{{f{Ff}}{f{Ff}}}}{{Ffc}{}{B`Mh}}{{{f{Ff}}c}{}{B`Mh}}{{{f{Ff}}}{{f{Dd}}}}{{{f{BGb}}}{{f{Dd}}}}{{Ddc}Ff{}}{{DdMjGb}BGb}{{Dd{f{El}}}Ff}{{DdEl}BGb}{{{f{Ff}}GbGb}Ff}{{DdMjGb}Ff}=={{{f{Ff}}}Gb}{{{f{Ff}}}{{Cn{Jd}}}}>{{{f{Ff}}}Ff}>;<={{{f{DfFf}}Dd}b}{{{f{Ff}}{f{{Bl{Hb}}}}}{{A`{Ffn}}}}0{{{f{BGb}}Gb}BGb}3{{{f{Ff}}Ajdd{Ch{Kf}}}{{A`{Ffn}}}}{{{f{Ff}}Gbdd{Ch{Kf}}}{{A`{Ffn}}}}{{{f{DfFf}}Mb}b}{{{f{Ff}}Hb}Ff}{{{f{DfFf}}}b}{{{f{Ff}}{Ch{Kf}}}Ff}{{{f{Ff}}HbGb}Ff}{{{f{Ff}}F`}{{A`{Ffn}}}}{{{f{Ff}}Hb}{{Hf{FfFf}}}}{{{f{Ff}}}{{A`{{f{{l{An}}}}n}}}}{{{f{Ff}}{f{El}}}{{A`{Ffn}}}}{{{f{BGb}}{f{El}}}{{A`{BGbn}}}}{{{f{Ff}}}{{A`{{f{{l{j}}}}n}}}}{{FfFf}}{{{f{Ff}}{f{Ff}}}}{{Ffc}{}{B`Mh}}{{{f{Ff}}c}{}{B`Mh}}{{{f{Ff}}{Ch{Gb}}}Ff}{{{f{Ff}}{f{{l{Fb}}}}}{{A`{Ffn}}}}{FfAb}{BGbAb}{{{f{Ff}}{f{{Bl{Jl}}}}}{{A`{Ffn}}}}{{{f{Ff}}{f{{Bl{Jl}}}}}Ff}{{{f{Ff}}{f{{l{Fb}}}}}Ff}{fc{}}0{{{f{Ff}}}Ff}{{{f{BGb}}}Ab}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAl}0{{{f{Ff}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Fb}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Nl}}}}n}}}}{{{f{Ff}}}{{A`{{f{{l{Ob}}}}n}}}}{{{f{Ff}}}{{A`{Ffn}}}}0{{{f{Ff}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{Ff}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}{{}c{}}0{{FfDd}Ff}{{{f{Ff}}c}Ff{B`Mh}}{{{f{Ff}}{f{{l{Bd}}}}{f{Ff}}}{{A`{Ffn}}}}0`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{BGf}}}BGf}{{f{f{Dfc}}}b{}}{fb}{{}BGf}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{BGf}}{f{BGf}}}d}{{f{f{c}}}d{}}00{{{f{BGf}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{BGf}}{f{Dfc}}}bADl}`{{}Gb}{{}c{}}`{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}``4````````````````````````````````{{fh}b}000{{{f{BDn}}}{{A`{AAnn}}}}`{{{f{BGh}}}{{f{{Bl{{BGj{Jl}}}}}}}}{{{f{BDn}}c}{{A`{AAnn}}}{{Af{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{{{f{C`}}}{{l{Ah}}}}{f{{f{c}}}{}}0000000{{{f{Df}}}{{f{Dfc}}}{}}0000000{{{f{BGh}}}BGh}{{{f{C`}}}C`}{{{f{BDn}}}BDn}{{{f{BGl}}}BGl}{{f{f{Dfc}}}b{}}000{fb}000;{{}BGh}{{}C`}{Gb{{f{c}}}{}}00{{{f{BGn}}}f}11111{Gb{{f{Dfc}}}{}}0000000`{{BH`c}{}BHb}{Gbb}000{{{f{DfBGh}}}b}1111{{{f{BGh}}{f{BGh}}}d}{{{f{C`}}{f{C`}}}d}{{f{f{c}}}d{}}00000`{{{f{BHd}}}Jl}{{{f{BGh}}}{{f{{Bl{Jl}}}}}}{{{f{BDn}}}{{A`{AAnn}}}}{{{f{DfBGh}}}{{f{Df{Gj{Jl}}}}}}{{{f{BGh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{C`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BDn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BGl}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{Bf}}BGl}Dd}{cc{}}000{{{Gj{{Hf{{Gj{Jl}}{Gj{{BGj{Jl}}}}}}}}}BGh}{{{Gj{{Gj{{Hf{Jl{BGj{Jl}}}}}}}}}BGh}{{{Gj{{Hf{Jl{BGj{Jl}}}}}}}BGh}33{BGhC`}44{BHfBGl}{cBGh{{Ib{}{{Cj{{Hf{Jl{BGj{Jl}}}}}}}}}}{cBGh{{Jb{}{{Cj{{Hf{Jl{BGj{Jl}}}}}}}}}}{{{f{C`}}Gb}BHd}{{{f{BDn}}}{{f{C`}}}}{{{f{DfBDn}}}{{f{DfC`}}}}{{{f{C`}}}{{l{Fb}}}}{{{f{BHh}}dd}{{A`{C`n}}}}{{{f{BDn}}}{{A`{AAnn}}}}{{{f{DfC`}}}{{f{DfBGh}}}}{{}Gb}0000000{{}c{}}0000000{C`BGh}1{{{f{BGh}}}}{BGh}310{{{f{BHd}}}d}{{{f{C`}}}d}{{{f{BGh}}}d}{{{f{BGh}}}{{BHl{{BHj{{Gd{Jl}}}}{Gd{{BGj{Jl}}}}}}}}{{{f{C`}}}BHn}{{{f{BDn}}}{{Gj{Ff}}}}{{{f{BDn}}{Ch{{Hf{HbGb}}}}}{{Gj{Ff}}}}={{{f{BHd}}}Gb}{{{f{C`}}}Gb}?????{{{Gj{Jl}}{Gj{{BGj{Jl}}}}d}BGh}{{{f{AAn}}{Gj{Ff}}C`{Ch{{Gj{Dd}}}}}BDn}{{{f{DfBHn}}}Ch}{{{f{DfBHn}}Gb}Ch}{{{f{BDn}}c}{{A`{AAnn}}}{{Dn{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{f}{{{f{C`}}}BH`}{{{f{BDn}}AjA@`}{{A`{AAnn}}}}{{BDne}BDn{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{C`}}HbGb}BGn}{{{f{DfBGh}}}b}{{{f{DfC`}}}b}{{{f{BDn}}Bj}{{A`{AAnn}}}}{{{f{BDn}}}{{A`{AAnn}}}}{C`{{Gj{Jl}}}}0{BDnC`}{{{f{DfBDn}}}C`}{fc{}}000{fEj}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{f{{A`{GlBBj}}}}{fAAl}0000000{C`C`}{{{f{C`}}}{{f{BGh}}}}{{{f{C`}}}{{f{{Gj{{AAb{Jl}}}}}}}}={{}c{}}0000000`````{{{f{BGh}}c}Ab{{Dn{{Hf{Jl{f{{BGj{Jl}}}}}}}{{Ad{Ch}}}}IlIn}}{{{f{BGh}}c}Ab{{Dn{{Hf{Jl{f{{BGj{Jl}}}}}}}{{Ad{}}}}IlIn}}{{{f{{Bl{{AAb{Jl}}}}}}c}Ab{{Dn{{AAb{Jl}}}{{Ad{Ch}}}}IlIn}}{{{f{{Bl{{AAb{Jl}}}}}}c}Ab{{Dn{{AAb{Jl}}}{{Ad{}}}}IlIn}}{{{f{{Bl{c}}}}e{Ch{BI`}}}{{ALl{c}}}{BIbBId}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{Bl{c}}}}{f{Id}}e{Ch{BI`}}}{{ALl{c}}}{BIbBId}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{l{c}}}}JlJl}{{l{c}}}Dl}{{{f{{Gj{{AAb{Jl}}}}}}{f{{Bl{{Cn{Cl}}}}}}}d}{{{f{BIf}}{f{C`}}}Ab}{{BIhBIh}BIh}0`{{{f{BIj}}{f{AAn}}{f{C`}}}{{A`{Abn}}}}{{{f{BIj}}}{{A`{{f{Dd}}n}}}}````````````````````````````````````{{fh}b}00{{{f{DfBIl}}Jj}{{Ch{b}}}}{{{f{DfBIn}}{f{Jj}}}b}0{f{{f{c}}}{}}00{{{f{Df}}}{{f{Dfc}}}{}}00{{{f{BIl}}}BIl}{{{f{BIn}}}BIn}{{{f{BDl}}}BDl}{{f{f{Dfc}}}b{}}00{fb}00{{{f{{Bl{c}}}}}El{{Ij{El}}}}{{}BDl}{Gb{{f{c}}}{}}00{Gb{{f{Dfc}}}{}}00{Gbb}00{{{f{BDl}}{f{BDl}}}d}{{f{f{c}}}d{}}00{{{f{BDl}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{Hf{{f{El}}Gb}}}BIl}{{{Hf{{f{El}}Gb}}}BIn}22{{gGb}{{BDb{El}}}{{BA`{Dd}}}{{BA`{El}}}{{D`{}{{Cj{{Gj{{Hf{ce}}}}}}}}}}{{}Gb}00{{}c{}}00{BIlAb}{BInAb}{{{f{El}}Gb}BIl}{{{f{El}}Gb}BIn}{{{Gj{Jj}}}BDl}{{{f{DfBIl}}Gb}Ab}{{{f{DfBIn}}Gb}Ab}{{{f{{Bl{BDl}}}}{Ch{Gb}}}{{A`{{BDb{El}}n}}}}0{{{f{{Bl{BDl}}}}{Ch{Gb}}}{{A`{{Gj{El}}n}}}}{fc{}}00{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{fAAl}00==={{{f{{Bl{AAn}}}}}{{A`{AAnn}}}}{{{f{{Bl{AAn}}}}d}{{A`{AAnn}}}}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{AAn{f{{Bl{Dd}}}}{f{{Bl{Dd}}}}{Ch{Dd}}{f{AAn}}}AAn}{{BF`c}{{A`{AAnn}}}{{Dn{BJ`{f{Df{BJd{BJb}}}}{f{Df{BJd{BJf}}}}}{{Ad{{A`{bn}}}}}}}}{{{f{BJh}}{f{{Bl{Jl}}}}dd}AAn}{{{f{BJh}}{f{AAn}}{f{Ab}}{f{Ab}}BJj}{{A`{AAnn}}}}`{{{f{Bf}}{f{Bf}}}Dd}{{BJl{N`{{Bl{Dd}}}}}BBd}{{{f{BFn}}Gb}{{Hf{BFnBFn}}}}{{{f{AHd}}}Aj}{{{f{BJn}}}Aj}{{{f{BK`}}{f{{Bl{A@h}}}}Mb}AAn}0{{{f{BK`}}{f{{Bl{A@h}}}}}AAn}0{{{f{BKb}}{Ch{{Gj{{f{Bf}}}}}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}{{BF`d}BF`}{{{BKd{c}}{Ch{{N`{BKf}}}}}{{BKd{c}}}BKh}{{{f{Ab}}}{{A`{Abn}}}}{BBdBBd}{{{BKj{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBdBBd}}{{BKlBKl}}{{{f{BG`}}Hb{Ch{{f{AMf}}}}}{{A`{Hbn}}}}0{{{f{BKn}}{f{Ab}}}{{A`{Abn}}}}1{{BL`c}BF`{{If{{Bl{BBd}}}}}}6`{{BBdc}BBd{{BA`{Dd}}}}{{}BBd}{{BBdd}BBd}{{}BLb}{c{{A`{BBdn}}}{{If{{Bl{BBd}}}}}}{{{f{{N`{ce}}}}}{{f{e}}}A@fBLd}{{BLfd}BLf}`{{{f{BLh}}}d}00`{{BBdc}BBd{{BA`{BBd}}}}{{{N`{BLh}}BLj}{{A`{BF`n}}}}75{{BBdcd}BBd{{BA`{BBd}}}}{{{f{DfACd}}}b}{{{f{DfACf}}}b}{{{f{DfACd}}{Ch{{f{Ab}}}}}{{A`{bn}}}}{{{f{DfACf}}{Ch{c}}}b{}}{{{f{DfACd}}{f{Ab}}}{{A`{bn}}}}{{{f{DfACf}}c}b{}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{c}}}}}}E`}}{{BL`c{N`{{BDb{El}}}}}BF`{{Dn{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{{BBdc{BLn{{N`{BLl}}}}}BBd{{Dn{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBdBBdc{BLn{{N`{BLl}}}}}BBd{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{{f{BBd}}{f{Dfc}}f}{{A`{BM`n}}}{{Af{{f{BBd}}f}{{Ad{{A`{BM`n}}}}}}}}{{{f{AHj}}{f{Dn}}}AHj}{{{f{AHj}}{f{Dn}}}{{l{c}}}Dl}{{BBdc{f{{Bl{BBd}}}}{BLn{{N`{BLl}}}}}BBd{{Dn{{f{Df{Bl{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBdBMb{f{{Bl{BBd}}}}dd}BBd}{{ce{BLn{{N`{BLl}}}}d}BBd{{Dn{{f{Df{Bl{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}{{If{{Bl{BBd}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}i{f{Df{Bl{g}}}}}b{}{}{}{{Dn{{Ch{e}}{f{g}}}{{Ad{g}}}}}}{{{f{{AHh{}{{AHf{c}}}}}}g}{{AHh{}{{AHf{c}}}}}{}{}{{Dn{e}{{Ad{c}}}}E`}}{{BBdBBdHbEl}BBd}{BFn{{N`{Cl}}}}{{{f{BMd}}}{{Ch{Gb}}}}{BMfBBd}{BMhBBd}{BBdBBd}3210{{{f{AHl}}F`}{{l{Fb}}}}{{BBdF`}BBd}{{{f{BJn}}F`}{{l{Fb}}}}{{cFh}BBd{{If{{Bl{BBd}}}}}}{{{f{AHl}}{f{{Bl{Ff}}}}{f{Fh}}}{{A`{{l{Fb}}n}}}}{{{f{AHn}}}{{A`{{l{Fb}}n}}}}6{{{f{BJn}}}{{A`{{l{Fb}}n}}}}{cBBd{{BA`{BBd}}}}{{{f{BMj}}}{{f{{Bl{Oj}}}}}}``{BBdBMf}{eAMn{}{{Ib{}{{Cj{c}}}}}}{cBFn{{Ib{}{{Cj{{Ch{b}}}}}}}}{cBFn{{Ib{}{{Cj{b}}}}}}2{{AGde}AN`{}{{Ib{}{{Cj{c}}}}}}0{{AGdc}BFn{{Ib{}{{Cj{{Ch{b}}}}}}}}{{AGdc}BFn{{Ib{}{{Cj{b}}}}}}`{{{f{Df{BMl{c}}}}}{{A`{{BDb{BAd}}n}}}BMn}{{{f{BLh}}}{{f{AGf}}}}{{{f{BJn}}}{{f{AGf}}}}{{{f{BN`}}}{{f{AGf}}}}{{{f{BFn}}}{{f{AGf}}}}{{{f{DfBJn}}}{{f{DfAGf}}}}{{{f{DfBFn}}}{{f{DfAGf}}}}{{{f{Mj}}}Jj}{{{f{BNb}}}{{f{{l{Bh}}}}}}{{{f{BNd}}{Ch{{f{Bf}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNd}}{Ch{{f{Bf}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNd}}{Ch{{f{Bf}}}}Lddd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNd}}{Ch{{f{Bf}}}}Ldd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{{N`{c}}}}}BNf{BNhA@f}}{{{f{BNj}}}{{f{{l{Ah}}}}}}{{{f{{N`{ce}}}}}{}A@fBLd}{{{f{{N`{c}}}}}OfBNl}{{{f{BNn}}}{{f{BBd}}}}{{{f{{N`{ce}}}}}{{f{c}}}A@fBLd}{{{f{ANf}}}{{f{El}}}}{{{f{BO`}}}{{f{Ab}}}}{{{f{DfBJn}}}{{A`{Gbn}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{BOb}}}{{f{{l{An}}}}}}{{{Gj{BBd}}}BBd}{{{f{BNd}}{Ch{{f{Bf}}}}d}{{A`{{L`{LnLb}}n}}}}{{{N`{{BOd{c}}e}}}{{N`{ce}}}{}BLd}{{{N`{{Bl{{BOd{c}}}}e}}}{{N`{{Bl{c}}e}}}{}BLd}{{{f{Bf}}}BBd}{{BBd{Ch{Jl}}}BBd}{{{f{BOf}}}{{A`{{l{An}}n}}}}{{{f{BOf}}}{{l{An}}}}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMf}}}{{L`{LlLb}}}}`{{{BKd{{Cn{BKh}}}}{Ch{{N`{{BDb{El}}}}}}}{{A`{BOhn}}}}{{{BOj{c}}{f{{BDb{El}}}}}{{A`{{BOl{c}}n}}}BOn}{{{C@`{c}}{f{{BDb{El}}}}}{{A`{{C@b{c}}n}}}BOn}{{{C@d{c}}Gb}{{A`{C@fn}}}BKh}{{{C@h{c}}{f{{BDb{El}}}}}{{A`{{C@j{c}}n}}}BOn}{{{f{Df{BKd{c}}}}}{{A`{C@ln}}}BKh}`{BBdC@n}{{BBdCA`BBd}BBd}{{BKlBKl}}{{BLbBLb}BLb}{{{f{BJn}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBLb}}BLb}b}210{{{f{BLb}}}Jl}04321{f{{f{c}}}{}}0000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}{{f{c}}}A@fBLd}1111111111111{{{f{Df}}}{{f{Dfc}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{BF`JlcFh}BF`{{If{{Bl{BBd}}}}}}{BFn{{Cn{Cl}}}}{{{f{BJn}}}{{Ch{{Cn{Fl}}}}}}``{BF`BF`}```{{{f{CAb}}{f{Dd}}}{{A`{Ddn}}}}{{CAd{Gj{BBd}}}{{A`{BBdn}}}}{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{{f{BN`}}{f{Df{Bl{Ff}}}}}{{A`{{Ch{Ff}}n}}}}{{{f{CAf}}FfFf}{{A`{Ffn}}}}{{CAd{Gj{BBd}}}BBd}{{{f{CAh}}}b}{{BBdEl}BBd}{{{f{BJn}}{f{El}}Fn}{{A`{Abn}}}}{{BF`{CAj{{f{Bf}}ElA@l}}d}BF`}{{{f{AI`}}{f{El}}}{{A`{Abn}}}}3{{{f{AOh}}{f{El}}}{{A`{Abn}}}}{{BF`Eld}BF`}2{{{f{AI`}}{f{El}}Fn}{{A`{Abn}}}}{{{f{AOh}}{f{El}}Fn}{{A`{Abn}}}}{{BBdElFn}BBd}`{BBdCAl}{{{f{{N`{c}}}}}{{Ch{{f{ALh}}}}}{ALhA@f}}{BBdBBd}{{{f{CAn}}}{{A`{Abn}}}}1`{{{f{CB`}}}{{A`{{l{Kl}}n}}}}{{{f{BFn}}Gb}d}{{{f{CBb}}{f{Ab}}}{{A`{Abn}}}}{{{f{BJn}}{f{Ab}}}{{A`{Abn}}}}{{{f{CBb}}c}{{A`{Abn}}}Bb}{{{f{BJn}}}{{Gh{{Gd{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{Gb}}}}}}}}``{{{f{BJn}}}{{f{{Gj{{Cn{Cl}}}}}}}}{{{f{DfBJn}}}{{f{Df{Gj{{Cn{Cl}}}}}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBdBBdBBd}BBd}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{BBdBBd}BBd}10{{{f{CAh}}}CAh}{{{f{BF`}}}BF`}{{{f{BL`}}}BL`}{{{f{BLj}}}BLj}{{{f{CBd}}}CBd}{{{f{CBf}}}CBf}{{{f{CBh}}}CBh}{{{f{CBj}}}CBj}{{{f{CBl}}}CBl}{{{f{BE`}}}BE`}{{{f{BFd}}}BFd}{{{f{CBn}}}CBn}{{{f{BG`}}}BG`}{{{f{CC`}}}CC`}{{{f{CCb}}}CCb}{{{f{CCd}}}CCd}{{{f{CCf}}}CCf}{{{f{AB`}}}AB`}{{{f{A@h}}}A@h}{{{f{CCh}}}CCh}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{CCn}}}CCn}{{{f{CD`}}}CD`}{{{f{BJj}}}BJj}{{{f{CDb}}}CDb}{{{f{CDd}}}CDd}{{{f{CDf}}}CDf}{{{f{CDh}}}CDh}{{{f{CDj}}}CDj}{{{f{CDl}}}CDl}{{{f{CDn}}}CDn}{{{f{CE`}}}CE`}{{{f{CEb}}}CEb}{{{f{CEd}}}CEd}{{{f{CEf}}}CEf}{{{f{CEh}}}CEh}{{{f{CEj}}}CEj}{{{f{CEl}}}CEl}{{{f{CEn}}}CEn}{{{f{CF`}}}CF`}{{{f{CFb}}}CFb}{{{f{CFd}}}CFd}{{{f{CFf}}}CFf}{{{f{CFh}}}CFh}{{{f{CFj}}}CFj}{{{f{CFl}}}CFl}{{{f{CFn}}}CFn}{{{f{CG`}}}CG`}{{{f{CGb}}}CGb}{{{f{CGd}}}CGd}{{{f{CGf}}}CGf}{{{f{CGh}}}CGh}{{{f{BNn}}}BNn}{{{f{BBd}}}BBd}{{{f{CGj}}}CGj}{{{f{CA`}}}CA`}{{{f{{BLn{c}}}}}{{BLn{c}}}Jf}{{{f{CGl}}}CGl}{{{f{CGn}}}CGn}{{{f{CH`}}}CH`}{{{f{CHb}}}CHb}{{{f{CHd}}}CHd}{{{f{CHf}}}CHf}{{{f{BMb}}}BMb}{{{f{CHh}}}CHh}{{{f{CHj}}}CHj}{{{f{CHl}}}CHl}{{{f{CHn}}}CHn}{{{f{CI`}}}CI`}{{{f{CIb}}}CIb}{{{f{CId}}}CId}{{{f{CIf}}}CIf}{{{f{CIh}}}CIh}{{{f{CIj}}}CIj}{{{f{BKl}}}BKl}{{{f{CAd}}}CAd}{{{f{BLb}}}BLb}{{{f{CIl}}}CIl}{{{f{CIn}}}CIn}{{{f{{N`{ce}}}}}{{N`{ce}}}A@f{BLdJf}}{{{f{CJ`}}}CJ`}{{{f{CJb}}}CJb}{{{f{A@b}}}A@b}{{{f{BFj}}}BFj}{{{f{BFn}}}BFn}{{{f{Mj}}}Mj}{{{f{BAd}}}BAd}{{{f{A@`}}}A@`}{{{f{BI`}}}BI`}{{{f{CJd}}}CJd}{{{f{CJf}}}CJf}{{{f{CJh}}}CJh}{{{f{BJn}}}{{N`{BJn}}}}{{f{f{Dfc}}}b{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{fb}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000````{{{f{CJj}}}{{Ch{{f{CJl}}}}}}{{{f{CBd}}}{{Ch{{f{CJl}}}}}}{{{f{CBh}}}{{Ch{{f{CJl}}}}}}``{{{f{BG`}}{f{BG`}}}B@f}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}B@f{CJnA@f}BLd}{{{f{{Bl{BBd}}}}}BBd}{{BLfCDb}BLf}{{{f{CDb}}{f{CDh}}}d}`{{{f{{Bl{Ff}}}}}{{A`{Ffn}}}}{cBBd{{BA`{Dd}}}}{BF`{{A`{AAnn}}}}{c{{A`{{Gj{AAn}}n}}}{{Jb{}{{Cj{BF`}}}}}}{B@he{}{{AMn{c}}ALd}}0{{B@hAGd}e{}{{AN`{c}}ALd}}0{{ADnDd}{{l{c}}}Dl}{{AE`{f{{l{c}}}}}{{l{c}}}Dl}10{{AE`DdEl}{{l{c}}}Dl}0{BF`{{A`{CAhn}}}}{{{f{DfBF`}}}{{A`{{N`{{BDb{El}}}}n}}}}{eBBd{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{CIl}}Gb}CK`}``{{{f{BKb}}{Gj{{f{Bf}}}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}`{{f{f{c}}}B@f{}}0{BLbBLb}```{{{f{CG`}}}{{A`{{N`{{BDb{El}}}}n}}}}{{cCJb}{{A`{BF`n}}}{{If{{Bl{BF`}}}}}}{{{f{BOf}}{f{{l{An}}}}}{{l{An}}}}{{ed}{{A`{BBdn}}}{{BA`{BBd}}Jf}{{If{{Bl{c}}}}}}{{{f{CJj}}{Gj{BF`}}}{{A`{BF`n}}}}{{{f{CBd}}{Gj{BF`}}}{{A`{BF`n}}}}44{e{{A`{BBdn}}}{{BA`{BBd}}Jf}{{If{{Bl{c}}}}}}{{c{f{Bf}}d}BBd{{If{{Bl{BBd}}}}}}{{BMfc}BBd{{BA`{BBd}}}}{{{f{CKb}}{f{{Bl{Bj}}}}}{{l{Bd}}}}{{{f{BOf}}{f{Bf}}d}{{A`{{l{Bd}}n}}}}{{BMhc}BBd{{BA`{BBd}}}}{{{f{BLb}}BLb}d}{{{f{CKb}}{f{{l{Bh}}}}}{{l{Bd}}}}{{{f{BOf}}{f{{l{An}}}}dd}{{A`{{l{Bd}}n}}}}{{{f{BOf}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{Cl}}{f{AGd}}}{{Cn{Cl}}}}{{{f{Ab}}Gb}{{A`{{l{Fb}}n}}}}{BF`BF`}{{{CKd{c}}}{{A`{Gbn}}}BKh}{BBdBBd}{{{f{BOf}}{f{Bf}}d}{{A`{{l{Fb}}n}}}}{{{f{BOf}}{f{{l{An}}}}d}{{A`{{l{Fb}}n}}}}{{{f{ANb}}Bj{Ch{Bj}}{Ch{{f{CCn}}}}Bjd}{{A`{Gbn}}}}{{{f{{Bl{Bj}}}}Bj{Ch{Bj}}{Ch{{f{CCn}}}}Bjd}{{A`{Gbn}}}}{{{AOb{Bf}}}El}{{{f{BJh}}{f{{Bl{A@h}}}}d}AAn}`{{BF`BF`{Ch{Dd}}}BF`}{{{f{CKf}}{f{AAn}}{Ch{Dd}}{Ch{{Hf{HbGb}}}}}{{A`{AAnn}}}}{{{f{CKf}}{f{AAn}}{Ch{{Hf{HbGb}}}}d}{{A`{{Hf{AAnAAn}}n}}}}{{{f{Ab}}d}{{A`{Abn}}}}{{BBdd}BBd}{{BBdced}BBd{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlInJf}{{If{{Bl{BBd}}}}}}212121{{ce}BBd{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlInJf}{{If{{Bl{BBd}}}}}}32{{CKhBBdGbd}BBd}```{{BBdBBdBG`CC`}BBd}`{CHjBBd}`{{BBdBBdBG`CC`{Ch{Ld}}{Ch{Dd}}}BBd}0{AMdHb}00{{{f{CKj}}}{{l{Nh}}}}{{{f{CKl}}}{{l{Nh}}}}{{{f{CB`}}}{{A`{{l{Nh}}n}}}}`{{{f{CKn}}}{{l{Lb}}}}{{{f{BG`}}}Hb}`{{{f{BG`}}}d}```{{}b}{cbBLd}{{}BF`}{{}BLj}{{}CBf}{{}CBj}{{}CL`}{{}BE`}{{}BFd}{{}CCd}{{}CCh}{{}CCj}{{}CCl}{{}BJj}{{}CDb}{{}CDd}{{}CDf}{{}CDj}{{}CDl}{{}CE`}{{}CEb}{{}CEd}{{}CEf}{{}CEh}{{}CEl}{{}CFb}{{}CFd}{{}CFf}{{}CFh}{{}CG`}{{}BBd}{{}{{BLn{{N`{CAf}}}}}}{{}{{BLn{{N`{BLl}}}}}}{{}{{BLn{{N`{CLb}}}}}}{{}CHh}{{}CHj}{{}CHl}{{}CI`}{{}CIb}{{}CId}{{}CIf}{{}CIj}{{}BLb}{{}{{N`{c}}}CLd}{{}{{N`{CLf}}}}{{}{{N`{Bf}}}}{{}{{N`{{Bl{c}}}}}{}}{{}CJ`}{{}CJb}{{}A@b}{{}BFj}{{}BAd}{{}A@`}`{{}{{AAj{{Gj{AB`}}{Gj{A@h}}}}}}{Gb{{f{c}}}{}}00{{{f{{AM`{c}}}}}f{}}11111111111111111111111111111111111111111111111111111111111111111111111111111111111{{{f{{BLn{c}}}}}f{}}222222222222222222222222{{{f{{N`{ce}}}}}{{f{c}}}A@fBLd}3333333333333{Gb{{f{Dfc}}}{}}00{{{f{Df{AM`{c}}}}}{{f{Df}}}{}}111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111```{{{f{CG`}}}{{A`{Ejn}}}}{{{f{BF`}}}{{A`{Ejn}}}}0001{{{f{{N`{c}}}}}{{f{Bf}}}{ALhA@f}}{{{f{BAd}}c}{{A`{CLhn}}}{{Jd{}{{Cj{{f{CLj}}}}}}}}```{{{f{Ab}}HbCLl}{{A`{Abn}}}}{{BMhHbCLl}BBd}{{BBdHbCLl}BBd}{{BLbBLb}BLb}{{{f{CG`}}}{{A`{{`{BD`}}n}}}}``{{{BKj{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBdBBd}}{{{f{BKn}}{f{Ab}}}{{A`{Abn}}}}{{BBdc}BBd{{BA`{BBd}}}}{{{N`{AGfc}}}{{A`{{N`{ec}}{N`{AGfc}}}}}BLd{AGfIlIn}}{{{N`{AGfc}}}{{N`{ec}}}BLd{AGfIlIn}}{{{f{{N`{ce}}}}}{{CLn{ce}}}A@f{JfBLd}}{Gbb}000000{{{f{DfCAh}}}b}1{{BF`e}BF`{{BA`{BKl}}}{{Ib{}{{Cj{c}}}}}}222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222222{{{f{Df{N`{ce}}}}}bA@fBLd}3333333333333{BBdBBd}2{{BF`{Ch{{Gj{BBd}}}}}BF`}1{{{f{BJn}}}Ab}{{{f{{L`{LfLb}}}}{f{Ld}}{f{AMf}}}{{L`{LlLb}}}}`{BBdCM`}{{{f{AOh}}}{{f{El}}}}{{{f{BJn}}}{{f{El}}}}{{{f{BFn}}}{{f{AGd}}}}{{{f{Mj}}}{{f{El}}}}{{{f{BAd}}}{{f{AGd}}}}``{{{f{El}}}BBd}{cBBd{{If{{Bl{El}}}}}}`{CHlBBd}{{}CHh}{{}BLb}{fc{{B@n{B@l}}}}0`{{{f{CKb}}{f{{Bl{Bj}}}}}{{l{Bd}}}}{{{f{CKb}}{f{{l{Bh}}}}}{{l{Bd}}}}{{BG`{f{El}}{f{Bf}}}{{A`{bn}}}}{{BG`{Ch{{f{Bf}}}}{f{Bf}}}{{A`{bn}}}}{{{f{{BDb{c}}}}{f{{BDb{c}}}}}{{A`{bn}}}{}}{{{f{CMb}}{f{Bf}}}{{A`{bn}}}}`{{{f{CBl}}{f{CBl}}}d}{{{f{BE`}}{f{BE`}}}d}{{{f{BFd}}{f{BFd}}}d}{{{f{BG`}}{f{BG`}}}d}{{{f{CC`}}{f{CC`}}}d}{{{f{CCb}}{f{CCb}}}d}{{{f{CCd}}{f{CCd}}}d}{{{f{AB`}}{f{AB`}}}d}{{{f{CCh}}{f{CCh}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{{f{CCn}}{f{CCn}}}d}{{{f{CD`}}{f{CD`}}}d}{{{f{BJj}}{f{BJj}}}d}{{{f{CDb}}{f{CDb}}}d}{{{f{CDd}}{f{CDd}}}d}{{{f{CDf}}{f{CDf}}}d}{{{f{CDh}}{f{CDh}}}d}{{{f{CDj}}{f{CDj}}}d}{{{f{CDl}}{f{CDl}}}d}{{{f{CDn}}{f{CDn}}}d}{{{f{CE`}}{f{CE`}}}d}{{{f{CEb}}{f{CEb}}}d}{{{f{CEd}}{f{CEd}}}d}{{{f{CEf}}{f{CEf}}}d}{{{f{CEh}}{f{CEh}}}d}{{{f{CEj}}{f{CEj}}}d}{{{f{CEl}}{f{CEl}}}d}{{{f{CEn}}{f{CEn}}}d}{{{f{CF`}}{f{CF`}}}d}{{{f{CFb}}{f{CFb}}}d}{{{f{CFd}}{f{CFd}}}d}{{{f{CFf}}{f{CFf}}}d}{{{f{CFh}}{f{CFh}}}d}{{{f{CFj}}{f{CFj}}}d}{{{f{CFl}}{f{CFl}}}d}{{{f{CFn}}{f{CFn}}}d}{{{f{BNn}}{f{BNn}}}d}{{{f{BBd}}{f{BBd}}}d}{{BBdc}BBd{{BA`{BBd}}}}{{{f{CGj}}{f{CGj}}}d}{{{f{CA`}}{f{CA`}}}d}{{{f{{BLn{{N`{c}}}}}}{f{{BLn{{N`{c}}}}}}}dA@f}{{{f{{BLn{Ab}}}}{f{{BLn{Ab}}}}}d}{{{f{CGl}}{f{CGl}}}d}{{{f{CGn}}{f{CGn}}}d}{{{f{CH`}}{f{CH`}}}d}{{{f{CHb}}{f{CHb}}}d}{{{f{CHd}}{f{CHd}}}d}{{{f{CHf}}{f{CHf}}}d}{{{f{BMb}}{f{BMb}}}d}{{{f{CLh}}{f{CLh}}}d}{{{f{CHh}}{f{CHh}}}d}{{{f{CHn}}{f{CHn}}}d}{{{f{CI`}}{f{CI`}}}d}{{{f{CIb}}{f{CIb}}}d}{{{f{CId}}{f{CId}}}d}{{{f{CIf}}{f{CIf}}}d}{{{f{CIh}}{f{CIh}}}d}{{{f{CIj}}{f{CIj}}}d}{{{f{BKl}}{f{BKl}}}d}{{{f{CIn}}{f{CIn}}}d}{{{f{{N`{Cl}}}}{f{Cl}}}d}{{{f{{N`{CMd}}}}{f{CMd}}}d}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{CMfA@f}BLd}{{{f{CJ`}}{f{CJ`}}}d}{{{f{CJb}}{f{CJb}}}d}{{{f{A@b}}{f{A@b}}}d}{{{f{BFj}}{f{BFj}}}d}{{{f{BFn}}{f{{f{Cl}}}}}d}{{{f{BFn}}{f{BFn}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{BAd}}{f{BAd}}}d}{{{f{A@`}}{f{A@`}}}d}{{{f{BI`}}{f{BI`}}}d}{{{f{CJd}}{f{CJd}}}d}{{{f{CJf}}{f{CJf}}}d}{{{f{CJh}}{f{CJh}}}d}{{BBdc}BBd{{BA`{BBd}}}}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{{f{f{c}}}d{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CMhBBdd}BBd}``{{BBdc}BBd{{BFh{Dd}}}}{{BBdc}BBd{{If{{Bl{El}}}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BCj}}}CMj{}}{{{f{{Bl{CMl}}}}d{Ch{{f{CJl}}}}}{{A`{{N`{{Bl{CMl}}}}n}}}}{{{f{{Bl{CMl}}}}d{Ch{{f{CJl}}}}d}{{A`{{Hf{{N`{{Bl{CMl}}}}Gb}}n}}}}{{{f{{Bl{c}}}}{f{{Bl{c}}}}}d{{If{ANb}}}}{{{f{BF`}}d}{{A`{Ejn}}}}{{BF`e}BF`{{BA`{BKl}}Jf}{{If{{Bl{c}}}}}}{{{f{AIf}}}{{A`{Abn}}}}{BBdBBd}{{{f{AIf}}}{{A`{{Hf{Ab{Hd{Hb}}}}n}}}}`{{{f{DfBLb}}c}b{{Ib{}{{Cj{BLb}}}}}}{{BBdBBdBBd}BBd}{{{f{BOf}}{f{{l{An}}}}Gb}{{A`{{l{An}}n}}}}{A@h{{Hf{JlJl}}}}{{{f{BOf}}{f{Bf}}}{{A`{{l{Ah}}n}}}}{{{f{BOf}}{f{{l{An}}}}}{{A`{{l{Ah}}n}}}}{{{f{BOf}}{f{Bf}}{f{El}}}{{A`{Abn}}}}{{{f{ACd}}}d}{{{f{CAh}}}{{Ch{{A`{AAnn}}}}}}{{BF`Gb}{{A`{AAnn}}}}{{{f{CAh}}}{{A`{AAnn}}}}{{{f{ACd}}}{{f{Oj}}}}{{{f{BJn}}}{{Eb{Oj}}}}{{BJlHb}BBd}{{BJl{f{Bf}}}BBd}{{BJle}BBd{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{{f{BFn}}}{{f{{Bl{BAd}}}}}}`{{BF`c}BF`{{BA`{BBd}}}}{{BBdc}BBd{{BA`{BBd}}}}`10{{BBdAIb}BBd}{{{f{AIh}}c}{{A`{AIhn}}}{}}{{{f{AIj}}{f{{l{Bd}}}}}{{A`{{l{c}}n}}}Dl}{{{f{BJn}}{f{{l{Bd}}}}}{{A`{Abn}}}}{{BF`BBd}BF`}5{{{f{BOf}}{f{Bf}}d}{{A`{{l{Fb}}n}}}}{{{f{BOf}}{f{{l{An}}}}dd}{{A`{{l{Fb}}n}}}}{{{f{BOf}}{f{Bf}}}{{A`{{l{Fb}}n}}}}{CMn{{A`{AAnn}}}}{{{f{DfCN`}}{f{DfAAn}}}{{A`{bn}}}}{ACf{{l{c}}}Dl}{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{BLfBF`}{{{BKd{c}}}{{A`{AAnn}}}BKh}{CJj{{A`{BF`n}}}}{CBd{{A`{BF`n}}}}{CBh{{A`{BF`n}}}}{{{f{Df{BOj{c}}}}{f{DfAAn}}}{{A`{bn}}}BOn}{{{CNb{c}}}{{A`{AAnn}}}BKh}{{{BMl{c}}}{{A`{AAnn}}}BMn}{{{f{Df{CNd{c}}}}{f{DfAAn}}}{{A`{bn}}}BOn}{{{f{Df{C@`{c}}}}{f{DfAAn}}}{{A`{bn}}}BOn}{{{f{Df{CNf{c}}}}{f{DfAAn}}}{{A`{bn}}}BOn}{{{CNh{c}}}{{A`{AAnn}}}BKh}{{{CKd{c}}}{{A`{AAnn}}}BKh}{{{C@d{c}}}{{A`{AAnn}}}BKh}{{{C@h{c}}{f{DfAAn}}}{{A`{Kfn}}}BOn}{{{f{DfACd}}}{{l{Ah}}}}=<;{{{CNb{c}}{Ch{{N`{BKf}}}}d}{{A`{AAnn}}}BKh}{{{f{C@f}}Gb}d}{{}BBd}{BF`BF`}{BMhBBd}{BBdBBd}`0```{{}{{BLn{{N`{BLl}}}}}}{{{f{CAn}}}{{A`{Abn}}}}2{{BBdBBd}BBd}{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Df{N`{AFj}}}}}{{A`{bBCj}}}}{{{f{BN`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CBl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BE`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BFd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CBn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BG`}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CC`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{AB`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@h}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BLh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CCn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CD`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BJj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CNj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDh}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CDj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CDl}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CDn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CE`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CEn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CF`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CFn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BBd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CGj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CA`}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{{BLn{c}}}}{f{DfHl}}}{{A`{bHn}}}{}}{{{f{CGl}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CGn}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CH`}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHb}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHd}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CHf}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{BMb}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{CLh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CHh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CHj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CHl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CHn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CI`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CId}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BKl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CAd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BLb}}{f{DfHl}}}{{A`{bHn}}}}0000{{{f{CIl}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CIn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}{AGhA@f}BLd}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}{BD`A@f}BLd}{{{f{{N`{ce}}}}{f{DfHl}}}{{A`{bHn}}}A@fBLd}{{{f{CJ`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@b}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BFj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BFn}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Mj}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BAd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{A@`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{BI`}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJd}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJf}}{f{DfHl}}}{{A`{bHn}}}}{{{f{CJh}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Bf}}BGl}Dd}```{{BBdce}BBd{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlInJf}{{If{{Bl{BBd}}}}}}{{BLfd}BLf}``{{{f{Bf}}c}{{A`{BBdn}}}{{If{{Bl{BBd}}}}}}{{BBd{Ch{Jl}}}BBd}{cc{}}0000000{CG`BF`}1{BL`BF`}2222222222222222222222222222222222{JlAB`}333333{{{f{Bf}}}CCn}44{CDhBJj}5555555555555555555555555555555{OfBBd}{KdBBd}{{{f{Bf}}}BBd}{BNnBBd}{NfBBd}{AjBBd}{NjBBd}<{HbBBd}{BjBBd}{O`BBd}{JlBBd}{KfBBd}{dBBd}{cc{}}0{CGn{{BLn{{N`{BN`}}}}}}{CNl{{BLn{{N`{BN`}}}}}}{BMb{{BLn{{N`{BN`}}}}}}{CH`{{BLn{{N`{BN`}}}}}}{CNn{{BLn{{N`{BN`}}}}}}{CGl{{BLn{{N`{BN`}}}}}}{CHf{{BLn{{N`{BN`}}}}}}{CHd{{BLn{{N`{BN`}}}}}}8{CO`{{BLn{{N`{BN`}}}}}}{COb{{BLn{{N`{BN`}}}}}}:::::::{CHdBMb}{CGlBMb}{CNlBMb}{CGnBMb}{COdCLh}????????{CIfCId}{cc{}}000{DdBKl}{{{f{Bf}}}BKl}{EjBKl}{BBdBKl}4444{{{f{{Bl{c}}}}}{{N`{{Bl{c}}}}}Jf}{{{Gj{ce}}}{{N`{{Bl{c}}e}}}{}{BLdJf}}{COf{{N`{CLf}}}}{{{f{ANb}}}{{N`{ANb}}}}{{{f{Bf}}}{{N`{Bf}}}}{COhc{}}{COj{{N`{ANd}}}}{Ej{{N`{Bf}}}}{Gl{{N`{Bf}}}}{{{f{ANd}}}{{N`{ANd}}}}{{{Eb{c}}}{{N`{c}}}{COlA@f}}{{{AAb{c}}}{{N`{{Bl{c}}}}}{}}{c{{N`{c}}}{}}{{{N`{Bf}}}{{N`{{Bl{Bj}}}}}}{CMl{{N`{ANb}}}}{{{Cn{ce}}}{{N`{ce}}}A@fBLd}{{{f{CLf}}}{{N`{CLf}}}}{cc{}}000000{COnBFn}{D@`BFn}{AjMj}{NfMj}{JlMj}{O`Mj}{BjMj}{HbMj}{OfMj}{KfMj}{NjMj}{KdMj}<<<<<<<{{{f{{BDb{BAd}}}}}D@b}{Jl{{Ch{BLb}}}}{JlBLb}00{{c{Ch{Id}}}D@d{}}{{{D@f{Hb}}{D@f{Bj}}{Ch{Id}}}D@h}{{{D@f{Hb}}{D@f{Bj}}{Ch{Id}}}D@j}{c{{AM`{{l{Bd}}}}}{{Ib{}{{Cj{d}}}}}}{c{{AM`{{l{e}}}}}{{Ib{}{{Cj{}}}}}Al}{cBLb{{Ib{}{{Cj{BLb}}}}}}{e{{N`{{Bl{c}}}}}{}{{Ib{}{{Cj{c}}}}}}{{gGb}{{D@l{Hb}}}If{{Ib{}{{Cj{{Ch{c}}}}}}}{{Ib{}{{Cj{{Ch{e}}}}}}}}0{e{{D@l{Hb}}}{{Ib{}{{Cj{{Ch{d}}}}}}}{{Ib{}{{Cj{{Ch{c}}}}}}}}{{Dde}ADj{}{{D`{}{{Cj{{Ch{c}}}}}}}}{{gAGd}{{D@l{Hb}}}BId{{Ib{}{{Cj{{Ch{c}}}}}}}{{Ib{}{{Cj{{Ch{e}}}}}}}}673{{Dde}ADj{}{{D`{}{{Cj{c}}}}}}{{{f{Bf}}}{{Ch{BLb}}}}{c{{AM`{{l{e}}}}}{{Jb{}{{Cj{}}}}}Al}{e{{N`{{Bl{c}}}}}Il{{Jb{}{{Cj{c}}}}}}`{c{{A`{{CKd{AFj}}n}}}{{BA`{CMl}}}}{{}{{N`{c}}}A@f}{c{{N`{ec}}}BLdA@f}{{Dd{f{{Bl{c}}}}}ADj{}}{{Dd{f{{Bl{{Ch{c}}}}}}}ADj{}}{{{f{Bf}}}{{A`{D@n}}}}{c{{AM`{{l{e}}}}}{{Jh{}{{Cj{}}}}}Al}{c{{AM`{{l{Bd}}}}}{{Jh{}{{Cj{d}}}}}}{El{{BLn{{N`{BLl}}}}}}{{Ddc}DA`{}}{{{Gj{c}}AGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{Gj{c}}AGd}{{ALd{}{{ANh{e}}{ANj{c}}{ANl{g}}}}}{ANn{AO`{e}}}Jf{{H`{}{{Cj{e}}}}JhIlIn}}`{{DdcGb}AIl{}}{{GbcAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{}CHh}{{BF`BF`cc}BF`{{BA`{BBd}}}}{{{f{DAb}}{f{AAn}}ei}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}{{BA`{Dd}}}{{Ib{}{{Cj{g}}}}}}{{DdGb}AIn}{{GbAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{GbAGd}BFn}``{{BBdc{BLn{{N`{BLl}}}}DAd}BBd{{Dn{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}`{{BBdc}BBd{{BA`{BBd}}}}{{BBdGbGb}BBd}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAfA@f}BLd}{{{f{BJn}}Gb}{{A`{Jjn}}}}{{BMfBBdd}BBd}{{BMhBBdd}BBd}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}6{{{f{AJ`}}Gb}{{A`{Jjn}}}}{{{f{AOh}}Gb}{{A`{Jjn}}}}{{{f{AJ`}}Gb}Jj}{{{f{AOh}}Gb}Jj}{CAlBBd}{{{f{BF`}}}BLb}{{{f{CIn}}}El}{{}El}{{{f{CCf}}HbCC`{Ch{{f{AMf}}}}}{{A`{CBnn}}}}00{{{f{CLb}}{f{{BDb{El}}}}DAh{f{Oj}}{f{Oj}}}{{Ch{Oj}}}}{{{f{BLl}}{f{{BDb{El}}}}DAh{f{{Bl{Oj}}}}}{{A`{Ojn}}}}{{{f{D@b}}{f{Bf}}}{{Ch{Oj}}}}{{{f{AGd}}}{{f{{Bl{BAd}}}}}}{{{f{BMj}}}Gb}{{{f{{Bl{Bj}}}}}{{Ch{Gb}}}}{{{f{Df{C@d{c}}}}}{{A`{{f{{N`{CIl}}}}n}}}BKh}{{{f{BJn}}}{{Ch{{Nb{Fl}}}}}}{{{f{Df{N`{ce}}}}}{{Ch{{f{Dfc}}}}}A@fBLd}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}A@fBLd}{{{f{BJn}}Gb}{{Ch{{f{K`}}}}}}{{{f{BJn}}GbGb}{{Ch{{f{K`}}}}}}{{{f{BN`}}}{{Ch{{BLn{{N`{BLl}}}}}}}}{{{f{CCf}}CBnCC`Ld{Ch{{f{AMf}}}}CCd}{{A`{DAjn}}}}{{{f{CCh}}}{{N`{CCj}}}}{{{f{Dfc}}}{{A`{DAln}}}{BMnBKhA@f}}{{{f{CNj}}{f{{BDb{El}}}}}{{A`{{N`{{BDb{El}}}}n}}}}{{{f{BAn}}Gb}Jj}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{BJn}}Gb}Jj}{{{f{CJj}}}d}{{{f{CBd}}}d}`{{BF`e}BL`{{BA`{BBd}}Jf}{{If{{Bl{c}}}}}}{{{f{DAn}}{Gj{Ff}}{f{BE`}}}{{A`{{Hf{Ff{Gj{Ff}}C`}}n}}}}{{BF`BBdcBE`}BL`{{If{{Bl{BBd}}}}}}2{{BG`BG`{f{{Bl{Hb}}}}CC`Ld{Ch{AMf}}}{{A`{{Gj{{AAb{Jl}}}}n}}}}{{CCf{f{{Bl{Hb}}}}CC`Ld{f{{Ch{Dd}}}}ddCCd}{{Hf{{Gj{{AAb{Jl}}}}{Gj{Hb}}{Gj{Hb}}}}}}{{{f{BHh}}dd}{{A`{C`n}}}}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{BBdc}BBd{{BA`{BBd}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAfA@f}BLd}21`{{{f{BJn}}}d}{{{f{BE`}}{f{Dfc}}}bADl}{{{f{BFd}}{f{Dfc}}}bADl}{{{f{BG`}}{f{Dfc}}}bADl}{{{f{CC`}}{f{Dfc}}}bADl}{{{f{CCb}}{f{Dfc}}}bADl}{{{f{CCd}}{f{Dfc}}}bADl}{{{f{CCh}}{f{Dfc}}}bADl}{{{f{CCj}}{f{Dfc}}}bADl}{{{f{CCl}}{f{Dfc}}}bADl}{{{f{CCn}}{f{Dfc}}}bADl}{{{f{CD`}}{f{Dfc}}}bADl}{{{f{BJj}}{f{Dfc}}}bADl}{{{f{CDb}}{f{Dfc}}}bADl}{{{f{CDd}}{f{Dfc}}}bADl}{{{f{CDf}}{f{Dfc}}}bADl}{{{f{CDh}}{f{Dfc}}}bADl}{{{f{CDj}}{f{Dfc}}}bADl}{{{f{CDl}}{f{Dfc}}}bADl}{{{f{CDn}}{f{Dfc}}}bADl}{{{f{CE`}}{f{Dfc}}}bADl}{{{f{CEb}}{f{Dfc}}}bADl}{{{f{CEd}}{f{Dfc}}}bADl}{{{f{CEf}}{f{Dfc}}}bADl}{{{f{CEh}}{f{Dfc}}}bADl}{{{f{CEj}}{f{Dfc}}}bADl}{{{f{CEl}}{f{Dfc}}}bADl}{{{f{CEn}}{f{Dfc}}}bADl}{{{f{CF`}}{f{Dfc}}}bADl}{{{f{CFb}}{f{Dfc}}}bADl}{{{f{CFd}}{f{Dfc}}}bADl}{{{f{CFf}}{f{Dfc}}}bADl}{{{f{CFh}}{f{Dfc}}}bADl}{{{f{CFj}}{f{Dfc}}}bADl}{{{f{CFl}}{f{Dfc}}}bADl}{{{f{CFn}}{f{Dfc}}}bADl}{{{f{BNn}}{f{Dfc}}}bADl}{{{f{BBd}}{f{Dfc}}}bADl}{{{f{CGj}}{f{Dfc}}}bADl}{{{f{CA`}}{f{Dfc}}}bADl}{{{f{CGl}}{f{Dfc}}}bADl}{{{f{CGn}}{f{Dfc}}}bADl}{{{f{CH`}}{f{Dfc}}}bADl}{{{f{CHb}}{f{Dfc}}}bADl}{{{f{CHd}}{f{Dfc}}}bADl}{{{f{CHf}}{f{Dfc}}}bADl}{{{f{BMb}}{f{Dfc}}}bADl}{{{f{CHh}}{f{Dfc}}}bADl}{{{f{CHn}}{f{Dfc}}}bADl}{{{f{CI`}}{f{Dfc}}}bADl}{{{f{CIb}}{f{Dfc}}}bADl}{{{f{CId}}{f{Dfc}}}bADl}{{{f{CIf}}{f{Dfc}}}bADl}{{{f{CIh}}{f{Dfc}}}bADl}{{{f{CIj}}{f{Dfc}}}bADl}{{{f{BKl}}{f{Dfc}}}bADl}{{{f{CIn}}{f{Dfc}}}bADl}{{{f{{N`{ce}}}}{f{Dfg}}}b{DB`A@f}BLdADl}{{{f{CJ`}}{f{Dfc}}}bADl}{{{f{CJb}}{f{Dfc}}}bADl}{{{f{BFj}}{f{Dfc}}}bADl}{{{f{BAd}}{f{Dfc}}}bADl}{{{f{A@`}}{f{Dfc}}}bADl}{{{f{CJh}}{f{Dfc}}}bADl}{{{f{DBb}}{f{Ab}}CDld}{{A`{{Hf{{Hf{{Gj{Jl}}{Gj{Jl}}}}d}}n}}}}{{{f{DBb}}{f{Ab}}CDld}{{A`{{Hf{{ALl{Jl}}{ALl{Jl}}}}n}}}}{{BL`{Ch{Gb}}}BF`}{{BMhBBd}BBd}{{BBd{Ch{Gb}}}BBd}{{{f{BOf}}}{{A`{{l{An}}n}}}}{{{f{BOf}}}{{l{An}}}}``{{{f{{Bl{{f{{l{An}}}}}}}}{f{Bf}}d}{{A`{{l{An}}n}}}}{{{f{DBd}}}{{l{Nh}}}}{{{f{CKl}}}{{l{Nh}}}}{{{f{CB`}}}{{A`{{l{Nh}}n}}}}`{{{f{CKn}}}{{l{Lb}}}}`{{BLfCDh}BLf}`{{{f{AB`}}}Jl}`{{{f{{Bl{Ff}}}}Ld}{{A`{Ffn}}}}{{{f{{L`{LfLb}}}}{f{{l{An}}}}CJh{Gf{Hb}{{Ad{AMd}}}}{Gf{AMd}{{Ad{Hb}}}}{f{AMf}}{f{AMf}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bf}}}}{Gf{Hb}{{Ad{AMd}}}}{Gf{AMd}{{Ad{Hb}}}}{f{AMf}}{f{AMf}}}{{A`{{l{Lb}}n}}}}{BBdBBd}{{{f{AMd}}}d}{{{BOj{c}}d}{{BOj{c}}}BOn}````0`{{}b}{cb{JfBLd}}``{cBBd{{If{{Bl{Hb}}}}}}``{{{f{{Bl{Jl}}}}}{{`{{D`{}{{Cj{Gb}}}}}}}}{{{f{DAl}}Bj{Ch{Gb}}d{Ch{{f{{BDb{El}}}}}}GbGb{Ch{{f{CCn}}}}{Ch{Bj}}Bj{Ch{{f{CD`}}}}dd{f{Df{Ch{Gb}}}}d}{{A`{{Hf{{BDb{El}}GbGb}}n}}}}{{{CNh{c}}{Ch{{DBf{Gb}}}}}{{CNh{c}}}BKh}{{{CKd{c}}{Ch{{DBf{Gb}}}}}{{CKd{c}}}BKh}``{{}Gb}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000`{{{f{DfACd}}}{{Cn{Cl}}}}{{BF`BF`cc}BF`{{BA`{BBd}}}}{{{f{DAb}}{f{AAn}}ei}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}{{BA`{Dd}}}{{Ib{}{{Cj{g}}}}}}{{{f{DfA@h}}}{{f{DfKf}}}}`{{{f{DfBLb}}BLb}b}{{BBdBBdHbEl}BBd}{{BBdBBdBBd}BBd}``{{{f{Ab}}CEj}Ab}{{BBdCEj}BBd}`{{{f{Ff}}{f{Ff}}d}{{A`{Ffn}}}}{{BBdBBd}BBd}{{BLbBLb}BLb}{{{f{BLb}}BLb}d}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BDdFf}{{}Ff}{{MjDd}Ff}{BFn{{Hf{{Gj{BAd}}{Gj{{Cn{Cl}}}}{Ch{Id}}}}}}{{{AM`{c}}}c{}}{{{N`{ce}}}{{Ch{c}}}{}BLd}66{{{f{BBd}}}}{BLb}{{{f{BFn}}}}{DBhBMh}{BMhBMh}{{{N`{ce}}}{}A@fBLd}{{{N`{ce}}}{{Hf{e}}}A@fBLd}{{CChc}{{BKd{c}}}BKh}{{BB`El}{{A`{Mjn}}}}{BFbAb}{{{N`{BJn}}}Ab}{{MjDd}Ab}{BFh{{Gj{c}}}{}}{{}{{Gj{Dd}}}}{{{f{BLb}}}d}{{{f{CA`}}}d}{{{f{CDh}}}d}{{{f{Ab}}{f{Ab}}{f{Ab}}CEl}{{A`{{l{Bd}}n}}}}{{BBdccCEl}BBd{{BA`{BBd}}}}{cd{{If{ANb}}}}4{{{f{BG`}}{Ch{{f{Bf}}}}}d}{{{f{CHh}}}d}7{{{f{BJn}}}d}{{{f{C@f}}}d}{BBdBBd}{{{f{Ab}}}{{A`{{l{Bd}}n}}}}{{{f{AJb}}}{{A`{{l{Bd}}n}}}}25{{{f{BG`}}}d}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}{{BBdc}BBd{{BA`{BBd}}}}54{{{f{AJd}}}{{A`{{l{Bd}}n}}}}6{{{f{CKj}}}{{l{Bd}}}}{{{f{CKl}}}{{l{Bd}}}}{{{f{CB`}}}{{A`{{l{Bd}}n}}}}9{{{f{Mj}}}d}::{{{f{BJn}}}{{l{Bd}}}};;0{{{f{A@h}}}d}<2{{{f{AB`}}}d}`{{{f{Ab}}}d}{{{f{{N`{AFj}}}}}d}{{{f{CIn}}}d}{{}d}{{{f{CMb}}F`}{{A`{dn}}}}{fd}{{{f{c}}}d{}}{{{f{CDl}}{f{CDh}}}{{A`{bn}}}}6{{{f{BG`}}}d}{{{f{CKj}}}{{l{Kl}}}}{{{f{CKl}}}{{l{Kl}}}}{{{f{CB`}}}{{A`{{l{Kl}}n}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{AGl{cgAGj}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{BLb}}}{{AFf{BLb}}}}{{{f{BFn}}}{{AGl{{Gj{{Cn{CMd}}}}DBjAGj}}}}{{{f{D@b}}}{{`{Jd}}}}{{{f{BLb}}}{{AFh{BLb}}}}{{{f{{DBn{}{{DBl{c}}}}}}}{{`{Jd}}}{AGhJfCLdCMf}}{{BMfBBdd}BBd}{{BF`BF`ccBJj}BF`{{If{{Bl{BBd}}}}}}{{BMhBBdd}BBd}{{{f{DAb}}{f{AAn}}eiBJj}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}{{BA`{Dd}}}{{Ib{}{{Cj{g}}}}}}{{{f{DC`}}{f{AAn}}{f{Bf}}{f{Bf}}eeCEd{Ch{Jj}}}{{A`{AAnn}}}{{If{Bf}}}{{Ib{}{{Cj{c}}}}}}{BF`BLf}{{{f{DCb}}{f{Bf}}d}{{A`{{l{An}}n}}}}{{{f{DCb}}{f{{l{An}}}}d}{{A`{{l{An}}n}}}}{{BLfd}BLf}`{{BLf{Gj{BBd}}}BF`}{BJlBBd}{DCdBBd}{{{f{CIl}}}{{f{{Ch{{Gj{DCf}}}}}}}}``{{}BBd}{BF`BF`}{BMhBBd}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{BBdBBd}{DChBF`}4{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAfA@f}BLd}`{{BF`BF`cc}BF`{{BA`{BBd}}}}{{{f{DAb}}{f{AAn}}ei}{{A`{AAnn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}{{BA`{Dd}}}{{Ib{}{{Cj{g}}}}}}{{BLfc}BLf{{If{{Bl{BBd}}}}}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}<{{{f{BJn}}}Gb};9{{{f{BFn}}}Gb}{{BF`Jl}BF`}{{{f{BJn}}Gb}Ab}`{BBdBMh}{cBBdDCj}{DCjBBd}{BG`BBd}{DClBBd}{CInBBd}{MjBBd}{{BBdc}BBd{{BA`{BBd}}}}0``{{CBhd}CBh}{{{CKd{c}}d}{{CKd{c}}}BKh}```{BBdBBd}{{{f{DCb}}}{{l{Fb}}}}0{{{f{DCb}}{f{{Bl{Ff}}}}}{{A`{{l{Ah}}n}}}}{{{f{DCb}}HbCLl}{{A`{{l{Ah}}n}}}}{{{f{DCb}}Hbd}{{A`{Abn}}}}{{{f{DCb}}{f{{l{An}}}}d}{{A`{{l{An}}n}}}}4{{{f{DCb}}}{{A`{Abn}}}}{{{f{DCb}}}Ab}01{{{f{DCb}}}{{A`{{l{Fb}}n}}}}{{{f{DCb}}}{{l{Ah}}}}{{{f{DCb}}{f{Ff}}}{{A`{{l{Ah}}n}}}}{{{f{DCb}}HbGb}{{l{Ah}}}}{{{f{DCb}}F`}{{A`{{l{Ah}}n}}}}{{{f{DCb}}Bj}Ab}7{{{f{DCb}}}{{A`{{l{Ah}}n}}}}01{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{BBdc}BBd{{BA`{BBd}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{DAfA@f}BLd}21``````{{{f{AMj}}{f{AMj}}}{{A`{{Hf{AMjAMj}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}{{{f{Df{N`{ce}}}}}{{f{Dfc}}}{DCnA@f}{BLdJf}}{{BF`cBLb{Ch{{N`{CNj}}}}{Ch{{f{Bf}}}}}BF`{{Dn{AAn}{{Ad{{A`{AAnn}}}}}}IlIn}}{{DCdc}BBd{{Dn{{f{Dd}}}{{Ad{{A`{Ddn}}}}}}IlIn}}{{BBdc{BLn{{N`{BLl}}}}}BBd{{Dn{Ff}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBdBBdc{BLn{{N`{BLl}}}}}BBd{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBd{f{Dfc}}{f{Df}}}{{A`{BBdn}}}{{Af{BBd{f{Df}}}{{Ad{{A`{BBdn}}}}}}}}{{{f{BMj}}{Ch{{f{Dd}}}}}{{A`{Ojn}}}}{{{f{BMj}}c}{{A`{Ojn}}}{{ABb{{f{El}}}{{Ad{El}}}}}}{c{{BLn{{N`{BLl}}}}}{{Dn{{f{El}}}{{Ad{{A`{Eln}}}}}}IlIn}}{c{{BLn{{N`{BLl}}}}}{{Dn{{f{{Bl{{f{El}}}}}}}{{Ad{{A`{Eln}}}}}}IlIn}}{{BBdc}BBd{{Af{BBd}{{Ad{BBd}}}}}}{c{{BLn{{N`{BLl}}}}}{{Dn{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}IlIn}}{{DCd{N`{Dn}}}BBd}{c{{BLn{{N`{BLl}}}}}{{Dn{{f{{Bl{Oj}}}}}{{Ad{{A`{Ojn}}}}}}IlIn}}:{{ce{BLn{{N`{BLl}}}}}BBd{{Dn{{f{Df{Bl{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}{{If{{Bl{BBd}}}}}}{{BBdc{f{{Bl{BBd}}}}{BLn{{N`{BLl}}}}}BBd{{Dn{{f{Df{Bl{Ff}}}}}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlIn}}{{BBdBMb{f{{Bl{BBd}}}}d{Ch{DD`}}}BBd}2{{{f{BMj}}}{{A`{Ojn}}}}{{CChc}CCh{{Dn{CCj}{{Ad{CCj}}}}}}1111{CInCIn}{{{Ch{{f{{Bl{Gb}}}}}}{f{{BDb{BAd}}}}{Ch{{f{{Bl{Ab}}}}}}{Ch{{f{DDb}}}}}AAn}{{{Ch{{f{{Bl{Dd}}}}}}{f{{BDb{El}}}}{Ch{{f{{Bl{Ab}}}}}}d}{{Ch{{Gj{Gb}}}}}}{{{f{Bf}}}BBd}{BMfBBd}{BF`BF`}{BMhBBd}{{{f{AHd}}}{{Ch{c}}}{}}{BBdBBd}{{{f{DDd}}}Mj}{{{f{BJn}}}{{A`{Mjn}}}}```754{{{f{AHd}}}{{Ch{Aj}}}}3{{{f{BJn}}}{{Ch{Aj}}}}9876{{{f{AJf}}}{{Ch{c}}}{}}51{{{f{DDf}}}Mj}4{{{CNb{c}}{Ch{CMl}}}{{CNb{c}}}BKh}{{{f{El}}{f{El}}}{{A`{Eln}}}}```{{{f{CKn}}}{{l{Lb}}}}`{{{f{CB`}}}{{A`{{l{Kl}}n}}}}1`?>=<;:{{{f{AHd}}}{{Ch{{Hf{cc}}}}}{}}```:9``{{{f{DBd}}}{{l{Nh}}}}{{{f{CKl}}}{{l{Nh}}}}{{{f{CB`}}}{{A`{{l{Nh}}n}}}}`5```>{{{f{CKj}}}{{l{Nh}}}}21`{{{f{BG`}}}Hb}{{{f{BG`}}}d}{{{BKj{}{{Ad{c}}}}{f{Ab}}}c{}}{{BG`Hb}BG`}{{BBdBBd}}{{{f{BKn}}{f{Ab}}}{{A`{Abn}}}}``{{{f{BJn}}}Gb}{{{f{CJj}}}{{Ch{Gb}}}}{{{f{CBd}}}{{Ch{Gb}}}}{{{f{CBh}}}{{Ch{Gb}}}}`````{{{BOj{c}}Gb}{{BOj{c}}}BOn}`{BMfBBd}{BMhBBd}{{{f{AHn}}}{{A`{Gbn}}}}{BBdBBd}{{{f{BJn}}}{{A`{Gbn}}}}{{{f{BJn}}}{{f{Dd}}}}{BBdDCd}````33`{{{f{DBd}}}{{l{Kl}}}}{{{f{CKl}}}{{l{Kl}}}}{{{f{CB`}}}{{A`{{l{Kl}}n}}}}{{{f{CKn}}}{{l{Lb}}}}{{{f{BG`}}}Hb}`{{{f{{N`{ce}}}}{f{{N`{ce}}}}}d{CMfA@f}BLd}{{{f{CDl}}}d}{BG`}{BBd}{{{f{Ab}}}{{A`{Abn}}}}0{{{f{BG`}}}d}{{DDhGb}{{Ch{Gb}}}}{{BBdc}BBd{{BA`{BBd}}}}0{{{f{BMj}}}{{A`{Ojn}}}}{{}c{}}{cCMnBMn}{cCN`BOn}2{{Ddc}DDj{}}{c{{AM`{c}}}{}}{BF`BLf}{c{{BKd{c}}}BKh}{cCBd{{If{ANb}}}}{cCBh{{If{ANb}}}}{c{{BOj{c}}}BOn}{{{f{{Bl{Oj}}}}}BMj}{c{{CNb{c}}}BKh}{c{{BMl{c}}}BMn}{c{{CNd{c}}}BOn}{{}CL`}{c{{C@`{c}}}BOn}{HbBG`}{c{{CNf{c}}}BOn}{c{{CNh{c}}}BKh}{{BG`BG`BG`}CCf}{c{{CKd{c}}}BKh}{{DDl{N`{CIl}}{N`{{BDb{BAd}}}}{Hf{GbGb}}{Ch{{Gj{Gb}}}}{Ch{{N`{BKf}}}}{Ch{DDb}}Gbd{Ch{{Gj{Ab}}}}{Ch{{Hf{Dd{N`{Bf}}}}}}CFb}{{A`{C@fn}}}}{c{{C@d{c}}}BKh}{c{{C@h{c}}}{BOnBOn}}{CDhBJj}{c{{BLn{c}}}{}}{{BBdBBdBBd}CHj}{{}CHl}{BBdBKl}{{Dd{Gj{Oj}}{BLn{{N`{BLl}}}}c}CAdBN`}{c{{N`{c}}}{}}{{AGd{Gj{{Cn{Cl}}}}{Ch{Id}}}BFn}{{ElJj}Mj}{{DdAGdd}BAd}{e{{N`{c}}}{}{{ABb{{f{{CLn{c}}}}}{{Ad{c}}}}}}{AGdBFn}{{{f{AJh}}GbGb}{{l{c}}}Dl}{{{f{BJn}}GbGb}Ab}{{{f{Bf}}}CCn}{{ce}{{N`{ce}}}{}BLd}{{HbDd}{{A`{Abn}}}}{DdCCn}{{AGdGb}BFn}{{{N`{{Bl{CMl}}}}}CBd}{{{N`{{Bl{CMl}}}}}CBh}{BjCCn}{{}{{N`{{BOd{c}}}}}{}}{c{{N`{{BOd{e}}c}}}BLd{}}{Gb{{N`{{Bl{{BOd{c}}}}}}}{}}{{Gbc}{{N`{{Bl{{BOd{e}}}}c}}}BLd{}}{DDnCBd}{DDnCBh}5432{{{f{DfDE`}}}Ch}{{{f{DfDAj}}}Ch}{{{f{BLh}}DEb}{{A`{{Ch{AAn}}n}}}}{{{f{DfC@l}}Gb}{{A`{{Ch{{Gj{AAn}}}}n}}}}{{{f{DfBOh}}Gb}{{A`{{Ch{{Gj{AAn}}}}n}}}}{{{f{DfC@f}}Gb}{{A`{{Ch{{Gj{AAn}}}}n}}}}{{{f{BBd}}{f{Df{BGj{{f{BBd}}}}}}}b}{{BBd{f{Df{BGj{BBd}}}}}b}{BBdBBd}0{BLbBLb}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}0{HbBBd}`{{}AB`}{{}A@h}`{{{f{BJn}}}Gb}{BF`BF`}7`````{{{f{Df{C@d{c}}}}}{{A`{Gbn}}}BKh}````{{{f{AIf}}}{{A`{{Hd{Hb}}n}}}}{{BLfc}BLf{{If{{Bl{BBd}}}}}}``{{BF`{f{Df{BJd{BJb}}}}{f{Df{BJd{BJf}}}}}{{A`{BJ`n}}}}`{{BBdc}BBd{{BA`{BBd}}}}{{{f{CKj}}}{{l{Nd}}}}{{{f{CKl}}}{{l{Nd}}}}{{{f{CB`}}}{{A`{{l{Nd}}n}}}}{{{f{CB`}}}{{A`{{l{Kl}}n}}}}{{CGdc}BBd{{BA`{BBd}}}}{{CGhc}BBd{{BA`{BBd}}}}`{{BBde}BBd{{BA`{BBd}}Jf}{{If{{Bl{c}}}}}}{{BBde{Ch{{Hf{eF`}}}}CIf}BBd{{BA`{BBd}}Jf}{{If{{Bl{c}}}}}}{{{f{Df{BDb{El}}}}{f{{BDb{El}}}}}{{A`{bn}}}}```{{{f{Bf}}}BG`}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{KnKl}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{LnLb}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}Ld}{{L`{LfLb}}}}``{{{f{BG`}}{f{BG`}}}{{Ch{B@f}}}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}{{Ch{B@f}}}{DAfA@f}BLd}```{{}BBd}{c{{DEd{{N`{c}}}}}{}}{{ce}{{DEd{{N`{ce}}}}}{}BLd}````{{BBdc}BBd{{BA`{BBd}}}}`{{DCd{f{Bf}}}BBd}0{{{f{AAn}}{f{AAn}}d}{{A`{{Hf{{AAj{{Gj{Jl}}{Gj{A@h}}}}{AAj{{Gj{AB`}}{Gj{A@h}}}}}}n}}}}`{{{f{DDd}}}Mj}{BBdBBd}{BF`{{A`{{Hf{AAnAAn}}n}}}}`{{{f{BFn}}}BFn}{{{f{{N`{c}}}}{f{DfDEf}}}b{ALhA@f}}{{{f{{N`{ce}}}}{f{{N`{ce}}}}}dA@fBLd}{{{f{Bf}}BBdA@`}BBd}{{BF`BBdA@`}BF`}{{{f{AJf}}AjA@`}{{A`{{Ch{c}}n}}}{}}{{BBdBBdA@`}BBd}{{{f{DDf}}AjA@`}{{A`{Mjn}}}}{{{f{BJn}}AjA@`}{{A`{Mjn}}}}{{{f{CKj}}}{{l{Nh}}}}{{{f{CKl}}}{{l{Nh}}}}{{{f{CB`}}}{{A`{{l{Nh}}n}}}}{{{f{Df}}c}{{A`{{f{Dfe}}BCj}}}CMj{}}````{{{f{DEh}}CFd{Ch{Kf}}}Ab}{{BBdCFd{Ch{Kf}}}BBd}{{{f{Df{N`{AFj}}}}{f{Df{Bl{Bj}}}}}{{A`{GbBCj}}}}{{{f{Df{N`{AFj}}}}DEj}{{A`{bBCj}}}}{{{C@d{c}}CFb}{{C@d{c}}}BKh}{{{f{Df{N`{AFj}}}}{f{Df{Gj{Bj}}}}}{{A`{GbBCj}}}}{{{f{Df{N`{AFj}}}}{f{DfEj}}}{{A`{GbBCj}}}}{{{f{Df}}}{{A`{cBCj}}}DEl}{{{f{Df{N`{AFj}}}}{f{Df{Bl{DEn}}}}}{{A`{GbBCj}}}}{{{f{CJj}}}d}{{{f{BJn}}}Ab}{{{f{CBd}}}d}{{{f{CBh}}}d}````{{ce}BBd{{Dn{FfFf}{{Ad{{A`{{Ch{Ff}}n}}}}}}IlInJf}{{If{{Bl{BBd}}}}}}{{{f{AJj}}}Ab}0{{{BKj{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBdBBd}}{{{f{BKn}}{f{Ab}}}{{A`{Abn}}}}{{{f{DfBLb}}BLb}b}{{{f{{Bl{Bj}}}}}{{A`{{f{{Bl{Bj}}}}n}}}}{{{f{DfBJn}}Dd}b}{{BF`ei}BF`{{If{Bf}}}{{Ib{}{{Cj{c}}}}}{{If{Bf}}}{{Ib{}{{Cj{g}}}}}}{{BJle}BBd{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}}{{cBBd}BBd{{BA`{BBd}}}}{{{f{Ab}}{f{{l{Fb}}}}}{{A`{{l{Ah}}n}}}}{{BBdc}BBd{{BA`{BBd}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{BOf}}{f{Bf}}{f{Bf}}}{{A`{{l{An}}n}}}}{{BBdcc}BBd{{BA`{BBd}}}}1{{{f{BMj}}{Ch{El}}}{{A`{Ojn}}}}{{{f{BOf}}{f{Bf}}{f{Bf}}Gb}{{A`{{l{An}}n}}}}3{{{f{Ab}}{f{Ab}}{f{Ab}}{f{Ab}}{Ch{El}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}{f{Ab}}{Ch{El}}}{{A`{Abn}}}}{{BBdcc{Ch{c}}{Ch{El}}}BBd{{BA`{BBd}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bf}}}}{f{{l{An}}}}CJh}{{A`{{L`{LfLb}}n}}}}{{BBd{f{{Bl{Hb}}}}CIh}BBd}{{{f{ANb}}}CMl}`{{{f{AJl}}}AJl}{{{f{BJn}}}Ab}{BMfBBd}{BF`BF`}{BMhBBd}{BBdBBd}`{{BLfc}BLf{{If{{Bl{BBd}}}}}}{{{f{DAn}}{Gj{Ff}}{f{BFd}}}{{A`{{Hf{Ff{Gj{Ff}}C`}}n}}}}{{BF`BBdcBFd}BL`{{If{{Bl{BBd}}}}}}{{BBdBFd}BBd}{{{f{AJn}}{f{Dn}}A@b}{{A`{Abn}}}}{{BBd{N`{Dn}}{BLn{{N`{BLl}}}}A@b}BBd}{{{f{BJn}}{f{Dn}}A@b}{{A`{Abn}}}}{{BBdGbc}BBd{{Af{{f{Df{l{Ef}}}}}{{Ad{{Ch{Aj}}}}}}IlInE`}}{{{f{DF`}}A@b}{{A`{Abn}}}}{{BBdA@b}BBd}{{{f{DF`}}{f{Ab}}CBl}{{A`{Abn}}}}{{BBdBBdCBl}BBd}32102032103{{BBdA@`AjA@b}BBd}2{{BBdBBdA@`AjCBl}BBd}543254325432{{{f{DFb}}{f{{l{An}}}}{Ch{{f{AMf}}}}}{{A`{DFbn}}}}{{{f{CAn}}Jl}{{A`{Abn}}}}{{BBdJl}BBd}{{{f{CCf}}Hb{Ch{{f{AMf}}}}}{{A`{Hbn}}}}0{{{f{CAn}}Of}{{A`{Abn}}}}{{BBdOf}BBd}2``{{{f{CJj}}}{{Ch{{f{DDb}}}}}}{{{f{CBd}}}{{Ch{{f{DDb}}}}}}{{{f{CBh}}}{{Ch{{f{DDb}}}}}}``````{{{f{DCb}}{l{Ah}}}{{l{Ah}}}}{{}{{BLn{{N`{BLl}}}}}}{{BBdBBddd{Ch{Kf}}}BBd}0`{{{f{BLh}}DEb}{{A`{AAnn}}}}{{cCBf}{{A`{BF`n}}}{{If{ANb}}}}{{{N`{{Bl{CMl}}}}CBf}{{A`{BF`n}}}}{{DDnCBf}{{A`{BF`n}}}}{{cCBj}{{A`{BF`n}}}{{If{ANb}}}}{{{N`{{Bl{CMl}}}}CBj}{{A`{BF`n}}}}{{DDnCBj}{{A`{BF`n}}}}{{DFd{f{{Bl{Jl}}}}e}{{A`{Abn}}}E`{{Ib{}{{Cj{{Ch{c}}}}}}}}{{{f{AK`}}c{Ch{e}}}{{A`{AK`n}}}{{Ib{}{{Cj{Jl}}}}}{}}{{{f{AK`}}ci}{{A`{AK`n}}}{{Ib{}{{Cj{Jl}}}}}{}{}{{Dn{{Ch{e}}}{{Ad{{Ch{g}}}}}}}}{{{f{Df{CNb{c}}}}}{{A`{{N`{{BDb{BAd}}}}n}}}BKh}{{{f{Df{BMl{c}}}}}{{A`{{BDb{El}}n}}}BMn}{{{f{C@f}}}{{f{{N`{{BDb{BAd}}}}}}}}{{{f{Df{C@d{c}}}}}{{A`{{N`{{BDb{BAd}}}}n}}}BKh}{{{f{BLh}}{Ch{Gb}}}{{A`{{N`{{BDb{El}}}}n}}}}{{{f{CIl}}}{{f{DFf}}}}`````{{}BLb}`{{{f{DfBF`}}{f{Df{BJd{BJb}}}}{f{Df{BJd{BJf}}}}}{{A`{{N`{{BDb{El}}}}n}}}}`{{{f{DBd}}}{{l{Nh}}}}{{{f{CKl}}}{{l{Nh}}}}{{{f{CB`}}}{{A`{{l{Nh}}n}}}}`{{{f{CKn}}}{{l{Lb}}}}`{{{f{Df{N`{AFj}}}}DFh}{{A`{KfBCj}}}}{{BF`c}BF`{{If{{Bl{BBd}}}}}}0````{{{f{AK`}}{f{{l{Bd}}}}{Ch{c}}}{{A`{AK`n}}}{}}{{{f{DfBLb}}BLbd}b}{{{f{BF`}}{BJd{BJb}}{BJd{BJf}}}b}{{{C@d{c}}d}{{C@d{c}}}BKh}{{{f{Df{C@d{c}}}}{N`{CIl}}}bBKh}{{{C@h{c}}d}{{C@h{c}}}BOn}{{{CNb{c}}d}{{CNb{c}}}BKh}{{{BMl{c}}d}{{BMl{c}}}BMn}{{{CNh{c}}d}{{CNh{c}}}BKh}5{{CMnd}CMn}{{BBdMb}BBd}{{{f{DfBFn}}{Ch{Id}}}b}{{{f{AKb}}Hb}{{l{c}}}Dl}{{{f{BJn}}Hb}Ab}{{BMfBBd}BBd}{{BF`c}BF`{{BA`{BBd}}}}{{BMhBBd}BBd}{{BBdBBd}BBd}{{{f{AKd}}Hbc}{{l{e}}}{}Dl}{{BF`ce}BF`{{BA`{BBd}}}{{BA`{BBd}}}}{{BBdce}BBd{{BA`{BBd}}}{{BA`{BBd}}}}{{{f{BJj}}}d}{BBdBBd}{{{f{DfACf}}}b}{{{f{DfBJn}}}b}{{BBd{Ch{Kf}}}BBd}{{BF`cCDd}{{A`{bn}}}{{If{ANb}}}}{{BF`cCEb}{{A`{bn}}}{{If{ANb}}}}{{BF`cCEh}{{A`{bn}}}{{If{ANb}}}}{{BF`cCFf}{{A`{bn}}}{{If{ANb}}}}{{{f{CKb}}}{{l{Fb}}}}````{{{f{BJn}}HbGb}Ab}{{BF`HbJl}BF`}{{BMhBBdBBd}BBd}={{{f{DfBFn}}GbGb}b}0`{{{f{AKf}}GbGb}AKf}{{fGbGb}c{}}1022{{BFnGbGb}BFn}0`{{{f{AHl}}d}{{l{c}}}Dl}{{BMfF`}BBd}{{BF`cFh}BF`{{BFh{Dd}}}}{{BMhF`}BBd}{{BBdF`}BBd}{{BBdeFh}BBd{{BA`{BBd}}Jf}{{If{{Bl{c}}}}}}{{BF`cFh}BF`{{If{{Bl{BBd}}}}}}{{{f{AHl}}F`}{{l{c}}}Dl}{{{f{BJn}}F`}{{A`{Abn}}}}{{{f{{N`{c}}}}}{{Ch{{f{ALh}}}}}{ALhA@f}}{{{f{CJj}}}{{f{DDn}}}}{{{f{CBd}}}{{f{DDn}}}}{{{f{CBh}}}{{f{DDn}}}}{{{f{BOf}}{f{{l{An}}}}}{{l{Ah}}}}{{{f{BJn}}Hb}{{Hf{AbAb}}}}{{{f{BFn}}Gb}{{Hf{{Cn{Cl}}{Cn{Cl}}}}}}0{{{f{BOf}}{f{{l{An}}}}Gb}{{A`{{l{j}}n}}}}0{{{f{{l{An}}}}{f{{l{An}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bf}}}}}}}{{Dn{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}4{{{f{{l{An}}}}{f{{l{An}}}}Gbed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bf}}}}}}}{{Dn{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{BBdBBd}`{{{f{CKb}}{f{{Bl{Bj}}}}}{{l{Bd}}}}{{{f{CKb}}{f{{l{Bh}}}}}{{l{Bd}}}}`{{BMfBj}BBd}{{BF`Bj}BF`}{{BMhBj}BBd}{{{f{AKh}}Bj}{{Ch{Aj}}}}{{BBdBj}BBd}{{{f{BJn}}Bj}{{Ch{Aj}}}}{{{f{DFj}}Bj}Mj}{{{f{BJn}}Bj}{{A`{Mjn}}}}{{JlJl}A@h}{BBdDFl}{{{f{BOf}}{f{Ff}}}{{A`{{l{An}}n}}}}{{{f{{l{An}}}}{f{Bf}}d}{{l{An}}}}{{{f{BOf}}}{{l{Fb}}}}0{{{f{BOf}}}{{l{An}}}}{{{f{BOf}}{f{Ff}}{f{Ff}}}{{A`{{l{An}}n}}}}4`{{{f{CB`}}{f{Bf}}}{{A`{Abn}}}}`{{BBdEl}BBd}`{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}707070{{{f{BOf}}{f{{l{An}}}}}{{l{An}}}}10{{{f{{N`{ce}}}}}GbA@fBLd}{BBdBJl}{{{BKj{}{{Ad{c}}}}{f{Ab}}}c{}}{{BBdBBd}}{{BKlBKl}}{{BLbBLb}BLb}{{{f{DfBLb}}BLb}b}{{{f{BKn}}{f{Ab}}}{{A`{Abn}}}}{{BLfc}BLf{{BA`{Dd}}}}{{DCd{f{Bf}}}BBd}{{{f{BJj}}}{{f{Dd}}}}`1{{{f{Bf}}}BBd}{BMfBBd}{BF`BF`}{BMhBBd}{{{f{AHd}}}{{Ch{c}}}{}}{BBdBBd}{{{f{DDd}}}Mj}{{{f{BJn}}}{{A`{Mjn}}}}{{}{{BLn{{N`{BLl}}}}}}{CA`CA`}?{{{f{Df}}g}{{A`{eBCj}}}{}{}{{ABb{{f{Dfc}}}{{Ad{e}}}}}}{{BF`Jl}BF`}{{BL`{Ch{Gb}}}BF`}{{BMhBBd}BBd}{{BBd{Ch{Gb}}}BBd}{{{f{AKj}}{f{c}}}{{A`{AKjn}}}A@f}{{{f{BJn}}{f{{l{Fb}}}}}{{A`{Abn}}}}{{{f{DFn}}{f{{Bl{A@h}}}}Mb}DFn}{{{f{DFn}}{f{{Bl{A@h}}}}}DFn}{{{f{BJn}}{f{{Bl{Jl}}}}}{{A`{Abn}}}}{{{f{BJn}}{f{{Bl{Jl}}}}}Ab}{{{f{AKl}}{f{c}}}AKlA@f}{{{f{BJn}}{f{{l{Fb}}}}}Ab}{{{f{DfBFn}}}{{Ch{Id}}}}{{BBdBBdBBd}BBd}{{CGbc}CGd{{BA`{BBd}}}}{{CGfc}CGh{{BA`{BBd}}}}`{{BBdBBdBG`CC`}BBd}```{{{f{CB`}}Ld}{{A`{{l{Lb}}n}}}}{BF`{{A`{DG`n}}}}{CG`{{A`{DG`n}}}}1{{{f{CIn}}}{{Ch{Jj}}}}{{BMhGb}BBd}{{{f{D@b}}B@`}{{BDb{BAd}}}}{{{f{BFn}}}{{Cn{Cl}}}}{{{f{AKn}}}{{Gj{{f{{Bl{Bj}}}}}}}}{{{f{BF`}}d}{{A`{Ejn}}}}{{{f{DGb}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}{{{f{BKb}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}{{{f{BBd}}{f{{BDb{El}}}}DAh}{{A`{Ojn}}}}{{{f{BOf}}{f{{l{Fb}}}}d}{{A`{{l{Lb}}n}}}}{BMfBBd}{{{f{BOf}}}{{l{An}}}}{DCdBBd}{{{f{AB`}}}{{Ch{Jl}}}}{fc{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{BBdBBd}{{{f{BMj}}}{{A`{Ojn}}}}{{{f{CB`}}{f{Bf}}}{{A`{Abn}}}}{fEj}000000000000{{{f{DfD@b}}{f{{BDb{El}}}}}{{A`{dn}}}}`887{{{f{CEb}}c}{{C@`{c}}}BOn}{{{f{CFf}}c}{{C@h{c}}}BOn}{{{f{DfBLb}}BLb}b}``{{BF`JlcFh}BF`{{If{{Bl{BBd}}}}}}{{{f{BFn}}{f{BFn}}}Id}{{{f{BFn}}f}Id}10{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}g{}{}{}}{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}g{}{}{}}{{{f{DGd}}{Ch{{f{AMf}}}}{f{{l{An}}}}}{{A`{DGdn}}}}{{{f{BG`}}Hb{Ch{{f{AMf}}}}ceg}{{A`{Hbn}}}{{Dn{Hb}{{Ad{Hb}}}}}{{Dn{Hb}{{Ad{AMd}}}}}{{Dn{AMd}{{Ad{Hb}}}}}}{{{f{BG`}}Hb{Ch{{f{AMf}}}}}{{A`{Hbn}}}}{{{f{CCf}}Hb{Ch{{f{AMf}}}}}{{A`{Hbn}}}}10`10{g{{A`{AMne}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}{e{{A`{BFnc}}}{}{{Ib{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{e{{A`{BFnc}}}{}{{Ib{}{{Cj{{A`{bc}}}}}}}}2{{AGdg}{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGde}{{A`{BFnc}}}{}{{Ib{}{{Cj{{A`{bc}}}}}}}}{{AGde}{{A`{BFnc}}}{}{{Ib{}{{Cj{{A`{{Ch{b}}c}}}}}}}}{B@h{{A`{eg}}}{}{{AMn{c}}ALd}{}}0{{B@hAGd}{{A`{eg}}}{}{{AN`{c}}ALd}{}}0{{ADnDd}{{A`{{l{c}}e}}}Dl{}}{{AE`{f{{l{c}}}}}{{A`{{l{c}}e}}}Dl{}}10{{AE`DdEl}{{A`{{l{c}}e}}}Dl{}}0{c{{A`{e}}}{}{}}000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{Jj{{A`{CInn}}}}{{{N`{{Bl{c}}e}}}{{A`{{N`{{AAb{c}}e}}}}}{}BLd}22222222222222{DGf{{A`{CIlBCl}}}}{{{f{D@b}}{f{Bf}}}{{A`{Ojn}}}}{{}{{A`{c}}}{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{CCh{Ch{CMl}}}{{A`{{BKd{AFj}}n}}}}{{{f{BMj}}c}{{A`{Ojn}}}{{ABb{{f{El}}}{{Ad{{A`{Eln}}}}}}}}{{{f{BMj}}c}{{A`{Ojn}}}{{ABb{{f{{Bl{{f{El}}}}}}}{{Ad{{A`{Eln}}}}}}}}{{BBdc}{{A`{BBdn}}}{{Af{BBd}{{Ad{{A`{BBdn}}}}}}}}{{{f{BMj}}c}{{A`{Ojn}}}{{ABb{{f{Oj}}}{{Ad{{A`{Ojn}}}}}}}}{{DDhGb}{{A`{Gbn}}}}{Bj{{A`{CFjn}}}}{Jl{{A`{CFln}}}}{Of{{A`{CFnn}}}}{c{{A`{{N`{c}}DGh}}}{}}{{AGd{Gj{{Cn{Cl}}}}{Ch{Id}}}{{A`{BFnn}}}}{{ce}{{A`{{N`{ce}}DGh}}}{}BLd}{{}{{A`{{N`{{BOd{c}}}}DGh}}}{}}{c{{A`{{N`{{BOd{e}}c}}DGh}}}BLd{}}10`{c{{A`{{DEd{{N`{c}}}}DGh}}}{}}{{ce}{{A`{{DEd{{N`{ce}}}}DGh}}}{}BLd}{{{f{BN`}}{f{Df{Gj{Bj}}}}}{{A`{bn}}}}{{{f{CAb}}{f{Df{Gj{Bj}}}}}{{A`{bn}}}}{{{f{BLl}}{f{Df{Gj{Bj}}}}}{{A`{bn}}}}{f{{A`{GlBBj}}}}000000000000{{{N`{ce}}}{{A`{c{N`{ce}}}}}{}BLd}{fAAl}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{}{{f{Bf}}}}`{{BLbBLb}BLb}{{{f{AHn}}}{{A`{AHnn}}}}{BMfBBd}{{BF`{Ch{{Gj{Ej}}}}BDh}BF`}{BMhBBd}{BBdBBd}{{{f{BJn}}}{{A`{Abn}}}}{{BF`{Ch{e}}BDh}BF`{{BA`{BKl}}Jf}{{If{{Bl{c}}}}}}5{{BF`{Ch{{Gj{Dd}}}}BDh}BF`}431{{BF`e}BF`{{BA`{BKl}}Jf}{{If{{Bl{c}}}}}}{{{N`{{AG`{c}}}}}{{A`{cb}}}Il}{{{N`{ce}}}cJfBLd}{{{f{DfMj}}Jj}b}{{{f{DfCCh}}{f{DGj}}}b}8{{{f{DGl}}c{f{Bf}}BG`}{{A`{AAnn}}}{{BFh{Dd}}}}0{{{C@d{c}}d}{{C@d{c}}}BKh}```{{BLfCDl}BLf}`{{{f{BFn}}}{{Ch{{f{Id}}}}}}0{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}cJf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{Mj}}}{{f{Jj}}}}{{{f{CMb}}ddDdd}{{A`{AAnn}}}}{{BBddd{f{Bf}}d}BBd}``3{{{f{BFn}}}{{f{{Bl{{Cn{Cl}}}}}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}gJf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{BFn}}}DBj}{{BMfBj}BBd}{{BF`Bj}BF`}{{BMhBj}BBd}{{{f{AKh}}Bj}{{Ch{Aj}}}}{{BBdBj}BBd}{{{f{BJn}}Bj}{{Ch{Aj}}}}{{{f{DFj}}Bj}Mj}{{{f{BJn}}Bj}{{A`{Mjn}}}}``{{{f{DGn}}A@l{f{Df{Gj{Kf}}}}}{{A`{bn}}}}{{{f{DGn}}A@l{f{Df{Bl{Kf}}}}}{{A`{bn}}}}`{{{f{{N`{{AG`{c}}}}}}g}{{A`{eb}}}Il{}{{ABb{{f{c}}}{{Ad{e}}}}}}{{}c{}}00000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000{{{f{{N`{ce}}}}}GbA@fBLd}{{{f{CKj}}}{{l{Nh}}}}{{{f{CKl}}}{{l{Nh}}}}{{{f{CB`}}}{{A`{{l{Nh}}n}}}}10{{{f{CCd}}}{{Ch{Jl}}}}{{{f{BG`}}}Hb}`{{{f{BG`}}}d}`{cCGb{{BA`{BBd}}}}{{CGdc}CGf{{BA`{BBd}}}}{{CGhc}CGf{{BA`{BBd}}}}```{{BLfBF`}BLf}{{CHjBBd}CHj}{{{C@d{c}}{f{{BDb{BAd}}}}{Ch{{f{{BDb{BAd}}}}}}}{{A`{{C@d{c}}n}}}BKh}{{CBh{Ch{{DBf{Gb}}}}}CBh}{{{BOj{c}}{DBf{Gb}}}{{BOj{c}}}BOn}{{{CNh{c}}{DBf{Gb}}}{{CNh{c}}}BKh}{{CBdd}CBd}{Gbc{}}0{{{CKd{c}}{Ch{{DBf{Gb}}}}}{{CKd{c}}}BKh}{{CChGb}CCh}{{CBd{Ch{CJl}}}CBd}{{CBh{Ch{CJl}}}CBh}{{BF`d}BF`}{{BJjCDb}BJj}{{BF`BBd}BF`}{{BF`c}BF`{{If{{Bl{BBd}}}}}}{{{CNb{c}}{Ch{{Gj{Ej}}}}}{{CNb{c}}}BKh}{{{BMl{c}}{Ch{{Gj{Ej}}}}}{{BMl{c}}}BMn}{{{C@d{c}}{Ch{{Gj{Ej}}}}}{{C@d{c}}}BKh}{{CCh{Ch{{N`{{Bl{Dd}}}}}}}CCh}`4{{CBd{Ch{Dd}}}CBd}{{CCj{Ch{c}}}CCj{{BA`{CCn}}}}{{{CNd{c}}B@`}{{CNd{c}}}{}}{{{C@`{c}}B@`}{{C@`{c}}}BOn}{{{CNd{c}}{Ch{CEf}}}{{CNd{c}}}{}}{{CL`{Ch{CEf}}}CL`}{{{C@`{c}}{Ch{CEf}}}{{C@`{c}}}BOn}{{{C@h{c}}CFh}{{C@h{c}}}BOn}{{BF`c}BF`{{If{{Bl{BF`}}}}}}{{{C@h{c}}{Ch{Gb}}}{{C@h{c}}}BOn}{{{BOj{c}}{Ch{Ej}}}{{BOj{c}}}BOn}0{{CHjBBd}CHj}{{CHlBBd}CHl}{{CBdd}CBd}{{CCjd}CCj}{{{f{BMj}}El}{{A`{Ojn}}}}{{CBd{Ch{{N`{{BDb{El}}}}}}}CBd}{{CCh{Ch{{N`{{Gj{El}}}}}}}CCh}{{CBdCCl}CBd}{{CCjCCl}CCj}{{CBdBj}CBd}{{CCjBj}CCj}{{CL`CMl}CL`}{{BJl{Gj{BBd}}}{{A`{BBdn}}}}{{{BOj{c}}{Ch{Gb}}}{{BOj{c}}}BOn}{{{BOj{c}}{Ch{d}}}{{BOj{c}}}BOn}{{CHlBBdBBdBBd}CHl}=={{CChd}CCh}{{{CNb{c}}{Ch{{Gj{Ab}}}}}{{CNb{c}}}BKh}{{{C@d{c}}{Ch{{Gj{Ab}}}}}{{C@d{c}}}BKh}{{CHjBBdBBdBBd}CHj}4{{CHjBBd}CHj}{{CHlBBd}CHl}{{CBdd}CBd}{{CBhd}CBh}{{{CNh{c}}d}{{CNh{c}}}BKh}{{{CKd{c}}d}{{CKd{c}}}BKh}9{{{CNb{c}}{Ch{{Hf{Dd{N`{Bf}}}}}}}{{CNb{c}}}BKh}{{{C@d{c}}{Ch{{Hf{Dd{N`{Bf}}}}}}}{{C@d{c}}}BKh}{{CBd{Ch{Dd}}}CBd}{{CBh{Ch{Dd}}}CBh}{{CBd{Ch{Gb}}}CBd}{{CBh{Ch{{DBf{Gb}}}}}CBh}{{CCh{Ch{Gb}}}CCh}{{{CNf{c}}DH`}{{CNf{c}}}BOn}{{{CNh{c}}DH`}{{CNh{c}}}BKh}{{{BOj{c}}Ej}{{BOj{c}}}BOn}={{CChd}CCh}{{BAd{DHb{DdDd}}}BAd}{{CHjBBd}CHj}{{CHlBBd}CHl}010{{CBdd}CBd}{{CCjd}CCj}3{{CJjc}CJj{{BA`{{Ch{Gb}}}}}}<{{CBdc}CBd{{BA`{{Ch{Gb}}}}}}{{CBh{Ch{Gb}}}CBh}{{CBhc}CBh{{BA`{{Ch{Gb}}}}}}{{{CNb{c}}{Ch{Gb}}}{{CNb{c}}}BKh}{{{BMl{c}}{Ch{Gb}}}{{BMl{c}}}BMn}{{{CKd{c}}{Ch{Gb}}}{{CKd{c}}}BKh}{{CCh{Ch{Gb}}}CCh}10:>{{CBd{Ch{CD`}}}CBd}{{CCj{Ch{CD`}}}CCj}{{BF`BLb}BF`}{{CChCCj}CCh}{{{CKd{c}}{Ch{e}}}{{CKd{c}}}BKh{{BA`{CMl}}}}{{CCh{Ch{c}}}CCh{{BA`{CMl}}}}{{CJj{N`{{Bl{CMl}}}}}CJj}{{{CKd{c}}{Ch{{N`{BKf}}}}}{{CKd{c}}}BKh}{{{C@d{c}}{Ch{{N`{BKf}}}}}{{C@d{c}}}BKh}{{BF`d}BF`}{{{CNb{c}}{Ch{{Gj{Gb}}}}}{{CNb{c}}}BKh}{{{BMl{c}}{Ch{{Gj{Gb}}}}}{{BMl{c}}}BMn}{{{CNh{c}}{Ch{{Gj{Dd}}}}}{{CNh{c}}}BKh}{{{CKd{c}}{Ch{{N`{{Bl{Dd}}}}}}}{{CKd{c}}}BKh}{{{C@d{c}}{Ch{{Gj{Gb}}}}}{{C@d{c}}}BKh}{{CCh{Ch{{N`{{Gj{Gb}}}}}}}CCh}6{{CBd{Ch{Bj}}}CBd}{{{BOj{c}}Bj}{{BOj{c}}}BOn}{{CCj{Ch{Bj}}}CCj}{{{BOj{c}}CDj}{{BOj{c}}}BOn}{{CBdd}CBd}{{CChd}CCh}{{CJjd}CJj}2{{CBhd}CBh}{{{CKd{c}}d}{{CKd{c}}}BKh}3?{{{C@h{c}}{Ch{Gb}}}{{C@h{c}}}BOn}{{CJjc}CJj{{BA`{{Ch{DDb}}}}}}{{BF`c{Ch{Jl}}}BF`{{BA`{Dd}}}}{{CBdc}CBd{{BA`{{Ch{DDb}}}}}}{{CBd{Ch{DDb}}}CBd}{{CBh{Ch{DDb}}}CBh}{{CBhc}CBh{{BA`{{Ch{DDb}}}}}}{{{CNb{c}}{Ch{DDb}}}{{CNb{c}}}BKh}{{{BMl{c}}{Ch{DDb}}}{{BMl{c}}}BMn}{{{CKd{c}}{Ch{{f{DfDDb}}}}}{{CKd{c}}}BKh}{{{C@d{c}}{Ch{DDb}}}{{C@d{c}}}BKh}{{CCh{Ch{DDb}}}CCh}{{{f{BMj}}}{{A`{Ojn}}}}{{CChGb}CCh}{{CBd{Ch{{N`{{BDb{El}}}}}}}CBd}{{CBh{Ch{{N`{{BDb{El}}}}}}}CBh}{{{CNh{c}}{N`{{BDb{El}}}}}{{CNh{c}}}BKh}{{{CKd{c}}{N`{{BDb{El}}}}}{{CKd{c}}}BKh}{{CCh{Ch{{N`{{BDb{El}}}}}}}CCh}{{CBdc}{{A`{CBdn}}}{{Dn{{BDb{El}}}{{Ad{{A`{{BDb{El}}n}}}}}}}}4{{{CNh{c}}{f{{BDb{El}}}}}{{CNh{c}}}BKh}{{{CKd{c}}{f{{BDb{El}}}}}{{CKd{c}}}BKh}3{{CHjBBd}CHj}{{CHlBBd}CHl}{{CBdBj}CBd}{{{BOj{c}}Bj}{{BOj{c}}}BOn}{{CCjBj}CCj}{{BF`d}BF`}{{CBdGb}CBd}?0?{{{C@d{c}}{Ch{{Hf{GbGb}}}}}{{C@d{c}}}BKh}2{{CJjDDn}CJj}{{CBdDDn}CBd}{{CBhDDn}CBh}{{{C@h{c}}CHh}{{C@h{c}}}BOn}{{BJj{Ch{Dd}}}BJj}{{{BOj{c}}{Ch{Ej}}}{{BOj{c}}}BOn}{{CHjLd}CHj}{{CHj{Ch{Dd}}}CHj}{{CBdd}CBd}{{CCjd}CCj}10<{{BFn{Ch{Id}}}BFn}{{{f{BFn}}{Ch{Id}}}{{Cn{Cl}}}}{{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}{Ch{Id}}}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}2{{CHlBBd}CHl}{{CHjBBd}CHj}{BF`BF`}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}{{{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}c}e{}{}{}}10{{c{ABj{}{{ABd{c}}{ABf{e}}{ABh{g}}}}}e{}{}{}}210213210210{{{f{Df{N`{AFj}}}}{f{{Bl{Bj}}}}}{{A`{GbBCj}}}}{{{f{CEb}}AAnc}{{A`{bn}}}BOn}{{{f{CFf}}AAnc}{{A`{bn}}}BOn}{{{f{DfAAn}}{f{ANb}}e{f{g}}Gb}{{A`{bn}}}{{BA`{Dd}}}{{Ib{}{{Cj{c}}}}}{DHdIlIn}}{{{f{Df}}c}{{A`{GbBCj}}}DEl}{{{f{Df{N`{AFj}}}}{f{{Bl{DHf}}}}}{{A`{GbBCj}}}}{{BBdc}BBd{{BA`{BBd}}}}{{{f{CKj}}}{{l{Kl}}}}{{{f{CKl}}}{{l{Kl}}}}{{{f{CB`}}}{{A`{{l{Kl}}n}}}}``{{{f{AL`}}{f{{l{Bd}}}}{f{{l{c}}}}}{{A`{{l{c}}n}}}Dl}````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Id}}}Aj}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{cc{}}{{}Gb}{{}DHh}{{}c{}}{{{Ch{{f{BKf}}}}{f{DHj}}{f{{BDb{BAd}}}}}{{A`{dn}}}}{{{f{DHh}}Aj{f{AGd}}}d}{{{Gj{{Hf{{f{CLj}}DHl}}}}BAd{Ch{DHn}}}{{A`{{Cn{Cl}}n}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6``{{{f{BGh}}c}Ab{{Dn{{Hf{Jl{f{{BGj{Jl}}}}}}}{{Ad{Ch}}}}IlIn}}{{{f{BGh}}c}Ab{{Dn{{Hf{Jl{f{{BGj{Jl}}}}}}}{{Ad{}}}}IlIn}}{{{f{{Bl{{AAb{Jl}}}}}}c}Ab{{Dn{{AAb{Jl}}}{{Ad{Ch}}}}IlIn}}{{{f{{Bl{{AAb{Jl}}}}}}c}Ab{{Dn{{AAb{Jl}}}{{Ad{}}}}IlIn}}{{{f{{Bl{c}}}}e{Ch{BI`}}}{{ALl{c}}}{BIbBId}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{Bl{c}}}}{f{Id}}e{Ch{BI`}}}{{ALl{c}}}{BIbBId}{{D`{}{{Cj{{Hf{JlJl}}}}}}Jh}}{{{f{{l{c}}}}JlJl}{{l{c}}}Dl}{{{f{{Gj{{AAb{Jl}}}}}}{f{{Bl{{Cn{Cl}}}}}}}d}{{{f{BIf}}{f{C`}}}Ab}{{BIhBIh}BIh}0``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}DlDl{{Dn{ff}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}{{Dn{f}{{Ad{}}}}}Dl}{{{l{c}}{l{e}}gik}{{l{m}}}DlDl{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}{{Dn{}{{Ad{}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}DlDl{{ALb{ChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}g}bDlDl{{Af{ChCh}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{An}}}DlDl{{Af{{f{DfEj}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}DlDl{}{{Af{}{{Ad{g}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDl{ClALd}{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iDd}{{l{k}}}DlDlCl{{Af{ff}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}DlDlCl{{Af{}{{Ad{g}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{A`{Abn}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}DlDl{{Af{ff}{{Ad{{Cn{Cl}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDl{}{}{{Af{ChCh}{{Ad{{A`{{Ch{g}}i}}}}}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}DlDlDl{{ALf{ChChCh}}}Dl}{{{f{{l{c}}}}{f{{l{e}}}}k}{{A`{{l{m}}i}}}DlDlClALh{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kDd}{{A`{{l{m}}i}}}DlDlClALh{{Af{ff}{{Ad{{A`{gi}}}}}}}{{Dl{}{{I`{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{A`{{l{c}}g}}}DlDlALh{{Af{ff}{{Ad{{A`{{Cn{Cl}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{A`{{l{o}}k}}}DlDlDl{}{}{{Af{ChChCh}{{Ad{{A`{{Ch{i}}k}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{Ch}{{Ad{{A`{{Ch{e}}g}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{}{}{{Af{}{{Ad{{A`{eg}}}}}}}Dl}{{{f{{l{c}}}}i}{{A`{{l{k}}g}}}Dl{ClALd}ALh{{Af{f}{{Ad{{A`{eg}}}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}Dl{{ALj{Ch}}}Dl}{{{f{{l{c}}}}e}{{l{g}}}DlALjDl}{{{f{{l{c}}}}g}{{l{i}}}DlCl{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{l{c}}g}{{l{i}}}DlCl{{Af{}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}Dl{ClALd}{{Af{f}{{Ad{e}}}}}{{Dl{}{{I`{e}}}}}}0``{{{f{DI`}}}{{l{Fb}}}}0{{{f{DI`}}{f{{l{Lb}}}}d}{{A`{Abn}}}}{{{f{DI`}}{f{{l{An}}}}d}{{A`{Abn}}}}{{{f{DI`}}}Ab}{{{f{DI`}}}{{A`{Abn}}}}1{{{f{DI`}}}{{A`{{l{Fb}}n}}}}{{{f{DI`}}}{{l{Cf}}}}{{{f{DI`}}{f{Ab}}}{{A`{Abn}}}}{{{f{DI`}}F`}{{A`{{l{Cf}}n}}}}{{{f{DI`}}Bj}{{A`{Abn}}}}5{{{f{DI`}}}{{A`{{l{Ah}}n}}}}01{{{f{DIb}}}{{f{{l{Cf}}}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{C@nBBd}BBd}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}3{cc{}}{{}Gb}{{}c{}}{C@nBBd}7{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4`````````````````````{{{f{DfDId}}{f{{Bl{Bj}}}}ddd}{{A`{bn}}}}{{{f{DfDId}}d}b}>>>>====;;;;::::9999{{{f{DId}}}El}99998888{{{f{{Bl{Gb}}}}Gb{f{{BDb{El}}}}{Ch{Bj}}CCld}{{A`{{Gj{DId}}n}}}}8888{DId{{A`{Abn}}}}7777666655559999```````````{{{f{BNd}}{Ch{{f{Bf}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNd}}{Ch{{f{Bf}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNd}}{Ch{{f{Bf}}}}Lddd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNd}}{Ch{{f{Bf}}}}Ldd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNd}}{Ch{{f{Bf}}}}d}{{A`{{L`{LnLb}}n}}}}`{{{f{CKj}}}{{l{Nh}}}}{{{f{CKl}}}{{l{Nh}}}}{{{f{CKn}}}{{l{Lb}}}}`{{{f{DBd}}}{{l{Nh}}}}21{{{f{CKj}}}{{l{Bd}}}}{{{f{CKl}}}{{l{Bd}}}}{{{f{CKj}}}{{l{Kl}}}}{{{f{CKl}}}{{l{Kl}}}}55`46576{{{f{DBd}}}{{l{Kl}}}}16{{{f{CKj}}}{{l{Nd}}}}{{{f{CKl}}}{{l{Nd}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{KnKl}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}}{{L`{LnLb}}}}{{Dd{f{{Bl{{f{Bf}}}}}}{f{Bf}}Ld}{{L`{LfLb}}}}=<{{{f{DF`}}A@b}{{A`{Abn}}}}{{{f{DF`}}{f{Ab}}CBl}{{A`{Abn}}}}101010101010<>=`?>>`98````````{{fh}b}{{{f{BNd}}{Ch{{f{Bf}}}}d}{{A`{{L`{KnKl}}n}}}}{{{f{BNd}}{Ch{{f{Bf}}}}}{{A`{{L`{KnKl}}n}}}}{{{f{BNd}}{Ch{{f{Bf}}}}Lddd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{BNd}}{Ch{{f{Bf}}}}Ldd{Ch{{f{Dd}}}}{f{{l{An}}}}}{{A`{{L`{LfLb}}n}}}}{{{f{DIf}}}{{f{{l{An}}}}}}{{{f{BNd}}{Ch{{f{Bf}}}}d}{{A`{{L`{LnLb}}n}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DIh}}}DIh}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{DIh}}{f{DIh}}}d}{{f{f{c}}}d{}}00{{{f{DIh}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{DIh}}{f{Dfc}}}bADl}`{{}Gb}{{}c{}}{{{f{DIh}}{f{Bf}}}d}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}5````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{DIj{c}}}}}{{DIj{c}}}{JfAl}}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{cc{}}{{{f{Bf}}}{{Ch{DIh}}}}{{}Gb}{{}c{}}`{{{f{Df{DIj{c}}}}{f{Bf}}}ChAl}{{{f{DfDIl}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{c}}}{}}{{{f{Df{DIj{Kl}}}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{Of}}}}{{{f{Df{DIj{Lb}}}}{f{{Bl{Bj}}}}{Ch{Ld}}}{{Ch{Hb}}}}`{fc{}}{c{{A`{e}}}{}{}}{{c{Ch{Ld}}}{{A`{{DJ`{}{{DIn{e}}}}n}}}{}{}}{{DIh{Ch{Ld}}}{{A`{{DIj{Kl}}n}}}}{{DIh{Ch{Ld}}}{{A`{{DIj{Lb}}n}}}}{{}{{A`{c}}}{}}{fAAl};````````{{fh}b}{f{{f{c}}}{}}0{{{f{Df}}}{{f{Dfc}}}{}}0{{{f{CJl}}}CJl}{{f{f{Dfc}}}b{}}{fb}{{}CJl}{Gb{{f{c}}}{}}0{Gb{{f{Dfc}}}{}}0{Gbb}0{{{f{CJl}}{f{CJl}}}d}{{{f{DJb}}{f{DJb}}}d}{{f{f{c}}}d{}}00{{{f{CJl}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}0{{{f{Bf}}}{{A`{DJb}}}}{{{f{Bf}}g}{{A`{CJln}}}{{If{Bf}}}{{BA`{Ej}}}{{Ib{}{{Cj{{Hf{ce}}}}}}}}{{{f{CJl}}{f{Dfc}}}bADl}{{}Gb}0{{}c{}}0``{fc{}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{fAAl}044{{CJlGb}CJl}`````````````{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{{Bl{Bj}}}}}{{Ch{DJd}}}}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{cc{}}=<{{{f{{Bl{Bj}}}}{f{Df{Gj{Bj}}}}}{{A`{{f{{Bl{Bj}}}}n}}}};:9=`````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{eAMn{}{{Ib{}{{Cj{c}}}}}}0{{AGde}AN`{}{{Ib{}{{Cj{c}}}}}}0{{{f{ANf}}}{{f{El}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{{f{{Bl{c}}}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{{f{AOh}}{f{El}}}{{A`{Abn}}}}{{{f{AOh}}{f{El}}Fn}{{A`{Abn}}}}`{B@he{}{{AMn{c}}ALd}}0{{B@hAGd}e{}{{AN`{c}}ALd}}0{{{AOb{Bf}}}El}{{{f{AOh}}}{{f{El}}}}`{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}{{{Gj{c}}AGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{Gj{c}}AGd}{{ALd{}{{ANh{e}}{ANj{c}}{ANl{g}}}}}{ANn{AO`{e}}}Jf{{H`{}{{Cj{e}}}}JhIlIn}}{{GbcAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{GbAGd}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AOh}}Gb}{{A`{Jjn}}}}{{{f{AOh}}Gb}Jj}{{}El}{{{f{BAn}}Gb}Jj}4{{BB`El}{{A`{Mjn}}}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{AGl{cgAGj}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}{{Ch{c}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{{{f{AMj}}{f{AMj}}}{{A`{{Hf{AMjAMj}}n}}}}{{{l{Ah}}{l{Ah}}}{{A`{{Hf{{l{Ah}}{l{Ah}}}}n}}}}{{{f{El}}{f{El}}}{{A`{Eln}}}}`{{}c{}}0{g{{A`{AMne}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{{AGdg}{{A`{AN`e}}}{}{}{{Ib{}{{Cj{{A`{ce}}}}}}}}0{B@h{{A`{eg}}}{}{{AMn{c}}ALd}{}}0{{B@hAGd}{{A`{eg}}}{}{{AN`{c}}ALd}{}}0{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}Gb}cJf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}0{{{f{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}}}gJf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}{Gbc{}}0{{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}{Ch{Id}}}{{ALd{}{{ANh{c}}{ANj{e}}{ANl{g}}}}}Jf{ANn{AO`{c}}}{{H`{}{{Cj{c}}}}JhIlIn}}```````````{{{f{AMj}}{f{AMj}}c}{{A`{AMjn}}}AOf}{{AOf{f{{l{Fb}}}}{f{{l{Fb}}}}}{{A`{{l{Fb}}n}}}}=<`````````{{}b}0{{}d}{{{f{{L`{LfLb}}}}{f{{l{An}}}}CJh{Gf{Hb}{{Ad{AMd}}}}{Gf{AMd}{{Ad{Hb}}}}{f{AMf}}{f{AMf}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bf}}}}{Gf{Hb}{{Ad{AMd}}}}{Gf{AMd}{{Ad{Hb}}}}{f{AMf}}{f{AMf}}}{{A`{{l{Lb}}n}}}}{{{f{{L`{LfLb}}}}{Ch{{f{Bf}}}}{f{{l{An}}}}CJh}{{A`{{L`{LfLb}}n}}}}```{{c{Ch{Id}}}D@d{}}{{{D@f{Hb}}{D@f{Bj}}{Ch{Id}}}D@h}{{{D@f{Hb}}{D@f{Bj}}{Ch{Id}}}D@j}`{CM`BBd}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{CM`Ld}BBd}3{{CM`BBdLd}BBd}{{CM`Dd}BBd}555{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}8{cc{}}9{{}Gb}{{}c{}};;;;;;;;;;{{CM`{Ch{Dd}}BBdCJh}BBd}{{CM`BBd}BBd}={{CM`{f{Bf}}}BBd}>;0>>>>>>>1{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{CM`BBd}0?0`{{{f{BIj}}{f{AAn}}{f{C`}}}{{A`{Abn}}}}{{{f{BIj}}}{{A`{{f{Dd}}n}}}}`{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{}DJf}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{DJf{Ch{{f{AGd}}}}}{{A`{AEln}}}}{cc{}}{{}Gb}{{}c{}}{{{f{DJf}}}d}{{GbGb}DJf}{{{f{DfDJf}}{Cn{Cl}}}b}{{{f{DfDJf}}}b}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}7`{{{f{{l{c}}}}}GbAl}0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJh}}}DJh}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{DJh}}{f{DJh}}}d}{{{f{DJh}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{{{f{DJh}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{fc{}}{fEj}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GlBBj}}}}{fAAl}6````````{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJj}}}DJj}{{f{f{Dfc}}}b{}}{fb}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{DJj}}{f{DJj}}}d}{{{f{DJj}}{f{DfHl}}}{{A`{bHn}}}}0{cc{}}{{{f{DJj}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{fc{}}{fEj}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{f{{A`{GlBBj}}}}{fAAl}6{{MbMb}Mb}{{{f{{l{Fb}}}}Jl}{{A`{bn}}}}{{{f{{ALl{Jl}}}}Jl}{{A`{bn}}}}```{{{f{Ab}}CEj}Ab}{{{f{Ff}}{f{Ff}}d}{{A`{Ffn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{{l{c}}}}e}ChM`{{Dn{}{{Ad{}}}}E`}}{{{f{Ab}}{f{C`}}}Ab}0{{{f{Ab}}Dd}Ab}0`{{fh}b}{{{f{DJl}}}{{f{AGf}}}}{{{f{DfDJl}}}{{Cn{Cl}}}}{{{f{DfDJl}}}{{f{DfAGf}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DJl}}}DJl}{{f{f{Dfc}}}b{}}{fb}{{}DJl}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{DJl}}}{{f{AGd}}}}{{{f{DfDJl}}Gb}b}{{{f{DJl}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{}Gb}{{}c{}}{{{f{DJl}}}Gb}{GbDJl}{{{f{DfDJl}}}b}70{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}{{{f{DJl}}}{{Ch{{f{DJn}}}}}}8`{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{DGj}}}DGj}{{f{f{Dfc}}}b{}}{fb}{{}DGj}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{{BDj{ElA@l}}}}}El}{{{f{DGj}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{DGj}}}Gb}{{{f{DGj}}}{{N`{{BDb{El}}}}}}{{{f{Bf}}dd}El}{{{f{DAl}}Bj{Ch{Gb}}d{Ch{{f{{BDb{El}}}}}}GbGb{Ch{{f{CCn}}}}{Ch{Bj}}Bj{Ch{{f{CD`}}}}dd{f{Df{Ch{Gb}}}}d}{{A`{{Hf{{BDb{El}}GbGb}}n}}}}{{}Gb}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{{f{DAl}}{f{CCh}}}{{A`{DGjn}}}}{{}{{A`{c}}}{}}{fAAl}5{{DGj{N`{{BDb{El}}}}}DGj}````{{{f{{l{c}}}}eALnd}{{Gj{Jl}}}Dl{{D`{}{{Cj{Ch}}}}}}{{{f{{Bl{f}}}}cJle}{{Gj{Jl}}}{{D`{}{{Cj{Ch}}}}}{{Dn{fGbf}{{Ad{d}}}}}}``{{{f{DK`}}}{{f{Ab}}}}{{{f{CB`}}}{{A`{{l{Kl}}n}}}}{{{f{CB`}}}{{A`{{l{Nh}}n}}}}0{{{f{CB`}}}{{A`{{l{Bd}}n}}}}22112{{{f{CB`}}}{{A`{{l{Nd}}n}}}}322{{{f{CB`}}{f{Bf}}}{{A`{Abn}}}}{{{f{CB`}}Ld}{{A`{{l{Lb}}n}}}}1445`{{Gb{f{Df{Gj{d}}}}}b}```{{{f{AKf}}GbGb}AKf}0{{Gb{f{{Bl{Ff}}}}{f{DfFh}}}{{A`{{AM`{{l{Fb}}}}n}}}}{{{f{{Bl{Ff}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{AMbn}}}}{{{f{{Bl{Ff}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{Kb{Hb}}n}}}}{{Dd{f{{Bl{Ff}}}}{f{{Bl{d}}}}{f{{Bl{d}}}}}{{A`{{l{Fd}}n}}}}{{Dd{f{{Bl{Ab}}}}}{{A`{{l{Fd}}n}}}}{{{f{Ab}}}{{A`{{Cn{Cl}}n}}}}{{{f{{Bl{Ab}}}}}{{A`{AMbn}}}}{{{f{{Bl{Ab}}}}}{{A`{{l{Fd}}n}}}}0```````````88```{{{f{BOb}}}{{f{{l{An}}}}}}{{{f{BOf}}}{{A`{{l{An}}n}}}}{{{f{BOf}}}{{l{An}}}}{{{f{BOf}}{f{{l{An}}}}}{{l{An}}}}{{{f{BOf}}{f{Bf}}d}{{A`{{l{Bd}}n}}}}{{{f{BOf}}{f{{l{An}}}}dd}{{A`{{l{Bd}}n}}}}{{{f{BOf}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{BOf}}{f{Bf}}d}{{A`{{l{Fb}}n}}}}{{{f{BOf}}{f{{l{An}}}}d}{{A`{{l{Fb}}n}}}}{{{f{BOf}}{f{{l{An}}}}Gb}{{A`{{l{An}}n}}}}{{{f{BOf}}{f{Bf}}}{{A`{{l{Ah}}n}}}}{{{f{BOf}}{f{{l{An}}}}}{{A`{{l{Ah}}n}}}}{{{f{BOf}}{f{Bf}}{f{El}}}{{A`{Abn}}}}5{{{f{BOf}}{f{{l{An}}}}dd}{{A`{{l{Fb}}n}}}}{{{f{BOf}}{f{Bf}}}{{A`{{l{Fb}}n}}}}=<{{{f{{Bl{{f{{l{An}}}}}}}}{f{Bf}}d}{{A`{{l{An}}n}}}}{{{f{BOf}}{f{Bf}}{f{Bf}}}{{A`{{l{An}}n}}}}0{{{f{BOf}}{f{Bf}}{f{Bf}}Gb}{{A`{{l{An}}n}}}}1{{{f{BOf}}{f{{l{An}}}}}{{l{Ah}}}}{{{f{BOf}}{f{{l{An}}}}Gb}{{A`{{l{j}}n}}}}0{{{f{{l{An}}}}{f{{l{An}}}}e}{{l{Ah}}}{{D`{}{{Cj{{f{Bf}}}}}}}{{Dn{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{{{f{{l{An}}}}{f{{l{An}}}}Gbed}{{A`{{l{j}}n}}}{{D`{}{{Cj{{f{Bf}}}}}}}{{Dn{{f{Bf}}{f{Bf}}}{{Ad{c}}}}}}2{{{f{BOf}}{f{Ff}}}{{A`{{l{An}}n}}}}{{{f{{l{An}}}}{f{Bf}}d}{{l{An}}}}{{{f{BOf}}}{{l{Fb}}}}0{{{f{BOf}}}{{l{An}}}}{{{f{BOf}}{f{Ff}}{f{Ff}}}{{A`{{l{An}}n}}}}4{{{f{{l{An}}}}{f{{l{An}}}}}{{l{An}}}}505050{{{f{BOf}}{f{{l{An}}}}}{{l{An}}}}10{{{f{BOf}}{f{{l{Fb}}}}d}{{A`{{l{Lb}}n}}}}444````````{{eGbGb}{{DKb{Hb}}}{{If{Bf}}}{{D`{}{{Cj{c}}}}}}{{eGbGb}{{Kb{Hb}}}{{If{{Bl{Bj}}}}}{{D`{}{{Cj{c}}}}}}``````````````{{fh}b}0{{{f{BJn}}}Aj}{{Dd{Gj{{Cn{Cl}}}}{f{AGd}}}{{A`{Abn}}}}{{Dd{Gj{{Cn{Cl}}}}{f{AGd}}{Ch{{f{{DHb{DdDd}}}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{B`Mh}}{{Abc}{}{B`Mh}}{{AbAb}}`{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}}{{Ch{Gb}}}}0{{{f{BJn}}F`}{{l{Fb}}}}{{{f{BJn}}}{{A`{{l{Fb}}n}}}}`{{{f{Ab}}}{{A`{{f{{l{Cf}}}}n}}}}{{{f{Ab}}Gb}{{f{{Cn{Cl}}}}}}{{{f{BJn}}}{{f{AGf}}}}{{{f{DfBJn}}}{{f{DfAGf}}}}{{{f{Ab}}}{{l{Ah}}}}{{{f{DfBJn}}}{{f{Df{l{c}}}}}Dl}{{{f{BJn}}}{{f{{l{c}}}}}Dl}{{{f{Ab}}}{{f{BJn}}}}{{{f{Ab}}}{{f{Ab}}}}0{{{f{DfBJn}}}{{A`{Gbn}}}}{{{f{DfAb}}}{{A`{Gbn}}}}{{{f{Ab}}}{{A`{{f{{l{Bh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fd}}}}n}}}}{{{f{BJn}}{f{Ab}}}{{A`{Abn}}}}00{{{f{Ab}}}{{A`{{f{{l{Bd}}}}n}}}}{f{{f{c}}}{}}000{{{f{Df}}}{{f{Dfc}}}{}}000{{{f{BJn}}}{{Ch{{Cn{Fl}}}}}}{{{f{BJn}}{f{El}}Fn}{{A`{Abn}}}}{{{f{Ab}}{f{El}}}{{A`{Abn}}}}0{{{f{Ab}}{f{El}}Fn}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{AMj}}n}}}}8{{{f{Ab}}{f{Ab}}}{{A`{Abn}}}}{{{f{Ab}}c}{{A`{Abn}}}Bb}{{{f{BJn}}}{{Gh{{Gd{{Cn{Cl}}}}{Gf{{f{{Cn{Cl}}}}}{{Ad{Gb}}}}}}}}{{{f{Ab}}}{{`{{D`{}{{Cj{Gb}}}}}}}}{{{f{BJn}}}{{f{{Gj{{Cn{Cl}}}}}}}}{{{f{DfBJn}}}{{f{Df{Gj{{Cn{Cl}}}}}}}}{{{f{DfAb}}}{{f{Df{Gj{{Cn{Cl}}}}}}}}{{{f{Ab}}}Ab}{{{f{Mb}}}Mb}1{{{f{BJn}}}{{N`{BJn}}}}{{f{f{Dfc}}}b{}}0{fb}0{{{f{DfAb}}}b}{{{f{Ab}}}{{A`{{f{{L`{KnKl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LfLb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{L`{LjLh}}}}n}}}}{{}Ab}{Gb{{f{c}}}{}}00{{{f{Ab}}}f}1{Gb{{f{Dfc}}}{}}000{{AbAb}}{{{f{Ab}}{f{Ab}}}}{{Abc}{}{B`Mh}}{{{f{Ab}}c}{}{B`Mh}}{Gbb}000{{{f{BJn}}}Ab}{{{f{BJn}}}{{f{El}}}}{{{f{Ab}}}{{A`{{f{{L`{LlLb}}}}n}}}}{{{f{Mb}}{f{Mb}}}d}{{{f{Ab}}{f{Ab}}}d}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{Ab}}c}{{A`{{l{Bd}}n}}}BAb}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}3{{{f{Ab}}{f{Bf}}}}{{{f{Ab}}c}{}BAb}266{{f{f{c}}}d{}}00{{{f{Ab}}}Gb}{{{f{Ab}}}{{A`{Abn}}}}{{{f{DfAb}}{f{Ab}}}{{A`{{f{DfAb}}n}}}}{{{f{Ab}}JjGb}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{Eh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ef}}}}n}}}}{{{f{BJn}}}{{Eb{Oj}}}}{{{f{Ab}}AIb}{{A`{Abn}}}}{{{f{BJn}}{f{{l{Bd}}}}}{{A`{Abn}}}}{{{f{Mb}}{f{DfHl}}}{{A`{bHn}}}}{{{f{Ab}}{f{DfHl}}}{{A`{bHn}}}}0{{{f{Ab}}}Ej}{cc{}}00{{{L`{LlLb}}}Ab}{{{L`{LnLb}}}Ab}{{{L`{LfLb}}}Ab}{{{L`{KnKl}}}Ab}4{{{l{c}}}AbDl}{DKdAb}{{Dd{f{{Bl{Jj}}}}d}{{A`{Abn}}}}{{Dd{f{{Bl{Jj}}}}{f{El}}d}{{A`{Abn}}}}{{Dd{Cn{Cl}}}{{A`{Abn}}}}{{Dd{Gj{{Cn{Cl}}}}}{{A`{Abn}}}}{{Dd{Gj{{Cn{Cl}}}}{f{El}}}Ab}{cAb{{Ib{}{{Cj{{f{Kd}}}}}}}}{cAb{{Ib{}{{Cj{Of}}}}}}{cAb{{Ib{}{{Cj{{Ch{Jl}}}}}}}}{cAb{{Ib{}{{Cj{{f{Hb}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Kd}}}}}}}}{cAb{{Ib{}{{Cj{Kd}}}}}}{cAb{{Ib{}{{Cj{{f{Nf}}}}}}}}{cAb{{Ib{}{{Cj{{f{O`}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Of}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Aj}}}}}}}}{cAb{{Ib{}{{Cj{O`}}}}}}{cAb{{Ib{}{{Cj{{f{Jl}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{O`}}}}}}}}{cAb{{Ib{}{{Cj{Aj}}}}}}{cAb{{Ib{}{{Cj{{Ch{Kf}}}}}}}}{cAb{{Ib{}{{Cj{{f{Bj}}}}}}}}{cAb{{Ib{}{{Cj{{f{Aj}}}}}}}}{cAb{{Ib{}{{Cj{Jl}}}}}}{cAb{{Ib{}{{Cj{d}}}}}}{cAb{{Ib{}{{Cj{Bj}}}}}}{cAb{{Ib{}{{Cj{{f{d}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Bj}}}}}}}}{cAb{{Ib{}{{Cj{Hb}}}}}}{cAb{{Ib{}{{Cj{Kf}}}}}}{cAb{{Ib{}{{Cj{{f{Kf}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Hb}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Nj}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{{f{Bf}}}}}}}}}}{cAb{{Ib{}{{Cj{Nj}}}}}}{cAb{{Ib{}{{Cj{{f{Nj}}}}}}}}{cAb{{Ib{}{{Cj{Ej}}}}}}{cAb{{Ib{}{{Cj{{f{Bf}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Ej}}}}}}}}{cAb{{Ib{}{{Cj{{f{Of}}}}}}}}{cAb{{Ib{}{{Cj{{Ch{Nf}}}}}}}}{cAb{{Ib{}{{Cj{Nf}}}}}}{cAb{{Ib{}{{Cj{{Ch{d}}}}}}}}{{Dd{Gj{Nf}}}Ab}{{Dd{Gj{Kd}}}Ab}{{Dd{Gj{Kf}}}Ab}{{Dd{Gj{Jl}}}Ab}{{Dd{Gj{O`}}}Ab}{{Dd{Gj{Bj}}}Ab}{{Dd{Gj{Od}}}Ab}{{Dd{Gj{Hb}}}Ab}{{Dd{Gj{Of}}}Ab}{{Dd{Gj{Nj}}}Ab}{{Dd{Gj{Aj}}}Ab}{{DdGb{f{El}}}Ab}{{{f{Ab}}GbGb}Ab}{{{f{BJn}}Gb}{{A`{Jjn}}}}{{{f{Ab}}}Gb}{{{f{Ab}}}Jn}{{{f{Ab}}}Ab}{{{f{BJn}}}{{Ch{{Nb{Fl}}}}}}{{{f{BJn}}Gb}{{Ch{{f{K`}}}}}}{{{f{BJn}}GbGb}{{Ch{{f{K`}}}}}}{{{f{BJn}}Gb}Jj}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}c}{{A`{{l{Bd}}n}}}BAb}{{{f{Ab}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}30{{{f{Ab}}{f{Bf}}}}3{{{f{BJn}}}d}{{{f{Mb}}{f{Dfc}}}bADl}{{{f{Ab}}{Ch{Gb}}}Ab}{{{f{Ab}}}{{A`{{f{{l{Nd}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Kl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Lb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nh}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fb}}}}n}}}}`{{{f{Ab}}}{{A`{{l{Ah}}n}}}}{{}Gb}000{{}c{}}000{{}Ff}{AbAAn}2{BFbAb}{AbAb}>{{{f{Ab}}}{{A`{{l{Bd}}n}}}}000{{{f{BJn}}}{{l{Bd}}}}0{{}d}0{{{f{Ab}}}Mb}{{{f{Ab}}}DKf}{{{f{Ab}}}{{`{{D`{}{{Cj{Ab}}}}}}}}{{{f{BJn}}}Gb}{{{f{Ab}}}Gb}{{{f{BJn}}Gb}Ab}{{{f{Ab}}}{{A`{{f{{l{Ah}}}}n}}}}{AbBBd}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}{{{f{Ab}}{f{Bf}}}}{{{f{Ab}}c}{{A`{{l{Bd}}n}}}BAb}3021{{{f{Ab}}}{{A`{{Ch{c}}n}}}Mh}{{{f{BJn}}}{{A`{Mjn}}}}{{{f{BJn}}}{{Ch{Aj}}}}{{{f{Ab}}}Mj}1232{{AbAb}}{{{f{Ab}}{f{Ab}}}}{{{f{Ab}}c}{}{B`Mh}}{{Abc}{}{B`Mh}}{{{f{BJn}}}Gb}{{{f{Ab}}}Gb}{{{f{BJn}}}{{A`{Gbn}}}}{{{f{BJn}}}{{f{Dd}}}}{{Ddc}Ab{{If{{Bl{{Ch{Nj}}}}}}}}{{Ddc}Ab{{If{{Bl{Of}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Nf}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Of}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Hb}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Od}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Jl}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{O`}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Kd}}}}}}}}{{Ddc}Ab{{If{{Bl{Jj}}}}}}{{Ddc}AbBFb}{{Ddc}Ab{{If{{Bl{{Ch{AMh}}}}}}}}{{Ddc}Ab{{If{{Bl{AMh}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{BAj}}}}}}}}{{Ddc}Ab{{If{{Bl{BAj}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{AMd}}}}}}}}{{Ddc}Ab{{If{{Bl{AMd}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{BAl}}}}}}}}{{Ddc}Ab{{If{{Bl{BAl}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Bj}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{d}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{Eb{{Bl{Bj}}}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Eb{{Bl{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{f{{Bl{Bj}}}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{f{{Bl{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{Gj{Bj}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{Eb{Bf}}}}}}}}}}{{Ddc}Ab{{If{{Bl{{Eb{Bf}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Ej}}}}}}}}{{Ddc}Ab{{If{{Bl{Aj}}}}}}{{Ddc}Ab{{If{{Bl{Kd}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{{f{Bf}}}}}}}}}}{{Dd{f{Ab}}}Ab}{{Ddc}Ab{{If{{Bl{{f{Bf}}}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Ab}}}}}}}}{{Ddc}Ab{{If{{Bl{Ab}}}}}}{{Dd{Oh{Jl}}}Ab}{{Ddc}Ab{{If{{Bl{{Ch{Kf}}}}}}}}{{Ddc}Ab{{If{{Bl{Od}}}}}}{{Ddc}Ab{{If{{Bl{Hb}}}}}}{{Dd{Oh{Kf}}}Ab}{{Dd{Oh{Of}}}Ab}{{Ddc}Ab{{If{{Bl{{Gj{Bj}}}}}}}}{{Dd{Oh{Hb}}}Ab}{{Ddc}Ab{{If{{Bl{d}}}}}}{{Ddc}Ab{{If{{Bl{Bj}}}}}}{{Ddc}Ab{{If{{Bl{{Ch{Aj}}}}}}}}{{Ddc}Ab{{If{{Bl{O`}}}}}}{{Ddc}Ab{{If{{Bl{Jl}}}}}}{{Ddc}Ab{{If{{Bl{Kf}}}}}}{{Ddc}Ab{{If{{Bl{Nj}}}}}}{{Ddc}Ab{{If{{Bl{Nf}}}}}}{{Ddc}Ab{{If{{Bl{Ej}}}}}}{{Dd{f{El}}}Ab}{{{f{BJn}}GbGb}Ab}{{DdGb}Ab}{{{f{DfDKf}}}Ch}{{{f{{AId{}{{Cj{c}}}}}}e}c{}{}}{{{f{Ab}}{f{Bf}}}{{A`{{l{Bd}}n}}}}{{{f{Ab}}c}{{A`{{l{Bd}}n}}}BAb}{{{f{Ab}}{f{Ab}}}{{A`{{l{Bd}}n}}}}3{{{f{Ab}}{f{Bf}}}}{{{f{Ab}}c}{}BAb}2{{{f{Ab}}}{{A`{{f{ADh}}n}}}}{{{f{BJn}}}Gb}`{{{f{Ab}}}{{Cn{Jd}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{BJn}}AjA@`}{{A`{Mjn}}}}{{{f{BJn}}}Ab}{{Abc}{}{B`Mh}}{{{f{Ab}}c}{}{B`Mh}}{{{f{Ab}}{f{Ab}}}}{{{f{DfBJn}}Dd}b}{{{f{DfAb}}Dd}{{f{DfAb}}}}{{{f{Ab}}{f{{Bl{Hb}}}}}{{A`{Abn}}}}06{MbMb}{{{f{BJn}}{f{Dn}}A@b}{{A`{Abn}}}}{{{f{Ab}}Ajdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gbdd{Ch{Kf}}}{{A`{Abn}}}}{{{f{Ab}}Gb}Ab}{{{f{DfAb}}Mb}b}{{{f{BJn}}Hb}Ab}{{{f{DfBJn}}}b}{{{f{DfAb}}}b}{{{f{Ab}}{Ch{Kf}}}Ab}{{{f{DKf}}}{{Hf{Gb{Ch{Gb}}}}}}{{{f{BJn}}HbGb}Ab}{{{f{Ab}}HbGb}Ab}{{{f{Ab}}F`}{{A`{Abn}}}}{{{f{BJn}}F`}{{A`{Abn}}}}{{{f{BJn}}Hb}{{Hf{AbAb}}}}{{{f{Ab}}Hb}{{Hf{AbAb}}}}{{{f{BJn}}Bj}{{Ch{Aj}}}}{{{f{BJn}}Bj}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{{f{{l{An}}}}n}}}}{{{f{Ab}}Gb}{{A`{{Eb{Bf}}n}}}}{{{f{Ab}}{f{El}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{{f{{l{j}}}}n}}}}{{AbAb}}{{{f{Ab}}c}{}{B`Mh}}{{{f{Ab}}{f{Ab}}}}{{Abc}{}{B`Mh}}{{{f{Ab}}}{{A`{cn}}}Mh}{{{f{BJn}}}{{A`{Mjn}}}}{{{f{Ab}}}{{A`{Mjn}}}}{{{f{Ab}}{Ch{Gb}}}Ab}{{{f{BJn}}{f{{l{Fb}}}}}{{A`{Abn}}}}{{{f{Ab}}{f{{Bl{A@h}}}}Mb}Ab}{{{f{Ab}}{f{{Bl{A@h}}}}}Ab}{{{f{BJn}}{f{{Bl{Jl}}}}}{{A`{Abn}}}}{{{f{BJn}}{f{{Bl{Jl}}}}}Ab}{{{f{BJn}}{f{{l{Fb}}}}}Ab}{{{f{Ab}}{f{{Bl{Jl}}}}}Ab}{{{f{Ab}}}{{A`{{f{{L`{LnLb}}}}n}}}}{{{f{Ab}}GbB@`}{{Cn{Cl}}}}{{{f{Ab}}{Ch{{f{Bf}}}}d}{{A`{AAnn}}}}{{{f{Ab}}}{{A`{Abn}}}}{fc{}}0{{{f{Ab}}}{{Eb{Ab}}}}{fEj}{{AbAb}{{A`{Abn}}}}{c{{A`{e}}}{}{}}000{{{Hf{Dd{Cn{Cl}}}}}{{A`{Abn}}}}{{{Hf{Dd{Gj{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hf{{f{BAd}}{Gj{{Cn{Cl}}}}}}}{{A`{Abn}}}}{{{Hf{{f{BAd}}{Cn{Cl}}}}}{{A`{Abn}}}}{{}{{A`{c}}}{}}0006{{Ddc}{{A`{Ab}}}{}}{{{f{DfAb}}{Kh{c}}}dDl}8{f{{A`{GlBBj}}}}{fAAl}000{{{f{Ab}}}{{A`{{f{{l{Nn}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Fb}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Nl}}}}n}}}}{{{f{Ab}}}{{A`{{f{{l{Ob}}}}n}}}}{{{f{BJn}}}{{A`{Abn}}}}{{{f{Ab}}}{{A`{Abn}}}}{{{f{BJn}}}{{A`{{f{{l{c}}}}n}}}Dl}{{{f{BJn}}Bj}{{Ch{Aj}}}}{{{f{BJn}}Bj}{{A`{Mjn}}}}{{}c{}}000{{AbDd}Ab}{{{f{Ab}}c}Ab{B`Mh}}{{{f{Ab}}{f{{l{Bd}}}}{f{Ab}}}{{A`{Abn}}}}``{{fh}b}{{{f{Ed}}}{{f{Ab}}}}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{Ed}}}Ed}{{f{f{Dfc}}}b{}}{fb}{{{f{Ed}}}Ab}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{cc{}}{{}Gb}{{}c{}}{{{DKh{Ab}}}Ed}{{{f{DfEd}}{f{Df{Cn{Cl}}}}}b}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}6{{{f{DfEd}}{f{Df{Cn{Cl}}}}e}c{}{{Dn{{f{Ed}}}{{Ad{c}}}}}}````{{{f{Ab}}{f{Ab}}c}{{A`{Abn}}}{{Af{{f{Ab}}{f{Ab}}}{{Ad{{A`{Abn}}}}}}}}{{{BKj{}{{Ad{c}}}}{f{Ab}}}c{}}{{{f{BKn}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{Bn}}}}{f{Ab}}}{{A`{Abn}}}}`210210210210``{{{f{CBb}}{f{Ab}}}{{A`{Abn}}}}{{{f{{l{G`}}}}{f{Ab}}}{{A`{Abn}}}}{{{f{CBb}}c}{{A`{Abn}}}Bb}{{{f{{l{G`}}}}c}{{A`{Abn}}}Bb}```{{fh}b}{f{{f{c}}}{}}{{{f{Df}}}{{f{Dfc}}}{}}{{{f{CLl}}}CLl}{{f{f{Dfc}}}b{}}{fb}{{}CLl}{Gb{{f{c}}}{}}{Gb{{f{Dfc}}}{}}{Gbb}{{{f{CLl}}{f{CLl}}}d}{{f{f{c}}}d{}}00{{{f{CLl}}{f{DfHl}}}{{A`{bHn}}}}{cc{}}{{{f{CLl}}{f{Dfc}}}bADl}{{}Gb}{{}c{}}{fc{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{fAAl}4","D":"AEL`BAf","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",11691],[5,"StructType",2000,11692],[5,"ChunkedArray",17,11693],[6,"PolarsError",3506,11694],[6,"Result",11695],[5,"Series",11173,11696],[17,"Output"],[10,"FnMut",11697],[5,"ListType",2000,11692],[1,"f64"],[10,"PolarsNumericType",2000,11692],[5,"StringType",2000,11692],[10,"Num",11698],[10,"ToPrimitive",11699],[5,"BooleanType",2000,11692],[1,"str"],[5,"BinaryType",2000,11692],[1,"u8"],[1,"slice"],[10,"NumOpsDispatchInner",11637,11700],[6,"GroupsProxy",4126,11701],[5,"ObjectType",2000,11692],[10,"PolarsObject",1555,11702],[5,"FixedSizeListType",2000,11692],[6,"Option",11703],[17,"Item"],[10,"Array",11704],[5,"Box",11705],[10,"Iterator",11706],[5,"AmortizedListIter",11707],[5,"PlSmallStr",2000,11708],[0,"mut"],[17,"IsNested"],[5,"FalseT",2000,11692],[10,"PolarsDataType",2000,11692],[10,"Fn",11697],[10,"Copy",11709],[6,"Cow",11710],[5,"AmortSeries",11613,11711],[5,"Float64Type",2000,11692],[5,"Float32Type",2000,11692],[5,"String",11712],[6,"DataType",2000,11713],[5,"View",11714],[5,"SortOptions",1683,11715],[5,"UInt32Type",2000,11692],[5,"BinaryOffsetType",2000,11692],[6,"Column",3881,11716],[5,"SortMultipleOptions",1683,11715],[10,"PolarsIntegerType",2000,11692],[10,"MetadataTrait",1271,11717],[6,"CastOptions",1165,11718],[10,"NumOpsDispatchCheckedInner",11658,11719],[1,"usize"],[5,"Iter",11720],[1,"fn"],[5,"Map",11721],[5,"Vec",11722],[5,"CompactString",11723],[5,"MetadataProperties",1271,11724],[10,"DoubleEndedIterator",11725],[1,"i64"],[5,"OffsetsBuffer",11726],[1,"tuple"],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",11727],[5,"Error",11727],[17,"Array"],[10,"IntoIterator",11728],[5,"Bitmap",11729],[10,"AsRef",11730],[10,"PolarsAsRef",11731],[10,"Borrow",11732],[10,"Send",11709],[10,"Sync",11709],[10,"NoOption",11733],[10,"IntoParallelIterator",11734],[10,"ExactSizeIterator",11735],[10,"Clone",11736],[10,"TrustedLen",11737],[6,"AnyValue",2000,11738],[1,"u32"],[5,"MetadataFlags",1271,11724],[10,"PolarsObjectSafe",1555,11702],[5,"BinaryArray",11739],[1,"f32"],[1,"u64"],[5,"Metadata",1271,11724],[5,"RwLockWriteGuard",11740],[5,"Int32Type",2000,11692],[5,"DateType",2000,11692],[5,"Logical",2000,11741],[5,"Int64Type",2000,11692],[6,"TimeUnit",2000,11742],[5,"DatetimeType",2000,11692],[5,"Int128Type",2000,11692],[5,"DecimalType",2000,11692],[5,"DurationType",2000,11692],[5,"TimeType",2000,11692],[10,"PolarsFloatType",2000,11692],[6,"IsSorted",11173,11743],[10,"PolarsIterator",1214,11744],[6,"ChunkedArrayLayout",17,11693],[10,"NumCast",11699],[5,"Scalar",4496,11745],[6,"MetadataReadGuard",1271,11746],[5,"IMMetadata",1271,11747],[5,"Arc",4496,11748],[5,"RwLockReadGuard",11740],[5,"Int16Type",2000,11692],[1,"i16"],[5,"Int8Type",2000,11692],[1,"i8"],[5,"UInt64Type",2000,11692],[5,"UInt16Type",2000,11692],[1,"u16"],[5,"UInt8Type",2000,11692],[1,"i128"],[1,"i32"],[5,"Range",11749],[5,"Field",2000,11750],[10,"ParallelIterator",11734],[10,"IndexedParallelIterator",11734],[6,"QuantileInterpolOptions",4496,11751],[5,"RollingOptionsFixedWindow",4496,11752],[10,"PolarsOpsNumericType",11753],[10,"Sized",11709],[5,"ChunkId",4496,11754],[17,"IsStruct"],[5,"RandomState",11755],[5,"BytesHash",11756],[5,"ViewRepr",11757],[1,"array"],[5,"Dim",11758],[5,"ArrayBase",11757],[5,"OwnedRepr",11759],[6,"Either",11760],[5,"TypeId",11761],[5,"DataFrame",3605,11762],[5,"NullableIdxSize",4496,11754],[10,"FnOnce",11697],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",859,11763],[5,"AnonymousListBuilder",887,11764],[5,"AnonymousOwnedListBuilder",887,11764],[5,"ListBooleanChunkedBuilder",887,11765],[5,"ListPrimitiveChunkedBuilder",887,11766],[10,"ListBuilderTrait",887,11767],[10,"ChunkedBuilder",887,11768],[5,"ListStringChunkedBuilder",887,11769],[5,"ListBinaryChunkedBuilder",887,11769],[5,"ListNullChunkedBuilder",887,11770],[5,"BinViewChunkedBuilder",887,11771],[10,"ViewType",11772],[5,"BooleanChunkedBuilder",887,11773],[5,"NullChunkedBuilder",887,11774],[5,"PrimitiveChunkedBuilder",887,11775],[5,"NullChunked",11776],[10,"NewChunkedArray",887,11768],[10,"Hasher",11777],[10,"ChunkedCollectInferIterExt",1194,11778],[10,"ChunkedCollectIterExt",1194,11778],[10,"Canonical",1208,11779],[10,"ChunkedCollectParIterExt",1210,11780],[10,"FromParIterWithDtype",1210,11780],[5,"BooleanArray",11781],[5,"BoolIterNoNull",1214,11744],[5,"FixedSizeListArray",11782],[5,"FixedSizeListIterNoNull",1214,11744],[5,"SomeIterator",1214,11744],[5,"MetadataEnv",1271,11783],[10,"MetadataCollectable",1271,11784],[5,"Iter",11785],[5,"IterNames",11785],[5,"File",11786],[5,"Mutex",11787],[6,"MetadataMerge",1271,11724],[5,"RwLock",11740],[5,"ObjectArray",1555,11702],[6,"ArrowDataType",2000,11788],[10,"Any",11761],[10,"Debug",11727],[5,"BitmapIter",11789],[6,"ZipValidity",11790],[5,"ObjectChunkedBuilder",1632,11791],[10,"AnonymousObjectBuilder",1655,11792],[5,"ObjectRegistry",1655,11792],[10,"ChunkAgg",1683,11793],[17,"FuncRet"],[10,"ChunkApply",1683,11793],[10,"ChunkApplyKernel",1683,11793],[10,"ChunkSort",1683,11793],[10,"ChunkUnique",1683,11793],[10,"ChunkCast",1683,11793],[6,"FillNullStrategy",1683,11793],[10,"ChunkCompare",11173,11793],[10,"ChunkExplode",1683,11793],[10,"ChunkFillNullValue",1683,11793],[10,"ChunkFilter",1683,11793],[10,"ChunkFull",1683,11793],[10,"ChunkFullNull",1683,11793],[10,"ChunkAnyValue",1683,11793],[10,"IsFirstDistinct",1683,11793],[10,"IsLastDistinct",1683,11793],[10,"ChunkQuantile",1683,11793],[10,"ChunkExpandAtIndex",1683,11793],[10,"Reinterpret",1683,11793],[10,"ChunkReverse",1683,11793],[10,"ChunkRollApply",1683,11793],[10,"ChunkSet",1683,11793],[10,"ChunkShift",1683,11793],[10,"ChunkShiftFill",1683,11793],[10,"SlicedArray",1683,11794],[10,"ChunkVar",1683,11793],[10,"ChunkTake",1683,11793],[10,"ChunkTakeUnchecked",1683,11793],[10,"ChunkBytes",1683,11793],[10,"ChunkZip",1683,11793],[10,"BinaryFnMut",1889,11795],[10,"StaticArray",2000,11796],[10,"TernaryFnMut",1889,11795],[10,"Error",11797],[10,"UnaryFnMut",1889,11795],[5,"PrimitiveArray",11798],[6,"SearchSortedSide",1930,11799],[5,"NoNull",4496,11800],[5,"RowsEncoded",11801],[5,"NaiveDateTime",11802],[6,"Tz",11803],[5,"NaiveTime",11804],[5,"CategoricalChunked",2000,11805],[5,"CategoricalChunkedBuilder",2000,11806],[10,"ArrayFromIter",2000,11807],[10,"ArrayFromIterDtype",2000,11807],[5,"Path",11808],[5,"OsStr",11809],[10,"AsRefDataType",2000,11713],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",11810],[10,"From",11730],[5,"BinaryViewArrayGeneric",11772],[6,"RevMapping",2000,11811],[10,"CategoricalMergeOperation",2000,11812],[10,"LogicalType",2000,11741],[6,"CategoricalOrdering",2000,11811],[5,"OwnedObject",2000,11738],[6,"UnknownKind",2000,11713],[5,"CompatLevel",2000,11713],[5,"CategoricalType",2000,11692],[6,"ArrowTimeUnit",2000],[6,"Ordering",11813],[10,"ArrayCollectIterExt",2000,11807],[5,"GlobalRevMapMerger",2000,11812],[1,"char"],[10,"FromIterator",11728],[10,"Into",11730],[10,"NumericNative",2000,11692],[5,"ArrowField",4496],[6,"IntegerType",11814],[6,"PrimitiveType",11815],[5,"TimeDelta",11816],[5,"NaiveDate",11817],[10,"GetAnyValue",2000,11738],[10,"IntoScalar",2000,11818],[5,"CatIter",2000,11805],[6,"Expr",4496,11819],[1,"u128"],[6,"PhysicalType",11814],[6,"ToCompactStringError",11723],[5,"Arguments",11727],[5,"StringCacheHolder",3485,11820],[5,"ErrString",3506,11694],[6,"PolarsWarning",3506,11821],[5,"TryReserveError",11822],[5,"Utf8Error",11823],[6,"Error",11824],[5,"Error",11825],[6,"ParquetError",11826],[5,"Error",11827],[10,"Display",11727],[5,"Schema",11828],[10,"IntoColumn",3881,11716],[6,"NullStrategy",3605,11762],[6,"UniqueKeepStrategy",3605,11762],[5,"HashSet",11829],[5,"Row",4384,11830],[5,"GroupBy",4126,11831],[5,"DynamicGroupOptions",4496,11832],[5,"RangeFull",11749],[5,"RangeTo",11749],[5,"RangeInclusive",11749],[5,"RangeToInclusive",11749],[5,"RangeFrom",11749],[5,"RecordBatchIter",3605,11762],[5,"PhysRecordBatchIter",3605,11762],[5,"LazyFrame",4496,11833],[10,"IntoSeries",11173,11834],[5,"RollingGroupOptions",4496,11832],[10,"RangeBounds",11749],[10,"IntoVec",4496,11800],[6,"IndexOrder",4496,11835],[5,"RecordBatchT",11836],[5,"StructArray",4496,11837],[5,"Duration",4496,11838],[5,"ScalarColumn",3881,11716],[6,"BitRepr",11173,11743],[5,"UnpivotArgsIR",4097,11839],[5,"GroupsIdx",4126,11701],[5,"UnitVec",11840],[6,"GroupByMethod",4126,11831],[5,"SlicedGroups",4126,11701],[5,"GroupsProxyParIter",4126,11701],[10,"UnindexedConsumer",11841],[6,"GroupsIndicator",4126,11701],[6,"IRAggExpr",11842],[10,"IntoGroupsProxy",4126,11843],[5,"Copied",11844],[5,"Zip",11845],[5,"GroupsProxyIter",4126,11701],[6,"RollingFnParams",4496,11846],[10,"IsFloat",11847],[10,"NativeType",11848],[10,"AggList",4368,11849],[10,"TakeExtremum",4368,11850],[10,"PhysicalAggExpr",4381,11851],[6,"AnyValueBuffer",4384,11852],[6,"AnyValueBufferTrusted",4384,11852],[5,"Node",11853],[6,"IR",11854],[5,"Arena",11853],[6,"AExpr",11842],[10,"JoinDispatch",4496,11855],[5,"JoinArgs",4496,11856],[5,"StructNameSpace",4496,11857],[10,"SeriesTrait",11173,11743],[10,"DfTake",4496,11858],[10,"DataFrameOps",4496,11859],[5,"CsvReader",4496,11860],[10,"PhysicalIoExpr",11861],[10,"MmapBytesReader",11862],[10,"LhsNumOps",11637,11700],[6,"Selector",4496,11863],[10,"NumOpsDispatch",11637,11700],[5,"LazyGroupBy",4496,11833],[5,"OptFlags",4496,11864],[10,"Allocator",11865],[5,"JoinBuilder",4496,11833],[10,"AnonymousScan",4496,11866],[5,"ScanArgsAnonymous",4496,11867],[10,"FunctionOutputField",4496,11868],[5,"SpecialEq",4496,11868],[6,"VisitRecursion",11869],[6,"FunctionExpr",4496,11870],[10,"ArgAgg",4496,11871],[5,"ArrayNameSpace",4496,11872],[5,"ListNameSpace",4496,11873],[5,"FieldsMapper",4496,11874],[5,"IpcStreamReader",4496,11875],[10,"Read",11876],[10,"ColumnsUdf",4496,11868],[10,"AsBinary",4496,11877],[10,"StringMethods",10096,11878],[5,"BorrowedFd",11879],[10,"AsFd",11879],[10,"AsList",4496,11880],[10,"AsRawFd",11881],[6,"AggExpr",4496,11819],[10,"SeriesSealed",4496,11882],[10,"AsString",4496,11883],[20,"MaybeUninit",11884],[10,"StringNameSpaceImpl",4496,11885],[5,"OwnedBatchedCsvReader",4496,11886],[5,"CsvWriter",4496,11887],[5,"BatchedWriter",11887],[10,"Write",11876],[5,"IpcWriter",4496,11888],[5,"BatchedWriter",11888],[5,"ParquetReader",4496,11889],[5,"BatchedParquetReader",4496,11890],[5,"ParquetWriter",4496,11891],[5,"BatchedWriter",11892],[5,"BatchedCsvReader",4496,11886],[5,"BinaryNameSpace",10001,11893],[6,"Operator",4496,11819],[10,"RenameAliasFn",4496,11868],[5,"UserDefinedFunction",4496,11894],[10,"ColumnBinaryUdf",4496,11868],[5,"InProcessQuery",4496,11895],[5,"HashMap",11896],[5,"CategoricalNameSpace",4496,11897],[10,"RoundSeries",4496,11898],[10,"TemporalMethods",11058,11899],[10,"NumOpsDispatchChecked",11658,11719],[5,"LazyCsvReader",4496,11900],[5,"ScanArgsIpc",4496,11901],[5,"LazyJsonLineReader",4496,11902],[5,"ScanArgsParquet",4496,11903],[5,"RollingOptionsDynamicWindow",4496,11904],[5,"Bounds",4496,11905],[6,"ClosedWindow",4496,11906],[6,"Label",4496,11906],[6,"StartBy",4496,11906],[5,"Window",4496,11907],[5,"CsvReadOptions",4496,11908],[5,"CsvParseOptions",4496,11908],[6,"CsvEncoding",4496,11908],[6,"CommentPrefix",4496,11908],[6,"NullValues",4496,11908],[6,"JoinCoalesce",4496,11856],[5,"CsvWriterOptions",4496,11909],[5,"SerializeOptions",4496,11909],[6,"JoinType",4496,11856],[6,"QuoteStyle",4496,11909],[6,"JoinValidation",4496,11856],[5,"IpcScanOptions",4496,11910],[5,"AsOfOptions",4496,11911],[5,"IpcWriterOptions",4496,11888],[6,"AsofStrategy",4496,11911],[6,"IpcCompression",4496,11888],[5,"JsonWriterOptions",4496,11912],[6,"InterpolationMethod",4496,11913],[6,"ClosedInterval",4496,11914],[5,"ParquetOptions",4496,11915],[6,"RankMethod",4496,11916],[6,"ParallelStrategy",4496,11915],[5,"RankOptions",4496,11916],[5,"ParquetWriteOptions",4496,11917],[6,"ParquetCompression",4496,11917],[5,"GzipLevel",4496,11917],[5,"BrotliLevel",4496,11917],[5,"ZstdLevel",4496,11917],[6,"DslPlan",4496,11918],[5,"When",4496,11919],[5,"Then",4496,11919],[5,"ChainedWhen",4496,11919],[5,"ChainedThen",4496,11919],[6,"Excluded",4496,11819],[6,"BooleanFunction",4496,11920],[6,"CategoricalFunction",4496,11921],[6,"TemporalFunction",4496,11922],[6,"PowFunction",4496,11923],[6,"StringFunction",4496,11924],[6,"StructFunction",4496,11925],[5,"StatisticsOptions",4496,11926],[5,"DatetimeArgs",4496,11927],[5,"DurationArgs",4496,11927],[5,"RollingCovOptions",4496,11928],[5,"StrptimeOptions",4496,11928],[5,"JoinOptions",4496,11928],[6,"WindowType",4496,11928],[6,"WindowMapping",4496,11928],[6,"NestedType",4496,11928],[5,"UnpivotArgsDSL",4496,11928],[5,"FileMetadata",4496,11929],[6,"LiteralValue",4496,11930],[5,"AnonymousScanOptions",4496,11931],[5,"UnionArgs",4496,11931],[5,"RollingVarParams",4496,11846],[5,"RollingQuantileParams",4496,11846],[6,"NonExistent",4496,11932],[10,"LazyFileListReader",4496,11933],[5,"CloudOptions",10232,11934],[10,"Ord",11813],[6,"ColumnOrder",11935],[10,"BinaryNameSpaceImpl",4496,11936],[5,"JsonLineReader",4496,11937],[10,"CrossJoin",4496,11938],[10,"ExprEvalExtension",4496,11939],[10,"DateMethods",10096,11940],[10,"DatetimeMethods",10096,11941],[10,"DurationMethods",10096,11942],[5,"IpcStreamWriterOption",4496,11875],[10,"BinaryUdfOutputField",4496,11868],[10,"Default",11943],[5,"CStr",11944],[5,"ParquetStatistics",4496],[5,"ColumnChunkMetadata",11945],[6,"NullBehavior",11664,11946],[5,"Weak",11748],[5,"DateLikeNameSpace",10621,11947],[10,"SeriesMethods",4496,11948],[10,"Scalar",11949],[10,"PartialEq",11813],[10,"ListNameSpaceExtension",4496,11950],[10,"Command",11951],[5,"PathBuf",11808],[10,"SerReader",4496,11952],[10,"SerWriter",4496,11952],[5,"IpcReader",4496,11910],[5,"IpcStreamWriter",4496,11875],[5,"JsonWriter",4496,11912],[5,"JsonReader",4496,11912],[10,"UdfSchema",4496,11953],[6,"BinaryFunction",11954],[6,"ListFunction",11955],[6,"ArrayFunction",11956],[6,"RangeFunction",11957],[5,"MutableStatistics",11958],[5,"CString",11959],[1,"never"],[5,"OsString",11809],[10,"ToOwned",11710],[5,"GrowableStruct",11960],[5,"MutableStructArray",11961],[10,"SchemaExt",4496,11962],[10,"FromData",10615,11963],[5,"Buffer",11964],[10,"FromDataUtf8",10615,11963],[10,"FromDataBinary",10615,11963],[5,"ListArray",11965],[6,"Ambiguous",4496,11932],[10,"NamedFromOwned",4496,11966],[10,"DataFrameJoinOps",4496,11967],[5,"FunctionOptions",11931],[10,"PartialOrd",11813],[6,"Context",11918],[5,"BoundsIter",4496,11907],[6,"ReaderBytes",11862],[10,"PolarsTemporalGroupby",4496,11832],[10,"Hash",11777],[10,"SeriesJoin",4496,11968],[10,"TimeMethods",10096,11969],[5,"NonZero",11970],[10,"IntoListNameSpace",4496,11950],[5,"StructValueIter",11971],[17,"DataType"],[10,"SchemaNamesAndDtypes",4496,11962],[10,"AsofJoinBy",4496,11972],[10,"ListNameSpaceImpl",4496,11973],[5,"ExprNameNameSpace",4496,11974],[5,"KeyValue",11975],[10,"IntoLazy",4496,11833],[10,"Literal",4496,11930],[5,"Null",4496,11930],[10,"CloneToUninit",11736],[5,"SuperTypeOptions",11976],[5,"RowIndex",11977],[10,"ChunkAggSeries",4496,11978],[10,"QuantileAggSeries",4496,11979],[10,"IndexToUsize",4496,11980],[10,"NamedFrom",4496,11966],[6,"RowGroupFetcher",11890],[6,"ScanSources",11981],[5,"SplitNChars",4496,11982],[5,"AnonymousScanArgs",4496,11866],[5,"Pin",11983],[5,"Request",11797],[10,"SeriesRank",4496,11916],[5,"BorrowedCursor",11984],[10,"VarInt",11985],[5,"IoSliceMut",11876],[10,"SeriesOpsTime",10096,11986],[10,"PolarsRound",4496,11987],[10,"ChunkedSet",4496,11753],[5,"SchemaDescriptor",11988],[6,"SeekFrom",11876],[10,"VarAggSeries",4496,11989],[5,"StringNameSpace",11990],[10,"TakeChunked",4496,11858],[5,"IRPlan",11854],[10,"ToDummies",4496,11991],[10,"PolarsTruncate",4496,11992],[5,"FileMetaData",11975],[5,"AllocError",11865],[5,"SchemaInferenceResult",11025,11993],[10,"PolarsUpsample",4496,11994],[10,"VecHash",4496,11995],[6,"JsonFormat",4496,11912],[5,"BTreeMap",11996],[10,"WriteDataFrameToFile",11952],[5,"IoSlice",11876],[6,"PrefilterMaskSetting",9912,11890],[5,"RowGroupMetadata",11997],[5,"MemSlice",11998],[6,"Filter",11999],[10,"ArrayNameSpace",9982,12000],[10,"AsArray",9982,12001],[6,"Buffer",10018,12002],[10,"AsString",10162,11878],[6,"Pattern",10162,12003],[5,"DatetimeInfer",10201,12004],[10,"StrpTimeParser",10201,12004],[17,"Error"],[10,"TryFromWithUnit",10201,12004],[6,"CloudType",10232,11934],[6,"SupportedCompression",10291,12005],[5,"AnonymousBuilder",10676,12006],[6,"RollingFunction",10918,12007],[6,"RollingFunctionBy",10949,12008],[5,"MutableNullArray",10994,12009],[5,"MutableBitmap",12010],[10,"AsSeries",11058,11899],[5,"Utf8Array",12011],[5,"_SerdeSeries",11716],[5,"SeriesIter",11173,12012],[5,"Rc",12013],[8,"FillNullLimit",1683],[10,"InitHashMaps",2000],[10,"InitHashMaps2",2000],[5,"TrueT",2000],[8,"PolarsResult",3506],[15,"IO",9892],[15,"Context",9892],[15,"Count",9886],[15,"Slice",9887],[8,"ChunkJoinOptIds",4496],[10,"ListFromIter",4496],[15,"Quantile",9768],[15,"Min",9768],[15,"Max",9768],[15,"IsBetween",10871],[15,"Any",10871],[15,"All",10871],[15,"GroupBy",9778],[15,"Union",9778],[15,"Sort",9778],[15,"Scan",9778],[15,"ExtContext",9778],[15,"DataFrameScan",9778],[15,"IR",9778],[15,"Select",9778],[15,"HStack",9778],[15,"MapFunction",9778],[15,"Cache",9778],[15,"Filter",9778],[15,"Distinct",9778],[15,"Slice",9778],[15,"Sink",9778],[15,"Join",9778],[15,"HConcat",9778],[15,"SortBy",9829],[15,"Filter",9829],[15,"Cast",9829],[15,"Sort",9829],[15,"Gather",9829],[15,"RenameAlias",9829],[15,"Ternary",9829],[15,"Function",9829],[15,"Window",9829],[15,"AnonymousFunction",9829],[15,"Slice",9829],[15,"BinaryExpr",9829],[15,"Round",10874],[15,"RoundSF",10874],[15,"Clip",10874],[15,"BackwardFill",10874],[15,"ForwardFill",10874],[15,"Random",10874],[15,"GatherEvery",10874],[15,"ValueCounts",10874],[15,"Rank",10874],[15,"ReplaceStrict",10874],[15,"CumCount",10874],[15,"CumSum",10874],[15,"CumProd",10874],[15,"CumMin",10874],[15,"CumMax",10874],[15,"Range",9889],[15,"ConcatHorizontal",10896],[15,"ConcatVertical",10896],[15,"ExtractGroups",10896],[15,"SplitExact",10896],[15,"Contains",10896],[15,"Find",10896],[15,"Replace",10896],[15,"DatetimeFunction",10910],[5,"Utf8Field",10018],[5,"CategoricalField",10018],[5,"DatetimeField",10018],[15,"Datetime",10092],[10,"Utf8FromIter",11169],[10,"BinaryFromIter",11169]],"r":[[1,12014],[2,12014],[3,12014],[4,12014],[6,11820],[7,12014],[8,12014],[9,12014],[13,12014],[14,12014],[16,11820],[17,11693],[18,11693],[19,11693],[24,12015],[116,11693],[140,11693],[141,11693],[169,11693],[171,11693],[226,11693],[279,11693],[429,11693],[479,11693],[584,11693],[587,11693],[728,11693],[859,11763],[887,11764],[888,11764],[889,11771],[890,11771],[891,11773],[892,11768],[893,11769],[894,11765],[895,11767],[896,11770],[897,11766],[898,11769],[899,11768],[900,11774],[901,11775],[902,11771],[1039,11768],[1055,11767],[1083,11768],[1148,11764],[1149,11764],[1150,11769],[1151,11765],[1152,11767],[1153,11770],[1154,11766],[1155,11769],[1163,11767],[1165,11718],[1194,11778],[1195,11778],[1208,11779],[1210,11780],[1211,11780],[1214,11744],[1215,11744],[1216,11744],[1217,11744],[1253,11744],[1269,12016],[1270,12016],[1276,11747],[1281,11724],[1282,11784],[1283,11783],[1284,11724],[1285,11724],[1286,11724],[1287,11746],[1288,11717],[1555,11702],[1556,11702],[1557,11702],[1558,11702],[1570,11702],[1601,11702],[1602,12017],[1632,11791],[1655,11792],[1656,11792],[1657,11792],[1658,11792],[1670,11792],[1671,11792],[1672,11792],[1675,11792],[1677,11792],[1684,11793],[1685,11793],[1686,11793],[1687,11793],[1688,11793],[1689,11793],[1690,11793],[1691,11793],[1692,11793],[1693,11793],[1694,11793],[1695,11793],[1696,11793],[1697,11793],[1698,11793],[1699,11793],[1700,11793],[1701,11793],[1702,11793],[1703,11793],[1704,11793],[1705,11793],[1706,11793],[1707,11793],[1708,11793],[1709,11793],[1710,11793],[1713,11793],[1714,11793],[1723,11793],[1724,11794],[1726,11715],[1727,11715],[1741,11793],[1786,11793],[1789,11793],[1798,11793],[1801,11793],[1844,11793],[1850,11793],[1887,11793],[1889,11795],[1893,11795],[1894,11795],[1895,11795],[1896,11795],[1897,11795],[1898,11795],[1899,11795],[1900,11795],[1901,11795],[1902,11795],[1903,11795],[1904,11795],[1905,11795],[1906,11795],[1907,11795],[1908,11795],[1909,11795],[1910,11795],[1911,11795],[1912,11795],[1913,11795],[1914,11795],[1915,11795],[1916,11795],[1917,11795],[1918,11795],[1919,11795],[1920,11795],[1921,11795],[1922,11795],[1923,11795],[1924,11795],[1925,12018],[1926,12018],[1927,12019],[1928,12019],[1929,12019],[1933,11799],[1935,11799],[1954,11799],[1960,11794],[1961,12020],[1962,12020],[1963,12020],[1964,12020],[1967,12021],[1968,12022],[1969,12022],[1970,12022],[1971,12022],[1972,12022],[1973,12022],[1974,12022],[1975,12022],[1976,11794],[1977,11715],[1978,11715],[1989,12023],[1990,12024],[1991,12024],[1992,12024],[1993,12023],[1994,12023],[1995,12025],[1996,12023],[1997,12024],[1998,12024],[1999,12024],[2001,11738],[2005,11692],[2006,11807],[2007,11807],[2008,11807],[2009,11788],[2011,11713],[2015,11692],[2017,11692],[2018,11692],[2020,11692],[2025,11692],[2026,11692],[2027,11805],[2030,11805],[2031,11806],[2032,11812],[2033,11811],[2035,11692],[2036,11713],[2037,11713],[2038,11713],[2039,11713],[2044,12026],[2045,11692],[2048,12027],[2050,11692],[2055,12028],[2056,11692],[2061,12029],[2062,11692],[2069,11692],[2070,11750],[2071,11750],[2074,11692],[2080,11692],[2081,11692],[2085,11692],[2086,11692],[2087,11738],[2089,11812],[2093,12030],[2094,11980],[2095,12030],[2096,12030],[2097,12031],[2098,12030],[2100,11692],[2101,11692],[2105,11692],[2106,11692],[2110,11692],[2111,11692],[2115,11692],[2116,11692],[2120,11692],[2121,11692],[2123,11818],[2134,11692],[2135,11692],[2137,11741],[2138,11741],[2150,11692],[2153,11692],[2155,11692],[2156,11738],[2160,12031],[2161,12031],[2162,12030],[2163,12031],[2164,12031],[2165,12031],[2166,11708],[2167,11692],[2168,11692],[2169,11692],[2170,11692],[2172,11811],[2174,11796],[2178,11692],[2180,11692],[2185,11692],[2190,12032],[2191,11692],[2192,11742],[2193,11713],[2196,11692],[2200,11692],[2201,11692],[2205,11692],[2206,11692],[2210,11692],[2211,11692],[2215,11692],[2216,11692],[2220,11713],[2397,11812],[2410,11741],[2534,11713],[3085,11812],[3086,11812],[3090,11713],[3462,11805],[3463,11805],[3464,11806],[3465,11812],[3466,11811],[3468,11812],[3472,11811],[3473,11812],[3475,11812],[3476,11812],[3477,11805],[3478,11805],[3479,11811],[3484,11811],[3485,11820],[3491,11820],[3494,11820],[3502,11820],[3512,11694],[3519,11694],[3520,11694],[3521,11821],[3537,11694],[3550,11694],[3566,11821],[3573,11694],[3575,11694],[3576,11694],[3577,11694],[3578,11694],[3579,11821],[3580,11694],[3602,12033],[3603,12033],[3604,12033],[3606,11762],[3611,11762],[3612,11762],[3614,11762],[3615,11762],[3656,11762],[3693,11762],[3725,11762],[3795,11762],[3881,11716],[3882,11716],[3884,11716],[4097,11839],[4126,11701],[4129,11831],[4130,11831],[4132,11701],[4133,11701],[4134,11701],[4135,11701],[4136,11701],[4137,11701],[4140,11701],[4142,11843],[4154,11701],[4163,11831],[4234,11831],[4244,11831],[4368,11849],[4369,11850],[4370,11850],[4371,11850],[4372,11850],[4373,11850],[4374,11850],[4375,11850],[4376,11850],[4377,11850],[4381,11851],[4386,11852],[4387,11852],[4407,11830],[4441,11830],[4462,11830],[4476,11830],[4477,11830],[4478,11830],[4494,12034],[4495,12035],[4499,11819],[4506,11864],[4508,11932],[4511,11866],[4512,11866],[4513,11931],[4519,11738],[4520,11748],[4521,11871],[4524,11763],[4529,11692],[4530,11807],[4532,11807],[4533,11807],[4534,11872],[4535,11704],[4536,11788],[4538,12036],[4540,11877],[4541,11880],[4543,11911],[4544,11713],[4545,11883],[4547,11911],[4548,11972],[4549,11911],[4552,12037],[4558,11886],[4559,11890],[4564,11692],[4565,11771],[4568,11936],[4570,11692],[4571,11692],[4573,11692],[4574,11868],[4581,11692],[4582,11773],[4583,11920],[4584,11692],[4585,11701],[4588,11905],[4589,11907],[4591,11917],[4599,11805],[4603,11805],[4604,11806],[4605,11921],[4606,11812],[4607,11897],[4608,11811],[4610,11692],[4614,11919],[4615,11919],[4616,11793],[4617,11978],[4618,11793],[4619,11793],[4620,11793],[4621,11793],[4622,11793],[4623,11793],[4624,11793],[4625,11793],[4626,11793],[4627,11793],[4628,11793],[4629,11793],[4630,11754],[4631,11856],[4632,11793],[4633,11793],[4634,11793],[4635,11793],[4636,11793],[4637,11793],[4638,11793],[4639,11793],[4640,11793],[4641,11793],[4642,11793],[4643,11793],[4644,11693],[4645,11768],[4646,11778],[4647,11778],[4648,11753],[4650,11914],[4651,11906],[4654,11716],[4656,11868],[4660,11868],[4662,11908],[4663,11713],[4675,11938],[4676,11908],[4677,11908],[4678,11908],[4679,11860],[4680,11887],[4681,11909],[4688,11713],[4689,11713],[4690,11762],[4691,11967],[4692,11859],[4696,11713],[4704,12026],[4705,11940],[4707,11692],[4711,11927],[4712,12027],[4714,11941],[4716,11692],[4723,12028],[4724,11692],[4726,11858],[4733,11918],[4737,11838],[4743,11927],[4744,12029],[4745,11942],[4746,11692],[4747,11832],[4758,11819],[4762,11819],[4763,11939],[4764,11974],[4773,12037],[4774,12037],[4775,11692],[4776,11750],[4780,11750],[4781,11874],[4782,11974],[4783,11929],[4784,12038],[4786,11793],[4787,11793],[4797,11692],[4805,11692],[4806,11692],[4811,11692],[4812,11692],[4820,11963],[4821,11963],[4822,11963],[4826,11870],[4827,11868],[4831,11738],[4833,11868],[4835,11812],[4836,11831],[4838,11831],[4840,11701],[4841,11701],[4842,11701],[4843,11701],[4844,11701],[4845,11701],[4850,11917],[4860,12030],[4861,12037],[4867,11980],[4868,12030],[4869,11701],[4870,11754],[4871,12030],[4874,11895],[4876,11835],[4877,11980],[4878,12031],[4879,12030],[4881,11856],[4884,11692],[4885,11692],[4890,11692],[4891,11692],[4896,11692],[4897,11692],[4902,11692],[4903,11692],[4908,11692],[4909,11692],[4913,11913],[4915,11716],[4916,11843],[4917,11833],[4918,11950],[4919,11818],[4920,11834],[4921,11800],[4923,11888],[4924,11910],[4925,11910],[4926,11875],[4927,11875],[4928,11875],[4929,11888],[4930,11888],[4933,11793],[4937,11793],[4951,11856],[4952,11833],[4953,11856],[4954,11855],[4955,11928],[4957,11856],[4958,11856],[4961,11912],[4962,11937],[4964,11912],[4965,11912],[4966,11912],[4970,11906],[4972,12039],[4974,12039],[4975,12039],[4981,11900],[4982,11933],[4983,11833],[4984,11833],[4985,11902],[4992,11856],[4997,11700],[5004,11769],[5005,11765],[5006,11767],[5007,11692],[5009,12040],[5010,11873],[5011,11950],[5012,11973],[5013,11766],[5014,11769],[5015,11692],[5016,11930],[5018,11930],[5020,11741],[5023,11741],[5072,11930],[5077,11966],[5078,11966],[5090,11928],[5092,11768],[5094,11800],[5095,11932],[5106,11930],[5114,11908],[5115,11754],[5116,11754],[5117,11700],[5118,11719],[5119,11692],[5122,11692],[5124,11692],[5129,11819],[5130,11864],[5139,11886],[5140,11738],[5142,12041],[5145,11915],[5146,11917],[5147,11915],[5148,11889],[5150,11917],[5151,11891],[5154,12031],[5155,12031],[5156,12030],[5157,12031],[5158,12031],[5159,12031],[5160,11708],[5162,11692],[5163,11694],[5164,11692],[5165,11692],[5166,11744],[5167,11692],[5168,11702],[5169,11694],[5170,11987],[5171,11832],[5172,11992],[5174,11994],[5176,11923],[5179,11775],[5183,11979],[5184,11751],[5186,11909],[5195,11916],[5196,11916],[5197,11793],[5199,11868],[5207,11811],[5217,11928],[5220,11846],[5221,11832],[5222,11904],[5223,11752],[5224,11846],[5225,12042],[5226,11846],[5231,11898],[5232,12043],[5240,11745],[5244,11867],[5245,11901],[5246,11903],[5247,11962],[5248,11962],[5251,11962],[5252,11962],[5253,11799],[5257,11863],[5259,11952],[5260,11952],[5261,11909],[5262,11696],[5265,11968],[5266,11948],[5267,11986],[5268,11916],[5269,11882],[5270,11743],[5283,11794],[5284,11701],[5290,11715],[5291,11715],[5292,11868],[5296,11982],[5298,11906],[5300,11796],[5301,11926],[5309,11820],[5311,11692],[5312,11771],[5314,11924],[5315,11878],[5316,11885],[5318,11692],[5325,11928],[5329,11837],[5330,12015],[5333,11925],[5334,11857],[5336,11692],[5346,11858],[5348,11922],[5349,11899],[5351,11919],[5359,12032],[5360,11969],[5362,11692],[5363,11742],[5364,11713],[5368,11991],[5382,11692],[5389,11692],[5390,11692],[5395,11692],[5396,11692],[5401,11692],[5402,11692],[5407,11692],[5408,11692],[5409,12044],[5410,11953],[5414,11931],[5416,11762],[5419,11713],[5420,11928],[5421,11839],[5424,11894],[5434,11989],[5435,11995],[5439,11919],[5441,11907],[5444,11928],[5445,11928],[5455,11917],[5549,12045],[5553,12046],[5554,12045],[5566,12047],[5577,11831],[5579,12048],[5582,12049],[5593,12049],[5604,12050],[5610,12051],[5613,12052],[5626,12053],[5631,12053],[5634,11793],[5644,12054],[5669,12055],[5673,12056],[5677,12057],[5685,12051],[5687,11919],[5951,12058],[5959,11812],[5964,12056],[5975,12051],[5989,12059],[5992,12060],[5994,12060],[5996,12060],[6281,12061],[6289,12049],[6293,12062],[6294,12048],[6296,12063],[6309,12048],[6318,12044],[6322,12063],[6324,12064],[6327,12063],[6328,12063],[6329,12064],[6330,12064],[6339,12040],[6340,12065],[6346,12066],[6347,12066],[6348,11713],[6354,12067],[6356,12049],[6357,12067],[6359,12067],[6361,12067],[6363,12049],[6364,12067],[6368,12014],[6370,12052],[6371,12054],[6372,11927],[6374,12052],[6375,12052],[6376,12024],[6377,12024],[6378,12024],[6443,12040],[6444,11855],[6705,11958],[6707,12014],[6709,12068],[6854,12069],[6855,12051],[6864,12048],[6865,12048],[6867,11927],[6875,11838],[6876,11838],[6877,11962],[7141,12041],[7142,12041],[7143,12041],[7149,11831],[7170,11793],[7207,12051],[7211,12040],[7215,11793],[7220,12070],[7324,11831],[7328,12049],[7332,12064],[7561,11793],[7571,12051],[7573,11793],[7598,12041],[7608,12037],[7620,11906],[7621,11906],[7702,12071],[7713,12072],[7714,12073],[7715,12073],[7717,12074],[7729,12048],[7732,11980],[7733,11993],[7868,12052],[7869,12052],[7871,12075],[7872,11913],[7874,12075],[7875,12076],[8027,11914],[8029,12041],[8037,12077],[8042,12078],[8045,12079],[8054,12056],[8057,12056],[8064,12065],[8099,12051],[8114,12051],[8123,11930],[8171,11812],[8172,11812],[8177,12050],[8188,12051],[8191,12051],[8199,12080],[8200,12037],[8201,12056],[8212,12056],[8218,12056],[8228,11713],[8237,12056],[8258,12054],[8296,12054],[8307,12081],[8308,12082],[8355,12083],[8379,12056],[8384,12051],[8385,12040],[8418,12037],[8436,11694],[8437,11694],[8438,11694],[8439,11694],[8444,11967],[8453,12056],[8484,12049],[8491,11912],[8495,12084],[8496,12085],[8498,12086],[8505,12086],[8506,12086],[8508,12073],[8510,12041],[8601,12058],[8605,11793],[8618,12059],[8670,11793],[8690,11982],[8692,11982],[8710,12071],[8720,12054],[8721,12087],[8723,12087],[8725,12087],[8727,12087],[8729,12087],[8744,12056],[8769,11919],[8773,12052],[9359,12051],[9384,12040],[9547,11919],[9758,12088],[9766,11793],[9915,11890],[9918,11890],[9926,12089],[9928,12090],[9933,11849],[9934,11850],[9935,11850],[9936,11850],[9937,11850],[9938,11850],[9939,11850],[9940,11850],[9941,11850],[9942,11850],[9946,11795],[9950,11795],[9951,11795],[9952,11795],[9953,11795],[9954,11795],[9955,11795],[9956,11795],[9957,11795],[9958,11795],[9959,11795],[9960,11795],[9961,11795],[9962,11795],[9963,11795],[9964,11795],[9965,11795],[9966,11795],[9967,11795],[9968,11795],[9969,11795],[9970,11795],[9971,11795],[9972,11795],[9973,11795],[9974,11795],[9975,11795],[9976,11795],[9977,11795],[9978,11795],[9979,11795],[9980,11795],[9981,11795],[9982,12000],[9983,12001],[10001,11893],[10019,12002],[10021,12002],[10024,12002],[10038,12002],[10070,12002],[10095,11897],[10096,11940],[10097,11941],[10098,11942],[10099,11904],[10100,11986],[10101,11878],[10102,11969],[10155,12091],[10162,11878],[10168,12003],[10169,11878],[10192,11878],[10201,12004],[10203,12004],[10204,12004],[10215,12004],[10234,11934],[10235,11934],[10271,12092],[10284,11934],[10285,11934],[10292,12005],[10304,12005],[10310,11738],[10314,11692],[10315,11807],[10316,11807],[10317,11807],[10318,11788],[10320,11713],[10324,11692],[10326,11692],[10327,11692],[10329,11692],[10334,11692],[10335,11692],[10336,11805],[10339,11805],[10340,11806],[10341,11812],[10342,11811],[10344,11692],[10345,11713],[10346,11713],[10347,11713],[10348,11713],[10353,12026],[10354,11692],[10357,12027],[10359,11692],[10364,12028],[10365,11692],[10370,12029],[10371,11692],[10376,11692],[10377,11750],[10378,11750],[10381,11692],[10387,11692],[10388,11692],[10392,11692],[10393,11692],[10394,11738],[10396,11812],[10400,12030],[10401,11980],[10402,12030],[10403,12030],[10404,12031],[10405,12030],[10407,11692],[10408,11692],[10412,11692],[10413,11692],[10417,11692],[10418,11692],[10422,11692],[10423,11692],[10427,11692],[10428,11692],[10430,11818],[10441,11692],[10442,11692],[10444,11741],[10445,11741],[10457,11692],[10460,11692],[10462,11692],[10463,11738],[10467,12031],[10468,12031],[10469,12030],[10470,12031],[10471,12031],[10472,12031],[10473,11708],[10474,11692],[10475,11692],[10476,11692],[10477,11692],[10479,11811],[10481,11796],[10485,11692],[10487,11692],[10492,11692],[10497,12032],[10498,11692],[10499,11742],[10500,11713],[10503,11692],[10507,11692],[10508,11692],[10512,11692],[10513,11692],[10517,11692],[10518,11692],[10522,11692],[10523,11692],[10527,11713],[10540,11812],[10543,11741],[10548,11713],[10565,11812],[10566,11812],[10567,11713],[10585,11805],[10586,11805],[10587,11806],[10588,11812],[10589,11811],[10591,11812],[10595,11811],[10596,11812],[10598,11812],[10599,11812],[10600,11805],[10601,11805],[10602,11811],[10607,11811],[10608,11820],[10609,11820],[10610,11820],[10611,11820],[10612,12073],[10613,12073],[10614,12073],[10615,11963],[10616,11963],[10617,11963],[10621,11947],[10673,11851],[10676,12006],[10696,12018],[10697,12018],[10712,11920],[10715,11921],[10754,11870],[10797,11923],[10829,11924],[10837,11925],[10842,11922],[10867,11870],[10868,11870],[10869,11870],[10870,11870],[10912,11921],[10916,11923],[10922,12007],[10953,12008],[10980,12019],[10981,12019],[10982,12019],[10983,11913],[10986,11913],[10987,12076],[10988,12093],[10989,12094],[10990,12094],[10991,12094],[10992,12094],[10993,12094],[10994,12009],[11025,11993],[11036,11993],[11041,11993],[11042,11993],[11055,11799],[11056,11799],[11057,11799],[11058,11899],[11059,11899],[11080,11794],[11081,12020],[11082,12020],[11083,12020],[11084,12020],[11087,12021],[11088,12022],[11089,12022],[11090,12022],[11091,12022],[11092,12022],[11093,12022],[11094,12022],[11095,12022],[11096,11794],[11097,11715],[11098,11715],[11109,11883],[11110,11982],[11111,11885],[11130,12071],[11138,11982],[11140,11982],[11143,12071],[11149,12087],[11151,12087],[11153,12087],[11155,12087],[11157,12087],[11163,11894],[11169,12095],[11170,12095],[11174,11743],[11175,11793],[11177,11834],[11178,11743],[11182,11696],[11183,12012],[11184,12012],[11185,11743],[11196,11696],[11202,11696],[11393,11696],[11516,11696],[11613,11711],[11614,11711],[11637,11700],[11638,11700],[11639,11700],[11641,11700],[11645,11700],[11658,11719],[11659,11719],[11666,11946]],"b":[[29,"impl-Add-for-ChunkedArray%3CStringType%3E"],[30,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[31,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[32,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[33,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[34,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[35,"impl-Add-for-%26ChunkedArray%3CT%3E"],[36,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[37,"impl-Add-for-ChunkedArray%3CT%3E"],[38,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[39,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[40,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[42,"impl-AggList-for-ChunkedArray%3CStructType%3E"],[43,"impl-AggList-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[44,"impl-AggList-for-ChunkedArray%3CFixedSizeListType%3E"],[45,"impl-AggList-for-ChunkedArray%3CBinaryType%3E"],[46,"impl-AggList-for-ChunkedArray%3CStringType%3E"],[47,"impl-AggList-for-ChunkedArray%3CListType%3E"],[48,"impl-AggList-for-ChunkedArray%3CBooleanType%3E"],[49,"impl-AggList-for-ChunkedArray%3CT%3E"],[52,"impl-ChunkedArray%3CFixedSizeListType%3E"],[53,"impl-ChunkedArray%3CListType%3E"],[54,"impl-ChunkedArray%3CListType%3E"],[55,"impl-ChunkedArray%3CFixedSizeListType%3E"],[59,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[60,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[61,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[62,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[63,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[64,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[66,"impl-ChunkedArray%3CFixedSizeListType%3E"],[67,"impl-ChunkedArray%3CListType%3E"],[69,"impl-ChunkedArray%3CFloat64Type%3E"],[70,"impl-ChunkedArray%3CFloat32Type%3E"],[73,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[75,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[76,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[77,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3Cstr%3E%3E-for-ChunkedArray%3CStringType%3E"],[78,"impl-ChunkApplyKernel%3CPrimitiveArray%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[79,"impl-ChunkApplyKernel%3CBooleanArray%3E-for-ChunkedArray%3CBooleanType%3E"],[80,"impl-ChunkApplyKernel%3CBinaryViewArrayGeneric%3C%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[81,"impl-ChunkedArray%3CBinaryType%3E"],[82,"impl-ChunkedArray%3CT%3E"],[83,"impl-ChunkedArray%3CStringType%3E"],[85,"impl-ChunkedArray%3CListType%3E"],[86,"impl-ChunkedArray%3CFixedSizeListType%3E"],[87,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[88,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[89,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[90,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[91,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[92,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[93,"impl-ChunkApply%3C\'a,+Series%3E-for-ChunkedArray%3CListType%3E"],[94,"impl-ChunkApply%3C\'a,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[95,"impl-ChunkApply%3C\'a,+%26str%3E-for-ChunkedArray%3CStringType%3E"],[96,"impl-ChunkApply%3C\'a,+%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[97,"impl-ChunkApply%3C\'a,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[98,"impl-ChunkApply%3C\'a,+%26T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[100,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[101,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[102,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[103,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[104,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[105,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[106,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[107,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[108,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[109,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[110,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[111,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[112,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[113,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[114,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[115,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[118,"impl-AsBinary-for-ChunkedArray%3CBinaryType%3E"],[119,"impl-ChunkedArray%3CStringType%3E"],[123,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[124,"impl-AsString-for-ChunkedArray%3CStringType%3E"],[126,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[127,"impl-BitAnd-for-%26ChunkedArray%3CT%3E"],[128,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[129,"impl-BitOr-for-%26ChunkedArray%3CT%3E"],[130,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[131,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[132,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[133,"impl-BitXor-for-%26ChunkedArray%3CT%3E"],[134,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[144,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[145,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[146,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[147,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[148,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[149,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[150,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[151,"impl-ChunkCast-for-ChunkedArray%3CListType%3E"],[152,"impl-ChunkCast-for-ChunkedArray%3CT%3E"],[153,"impl-ChunkedArray%3CStructType%3E"],[154,"impl-ChunkCast-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-ChunkCast-for-ChunkedArray%3CBinaryOffsetType%3E"],[156,"impl-ChunkCast-for-ChunkedArray%3CBinaryType%3E"],[157,"impl-ChunkCast-for-ChunkedArray%3CFixedSizeListType%3E"],[158,"impl-ChunkCast-for-ChunkedArray%3CStringType%3E"],[161,"impl-Container-for-ChunkedArray%3CT%3E"],[162,"impl-ChunkedArray%3CT%3E"],[182,"impl-Div-for-%26ChunkedArray%3CT%3E"],[183,"impl-Div-for-ChunkedArray%3CT%3E"],[184,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[185,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[192,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[193,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[194,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[195,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[196,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[197,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[198,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[199,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[200,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[201,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[202,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[203,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[204,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[205,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[206,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[207,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[208,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[209,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[210,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[211,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[212,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[213,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[217,"impl-ChunkFillNullValue%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[218,"impl-ChunkFillNullValue%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[219,"impl-ChunkFillNullValue%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[220,"impl-ChunkFilter%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[221,"impl-ChunkFilter%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[222,"impl-ChunkFilter%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[223,"impl-ChunkFilter%3CT%3E-for-ChunkedArray%3CT%3E"],[227,"impl-Debug-for-ChunkedArray%3CStringType%3E"],[228,"impl-Debug-for-ChunkedArray%3CBinaryType%3E"],[229,"impl-Debug-for-ChunkedArray%3CListType%3E"],[230,"impl-Debug-for-ChunkedArray%3CFixedSizeListType%3E"],[231,"impl-Debug-for-ChunkedArray%3CT%3E"],[232,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[233,"impl-Debug-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[235,"impl-ChunkedArray%3CFixedSizeListType%3E"],[236,"impl-ChunkedArray%3CListType%3E"],[245,"impl-FromIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[246,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[247,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[248,"impl-FromIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[249,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[250,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[251,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[252,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[253,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[254,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[255,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[256,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[257,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[258,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[259,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[260,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[261,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[262,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[263,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[264,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[265,"impl-FromTrustedLenIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[266,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[267,"impl-FromTrustedLenIterator%3COption%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[268,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[269,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[270,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[271,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[272,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[273,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[274,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[275,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[276,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[277,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[278,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[280,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[281,"impl-FromParallelIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[282,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[283,"impl-FromParallelIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[284,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[285,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[286,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[287,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[290,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[291,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[292,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[293,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[294,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[295,"impl-NewChunkedArray%3CBooleanType,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[296,"impl-NewChunkedArray%3CT,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[297,"impl-NewChunkedArray%3CObjectType%3CT%3E,+T%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[298,"impl-NewChunkedArray%3CStringType,+S%3E-for-ChunkedArray%3CStringType%3E"],[299,"impl-NewChunkedArray%3CBinaryType,+B%3E-for-ChunkedArray%3CBinaryType%3E"],[300,"impl-FromIteratorReversed%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[301,"impl-FromIteratorReversed%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[304,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CListType%3E"],[305,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[306,"impl-ChunkFull%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[307,"impl-ChunkFull%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[308,"impl-ChunkFull%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[309,"impl-ChunkFull%3CT%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[310,"impl-ChunkFull%3C%26Series%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[311,"impl-ChunkFull%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[312,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryOffsetType%3E"],[313,"impl-ChunkFullNull-for-ChunkedArray%3CBinaryType%3E"],[314,"impl-ChunkFullNull-for-ChunkedArray%3CT%3E"],[315,"impl-ChunkFullNull-for-ChunkedArray%3CStringType%3E"],[316,"impl-ChunkFullNull-for-ChunkedArray%3CBooleanType%3E"],[317,"impl-ChunkFullNull-for-ChunkedArray%3CStructType%3E"],[318,"impl-ChunkFullNull-for-ChunkedArray%3CListType%3E"],[319,"impl-ChunkFullNull-for-ChunkedArray%3CFixedSizeListType%3E"],[320,"impl-ChunkFullNull-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[322,"impl-ChunkedArray%3CFixedSizeListType%3E"],[323,"impl-ChunkedArray%3CListType%3E"],[325,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[326,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[327,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[328,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[329,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[330,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[331,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[332,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[333,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[334,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryOffsetType%3E"],[335,"impl-ChunkAnyValue-for-ChunkedArray%3CT%3E"],[336,"impl-ChunkAnyValue-for-ChunkedArray%3CListType%3E"],[337,"impl-ChunkAnyValue-for-ChunkedArray%3CStructType%3E"],[338,"impl-ChunkAnyValue-for-ChunkedArray%3CFixedSizeListType%3E"],[339,"impl-ChunkAnyValue-for-ChunkedArray%3CBinaryType%3E"],[340,"impl-ChunkAnyValue-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[341,"impl-ChunkAnyValue-for-ChunkedArray%3CStringType%3E"],[342,"impl-ChunkAnyValue-for-ChunkedArray%3CBooleanType%3E"],[343,"impl-ChunkedArray%3CFixedSizeListType%3E"],[344,"impl-ChunkedArray%3CListType%3E"],[348,"impl-ChunkedArray%3CListType%3E"],[349,"impl-ChunkedArray%3CFixedSizeListType%3E"],[357,"impl-ValueSize-for-ChunkedArray%3CListType%3E"],[358,"impl-ValueSize-for-ChunkedArray%3CFixedSizeListType%3E"],[359,"impl-ValueSize-for-ChunkedArray%3CStringType%3E"],[360,"impl-ValueSize-for-ChunkedArray%3CBinaryOffsetType%3E"],[361,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryType%3E"],[362,"impl-IntoGroupsProxy-for-ChunkedArray%3CListType%3E"],[363,"impl-IntoGroupsProxy-for-ChunkedArray%3CBinaryOffsetType%3E"],[364,"impl-IntoGroupsProxy-for-ChunkedArray%3CT%3E"],[365,"impl-IntoGroupsProxy-for-ChunkedArray%3CFixedSizeListType%3E"],[366,"impl-IntoGroupsProxy-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[367,"impl-IntoGroupsProxy-for-ChunkedArray%3CStringType%3E"],[368,"impl-IntoGroupsProxy-for-ChunkedArray%3CBooleanType%3E"],[370,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[371,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[372,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[373,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[374,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[375,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[376,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[377,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[378,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[379,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[380,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[381,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[382,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[383,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[384,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[385,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[386,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[387,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[393,"impl-ChunkedArray%3CListType%3E"],[394,"impl-ChunkedArray%3CFixedSizeListType%3E"],[404,"impl-IntoIterator-for-%26ChunkedArray%3CFixedSizeListType%3E"],[405,"impl-IntoIterator-for-%26ChunkedArray%3CT%3E"],[406,"impl-IntoIterator-for-%26ChunkedArray%3CObjectType%3CT%3E%3E"],[407,"impl-IntoIterator-for-%26ChunkedArray%3CBooleanType%3E"],[408,"impl-IntoIterator-for-%26ChunkedArray%3CListType%3E"],[409,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryOffsetType%3E"],[410,"impl-IntoIterator-for-%26ChunkedArray%3CBinaryType%3E"],[411,"impl-IntoIterator-for-%26ChunkedArray%3CStringType%3E"],[413,"impl-IntoSeries-for-ChunkedArray%3CT%3E"],[414,"impl-IntoSeries-for-ChunkedArray%3CInt128Type%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[440,"impl-Container-for-ChunkedArray%3CT%3E"],[441,"impl-ChunkedArray%3CT%3E"],[446,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[447,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[448,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[449,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[450,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[451,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[452,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[453,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[454,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[455,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[456,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[457,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[458,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[459,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[460,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[461,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[462,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[463,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[464,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[465,"impl-ChunkedArray%3CBooleanType%3E"],[466,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[467,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[468,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[469,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[470,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[471,"impl-ChunkedArray%3CBooleanType%3E"],[472,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[473,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[474,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[475,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[476,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[477,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[485,"impl-ChunkedArray%3CBooleanType%3E"],[486,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[488,"impl-ChunkAggSeries-for-ChunkedArray%3CStringType%3E"],[489,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[490,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[491,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[492,"impl-ChunkedArray%3CBooleanType%3E"],[493,"impl-ChunkedArray%3CT%3E"],[494,"impl-Mul-for-ChunkedArray%3CT%3E"],[495,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[496,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[497,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[500,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[501,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[502,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[504,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[505,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[506,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[507,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[508,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[509,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[510,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[511,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[512,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[513,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[514,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[515,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[516,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[517,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[518,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[519,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-ChunkedArray%3CInt16Type%3E"],[520,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-ChunkedArray%3CInt8Type%3E"],[521,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[522,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[523,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[524,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[525,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[526,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[527,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[528,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[529,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[530,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[531,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-ChunkedArray%3CUInt8Type%3E"],[532,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-ChunkedArray%3CUInt16Type%3E"],[533,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[534,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[535,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[536,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[537,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[538,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[539,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[540,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[541,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[542,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[543,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[544,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[545,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[547,"impl-ChunkExpandAtIndex%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[548,"impl-ChunkExpandAtIndex%3CT%3E-for-ChunkedArray%3CT%3E"],[549,"impl-ChunkExpandAtIndex%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[550,"impl-ChunkExpandAtIndex%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[551,"impl-ChunkExpandAtIndex%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[552,"impl-ChunkExpandAtIndex%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[553,"impl-ChunkExpandAtIndex%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[554,"impl-ChunkExpandAtIndex%3CListType%3E-for-ChunkedArray%3CListType%3E"],[555,"impl-ChunkExpandAtIndex%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[561,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[562,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[563,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[564,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[565,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[566,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[567,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[568,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[569,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[570,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[571,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[572,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[573,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[574,"impl-ChunkCompare%3C%26ChunkedArray%3CFixedSizeListType%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[575,"impl-ChunkCompare%3C%26ChunkedArray%3CStructType%3E%3E-for-ChunkedArray%3CStructType%3E"],[576,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[577,"impl-ChunkCompare%3C%26ChunkedArray%3CListType%3E%3E-for-ChunkedArray%3CListType%3E"],[578,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[579,"impl-ChunkCompare%3C%26ChunkedArray%3CBooleanType%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[580,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[581,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[582,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[585,"impl-ChunkExplode-for-ChunkedArray%3CFixedSizeListType%3E"],[586,"impl-ChunkExplode-for-ChunkedArray%3CListType%3E"],[588,"impl-ChunkedArray%3CListType%3E"],[589,"impl-ChunkedArray%3CStringType%3E"],[590,"impl-ChunkedArray%3CStringType%3E"],[591,"impl-ChunkedArray%3CListType%3E"],[594,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CFloat64Type%3E"],[595,"impl-ChunkQuantile%3Cf32%3E-for-ChunkedArray%3CFloat32Type%3E"],[596,"impl-ChunkQuantile%3Cf64%3E-for-ChunkedArray%3CT%3E"],[597,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[598,"impl-QuantileAggSeries-for-ChunkedArray%3CT%3E"],[599,"impl-QuantileAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[606,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[607,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[608,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[609,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[610,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[611,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[612,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[613,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[614,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[615,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[616,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[617,"impl-Reinterpret-for-ChunkedArray%3CUInt64Type%3E"],[618,"impl-Reinterpret-for-ChunkedArray%3CUInt32Type%3E"],[619,"impl-Reinterpret-for-ChunkedArray%3CListType%3E"],[620,"impl-Reinterpret-for-ChunkedArray%3CInt8Type%3E"],[621,"impl-Reinterpret-for-ChunkedArray%3CFloat32Type%3E"],[622,"impl-Reinterpret-for-ChunkedArray%3CUInt8Type%3E"],[623,"impl-Reinterpret-for-ChunkedArray%3CInt16Type%3E"],[624,"impl-Reinterpret-for-ChunkedArray%3CInt64Type%3E"],[625,"impl-Reinterpret-for-ChunkedArray%3CInt32Type%3E"],[626,"impl-Reinterpret-for-ChunkedArray%3CUInt16Type%3E"],[627,"impl-Reinterpret-for-ChunkedArray%3CFloat64Type%3E"],[628,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[629,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[630,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[631,"impl-Rem-for-ChunkedArray%3CT%3E"],[634,"impl-ChunkReverse-for-ChunkedArray%3CBinaryOffsetType%3E"],[635,"impl-ChunkReverse-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[636,"impl-ChunkReverse-for-ChunkedArray%3CFixedSizeListType%3E"],[637,"impl-ChunkReverse-for-ChunkedArray%3CListType%3E"],[638,"impl-ChunkReverse-for-ChunkedArray%3CStringType%3E"],[639,"impl-ChunkReverse-for-ChunkedArray%3CT%3E"],[640,"impl-ChunkReverse-for-ChunkedArray%3CBooleanType%3E"],[641,"impl-ChunkReverse-for-ChunkedArray%3CBinaryType%3E"],[646,"impl-ChunkedSet%3Cbool%3E-for-%26ChunkedArray%3CBooleanType%3E"],[647,"impl-ChunkedSet%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-%26mut+ChunkedArray%3CT%3E"],[648,"impl-ChunkedSet%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[649,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[650,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[651,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[652,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[653,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[654,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[655,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[656,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[657,"impl-ChunkSet%3C\'a,+%3CT+as+PolarsNumericType%3E::Native,+%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[658,"impl-ChunkSet%3C\'a,+%26%5Bu8%5D,+Vec%3Cu8%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[659,"impl-ChunkSet%3C\'a,+bool,+bool%3E-for-ChunkedArray%3CBooleanType%3E"],[660,"impl-ChunkSet%3C\'a,+%26str,+String%3E-for-ChunkedArray%3CStringType%3E"],[666,"impl-ChunkShift%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[667,"impl-ChunkShift%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[668,"impl-ChunkShift%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[669,"impl-ChunkShift%3CT%3E-for-ChunkedArray%3CT%3E"],[670,"impl-ChunkShift%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[671,"impl-ChunkShift%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[672,"impl-ChunkShift%3CListType%3E-for-ChunkedArray%3CListType%3E"],[673,"impl-ChunkShift%3CFixedSizeListType%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[674,"impl-ChunkShift%3CObjectType%3CT%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[675,"impl-ChunkShiftFill%3CBooleanType,+Option%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[676,"impl-ChunkShiftFill%3CBinaryOffsetType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[677,"impl-ChunkShiftFill%3CStringType,+Option%3C%26str%3E%3E-for-ChunkedArray%3CStringType%3E"],[678,"impl-ChunkShiftFill%3CObjectType%3CT%3E,+Option%3CObjectType%3CT%3E%3E%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[679,"impl-ChunkShiftFill%3CBinaryType,+Option%3C%26%5Bu8%5D%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[680,"impl-ChunkShiftFill%3CT,+Option%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[681,"impl-ChunkShiftFill%3CFixedSizeListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CFixedSizeListType%3E"],[682,"impl-ChunkShiftFill%3CListType,+Option%3C%26Series%3E%3E-for-ChunkedArray%3CListType%3E"],[684,"impl-Container-for-ChunkedArray%3CT%3E"],[685,"impl-ChunkedArray%3CT%3E"],[686,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[687,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[688,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[689,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[690,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[691,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[692,"impl-ChunkSort%3CBinaryType%3E-for-ChunkedArray%3CBinaryType%3E"],[693,"impl-ChunkSort%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[694,"impl-ChunkSort%3CT%3E-for-ChunkedArray%3CT%3E"],[695,"impl-ChunkSort%3CBooleanType%3E-for-ChunkedArray%3CBooleanType%3E"],[696,"impl-ChunkSort%3CStringType%3E-for-ChunkedArray%3CStringType%3E"],[697,"impl-ChunkSort%3CBinaryOffsetType%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[698,"impl-Container-for-ChunkedArray%3CT%3E"],[699,"impl-ChunkedArray%3CT%3E"],[701,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[702,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[703,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[705,"impl-Sub-for-ChunkedArray%3CT%3E"],[706,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[707,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[708,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[710,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[711,"impl-ChunkedArray%3CBooleanType%3E"],[712,"impl-ChunkAggSeries-for-ChunkedArray%3CBooleanType%3E"],[713,"impl-ChunkAggSeries-for-ChunkedArray%3CT%3E"],[714,"impl-ChunkAggSeries-for-ChunkedArray%3CBinaryType%3E"],[716,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[717,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[720,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStructType%3E"],[721,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[722,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[723,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStructType%3E"],[724,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[725,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[726,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[727,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[732,"impl-ChunkedArray%3CListType%3E"],[733,"impl-ChunkedArray%3CFixedSizeListType%3E"],[734,"impl-ChunkedArray%3CT%3E"],[735,"impl-ChunkedArray%3CListType%3E"],[740,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[741,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[742,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[743,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[744,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[745,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[747,"impl-ChunkedArray%3CFixedSizeListType%3E"],[748,"impl-ChunkedArray%3CListType%3E"],[762,"impl-ChunkUnique-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[763,"impl-ChunkUnique-for-ChunkedArray%3CBooleanType%3E"],[764,"impl-ChunkUnique-for-ChunkedArray%3CBinaryType%3E"],[765,"impl-ChunkUnique-for-ChunkedArray%3CStringType%3E"],[766,"impl-ChunkUnique-for-ChunkedArray%3CT%3E"],[772,"impl-VarAggSeries-for-ChunkedArray%3CFloat64Type%3E"],[773,"impl-VarAggSeries-for-ChunkedArray%3CFloat32Type%3E"],[774,"impl-VarAggSeries-for-ChunkedArray%3CT%3E"],[775,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[776,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[777,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[778,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[779,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[780,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[781,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[782,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[783,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[784,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[785,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[786,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[787,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[788,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[789,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[790,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[791,"impl-VecHash-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[792,"impl-VecHash-for-ChunkedArray%3CInt16Type%3E"],[793,"impl-VecHash-for-ChunkedArray%3CBinaryOffsetType%3E"],[794,"impl-VecHash-for-ChunkedArray%3CUInt32Type%3E"],[795,"impl-VecHash-for-ChunkedArray%3CInt32Type%3E"],[796,"impl-VecHash-for-ChunkedArray%3CUInt16Type%3E"],[797,"impl-VecHash-for-ChunkedArray%3CUInt64Type%3E"],[798,"impl-VecHash-for-ChunkedArray%3CBooleanType%3E"],[799,"impl-VecHash-for-ChunkedArray%3CUInt8Type%3E"],[800,"impl-VecHash-for-ChunkedArray%3CInt8Type%3E"],[801,"impl-VecHash-for-ChunkedArray%3CFloat64Type%3E"],[802,"impl-VecHash-for-ChunkedArray%3CInt64Type%3E"],[803,"impl-VecHash-for-ChunkedArray%3CBinaryType%3E"],[804,"impl-VecHash-for-ChunkedArray%3CFloat32Type%3E"],[805,"impl-VecHash-for-ChunkedArray%3CInt128Type%3E"],[806,"impl-VecHash-for-ChunkedArray%3CStringType%3E"],[818,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[819,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[820,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[821,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[822,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[823,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[824,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[825,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[826,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[827,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[828,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[829,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[830,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[831,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[832,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[833,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[834,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[835,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[836,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[837,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[838,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[839,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[840,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[841,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[842,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[843,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[844,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[845,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[846,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[847,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[848,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[849,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[850,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[851,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[852,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[853,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[857,"impl-ChunkZip%3CStructType%3E-for-ChunkedArray%3CStructType%3E"],[858,"impl-ChunkZip%3CT%3E-for-ChunkedArray%3CT%3E"],[1034,"impl-BinViewChunkedBuilder%3Cstr%3E"],[1035,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[1309,"impl-MetadataProperties"],[1310,"impl-Flags-for-MetadataProperties"],[1311,"impl-Flags-for-MetadataFlags"],[1312,"impl-MetadataFlags"],[1375,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1376,"impl-Metadata%3CT%3E"],[1401,"impl-Octal-for-MetadataProperties"],[1402,"impl-Binary-for-MetadataProperties"],[1403,"impl-LowerHex-for-MetadataProperties"],[1404,"impl-Debug-for-MetadataProperties"],[1405,"impl-UpperHex-for-MetadataProperties"],[1406,"impl-Octal-for-MetadataFlags"],[1407,"impl-Binary-for-MetadataFlags"],[1408,"impl-LowerHex-for-MetadataFlags"],[1409,"impl-UpperHex-for-MetadataFlags"],[1410,"impl-Debug-for-MetadataFlags"],[1420,"impl-Flags-for-MetadataProperties"],[1421,"impl-MetadataProperties"],[1422,"impl-Flags-for-MetadataFlags"],[1423,"impl-MetadataFlags"],[1434,"impl-Metadata%3CT%3E"],[1435,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1478,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1479,"impl-Metadata%3CT%3E"],[1483,"impl-Metadata%3CT%3E"],[1484,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1561,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1562,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1597,"impl-ObjectArray%3CT%3E"],[1598,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1613,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1614,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1624,"impl-ObjectArray%3CT%3E"],[1625,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1626,"impl-ObjectArray%3CT%3E"],[1627,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1629,"impl-ObjectArray%3CT%3E"],[1630,"impl-Array-for-ObjectArray%3CT%3E"],[1633,"impl-ObjectChunkedBuilder%3CT%3E"],[1634,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1636,"impl-ObjectChunkedBuilder%3CT%3E"],[1637,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[2296,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[2297,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[2298,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[2299,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[2401,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[2402,"impl-Logical%3CDurationType,+Int64Type%3E"],[2404,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2405,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2406,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2407,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2408,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2695,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2696,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2697,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2698,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2699,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2710,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2711,"impl-PartialEq-for-DataType"],[2718,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2719,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2720,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2721,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2722,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2723,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2756,"impl-Debug-for-PlSmallStr"],[2757,"impl-Display-for-PlSmallStr"],[2761,"impl-Display-for-AnyValue%3C\'_%3E"],[2762,"impl-Debug-for-AnyValue%3C\'a%3E"],[2764,"impl-Display-for-DataType"],[2765,"impl-Debug-for-DataType"],[2768,"impl-Debug-for-TimeUnit"],[2769,"impl-Display-for-TimeUnit"],[2772,"impl-From%3C%26str%3E-for-PlSmallStr"],[2774,"impl-From%3CCompactString%3E-for-PlSmallStr"],[2775,"impl-From%3C%26String%3E-for-PlSmallStr"],[2776,"impl-From%3CString%3E-for-PlSmallStr"],[2779,"impl-From%3CChunkedArray%3CInt64Type%3E%3E-for-Logical%3CTimeType,+Int64Type%3E"],[2781,"impl-From%3CChunkedArray%3CInt32Type%3E%3E-for-Logical%3CDateType,+Int32Type%3E"],[2794,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2795,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2796,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2797,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2798,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2802,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2803,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2804,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2806,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2808,"impl-From%3C%26ArrowField%3E-for-Field"],[2832,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2833,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2840,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[2841,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[2842,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[2843,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[2844,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[2845,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[2846,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[2847,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[2865,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2866,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2867,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2868,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2869,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2872,"impl-LogicalType-for-Logical%3CDatetimeType,+Int64Type%3E"],[2873,"impl-LogicalType-for-Logical%3CDurationType,+Int64Type%3E"],[2874,"impl-LogicalType-for-Logical%3CDecimalType,+Int128Type%3E"],[2875,"impl-LogicalType-for-Logical%3CTimeType,+Int64Type%3E"],[2876,"impl-LogicalType-for-Logical%3CDateType,+Int32Type%3E"],[2912,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2913,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[2914,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2915,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[2916,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[2917,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3025,"impl-IntoSeries-for-Logical%3CTimeType,+Int64Type%3E"],[3026,"impl-IntoSeries-for-Logical%3CDurationType,+Int64Type%3E"],[3027,"impl-IntoSeries-for-Logical%3CDecimalType,+Int128Type%3E"],[3028,"impl-IntoSeries-for-Logical%3CDatetimeType,+Int64Type%3E"],[3029,"impl-IntoSeries-for-Logical%3CDateType,+Int32Type%3E"],[3079,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3080,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3081,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3082,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3083,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3084,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3120,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3121,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3122,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3123,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Logical%3CTimeType,+Int64Type%3E"],[3124,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3125,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Logical%3CDatetimeType,+Int64Type%3E"],[3126,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Logical%3CDateType,+Int32Type%3E"],[3127,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Logical%3CDurationType,+Int64Type%3E"],[3133,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3134,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3135,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3136,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3137,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3138,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3141,"impl-DateMethods-for-Logical%3CDateType,+Int32Type%3E"],[3142,"impl-TimeMethods-for-Logical%3CTimeType,+Int64Type%3E"],[3163,"impl-PolarsRound-for-Logical%3CDateType,+Int32Type%3E"],[3164,"impl-PolarsRound-for-Logical%3CDatetimeType,+Int64Type%3E"],[3170,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3171,"impl-Logical%3CDurationType,+Int64Type%3E"],[3178,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3179,"impl-Logical%3CDateType,+Int32Type%3E"],[3180,"impl-Logical%3CTimeType,+Int64Type%3E"],[3196,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3197,"impl-Logical%3CDurationType,+Int64Type%3E"],[3247,"impl-Logical%3CDateType,+Int32Type%3E"],[3248,"impl-Logical%3CTimeType,+Int64Type%3E"],[3249,"impl-Logical%3CDatetimeType,+Int64Type%3E"],[3254,"impl-PolarsTruncate-for-Logical%3CDatetimeType,+Int64Type%3E"],[3255,"impl-PolarsTruncate-for-Logical%3CDateType,+Int32Type%3E"],[3552,"impl-Debug-for-ErrString"],[3553,"impl-Display-for-ErrString"],[3554,"impl-Display-for-PolarsError"],[3555,"impl-Debug-for-PolarsError"],[3560,"impl-From%3CTryReserveError%3E-for-PolarsError"],[3561,"impl-From%3CUtf8Error%3E-for-PolarsError"],[3562,"impl-From%3CError%3E-for-PolarsError"],[3563,"impl-From%3CError%3E-for-PolarsError"],[3564,"impl-From%3CParquetError%3E-for-PolarsError"],[3565,"impl-From%3CError%3E-for-PolarsError"],[3702,"impl-Display-for-DataFrame"],[3703,"impl-Debug-for-DataFrame"],[3709,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3710,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3736,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3737,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3738,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3739,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3740,"impl-Index%3Cusize%3E-for-DataFrame"],[3741,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3742,"impl-Index%3C%26str%3E-for-DataFrame"],[3743,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3762,"impl-Container-for-DataFrame"],[3763,"impl-DataFrame"],[3771,"impl-DataFrame"],[3772,"impl-Container-for-DataFrame"],[3816,"impl-Container-for-DataFrame"],[3817,"impl-DataFrame"],[3821,"impl-Container-for-DataFrame"],[3822,"impl-DataFrame"],[3845,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CArrowField%3E)%3E-for-DataFrame"],[3847,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3888,"impl-Add-for-Column"],[3889,"impl-Add%3CT%3E-for-%26Column"],[3890,"impl-Add%3CT%3E-for-Column"],[3891,"impl-Add-for-%26Column"],[3914,"impl-Column"],[3915,"impl-BitAnd-for-%26Column"],[3916,"impl-BitAnd-for-Column"],[3917,"impl-BitOr-for-%26Column"],[3918,"impl-BitOr-for-Column"],[3919,"impl-BitXor-for-Column"],[3920,"impl-BitXor-for-%26Column"],[3948,"impl-Div-for-%26Column"],[3949,"impl-Div%3CT%3E-for-Column"],[3950,"impl-Div%3CT%3E-for-%26Column"],[3951,"impl-Div-for-Column"],[3974,"impl-From%3CScalarColumn%3E-for-Column"],[3976,"impl-From%3CSeries%3E-for-Column"],[4022,"impl-Mul-for-Column"],[4023,"impl-Mul-for-%26Column"],[4024,"impl-Mul%3CT%3E-for-Column"],[4025,"impl-Mul%3CT%3E-for-%26Column"],[4040,"impl-Rem-for-Column"],[4041,"impl-Rem%3CT%3E-for-%26Column"],[4042,"impl-Rem%3CT%3E-for-Column"],[4043,"impl-Rem-for-%26Column"],[4062,"impl-Sub-for-Column"],[4063,"impl-Sub-for-%26Column"],[4064,"impl-Sub%3CT%3E-for-Column"],[4065,"impl-Sub%3CT%3E-for-%26Column"],[4242,"impl-Debug-for-GroupByMethod"],[4243,"impl-Display-for-GroupByMethod"],[4249,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[4250,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4251,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[4285,"impl-IntoIterator-for-%26GroupsIdx"],[4286,"impl-IntoIterator-for-GroupsIdx"],[4288,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4289,"impl-IntoParallelIterator-for-GroupsIdx"],[5637,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[5638,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[5642,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[5643,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[5671,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[5672,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[5695,"impl-Flags-for-OptFlags"],[5696,"impl-OptFlags"],[6421,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[6422,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[6423,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[6433,"impl-Default-for-Arc%3CT%3E"],[6434,"impl-Default-for-Arc%3CCStr%3E"],[6435,"impl-Default-for-Arc%3Cstr%3E"],[6436,"impl-Default-for-Arc%3C%5BT%5D%3E"],[6918,"impl-PartialEq-for-Expr"],[6919,"impl-Expr"],[6922,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[6923,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[6942,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[6943,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[6944,"impl-PartialEq-for-Arc%3CT,+A%3E"],[6949,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[6950,"impl-PartialEq-for-StructArray"],[7229,"impl-Display-for-Duration"],[7230,"impl-Debug-for-Duration"],[7247,"impl-Debug-for-JoinType"],[7248,"impl-Display-for-JoinType"],[7250,"impl-Debug-for-JoinValidation"],[7251,"impl-Display-for-JoinValidation"],[7269,"impl-Display-for-Expr"],[7270,"impl-Debug-for-Expr"],[7272,"impl-Debug-for-Operator"],[7273,"impl-Display-for-Operator"],[7275,"impl-Debug-for-BooleanFunction"],[7276,"impl-Display-for-BooleanFunction"],[7277,"impl-Display-for-CategoricalFunction"],[7278,"impl-Debug-for-CategoricalFunction"],[7279,"impl-Display-for-TemporalFunction"],[7280,"impl-Debug-for-TemporalFunction"],[7281,"impl-Debug-for-PowFunction"],[7282,"impl-Display-for-PowFunction"],[7283,"impl-Display-for-StringFunction"],[7284,"impl-Debug-for-StringFunction"],[7285,"impl-Debug-for-StructFunction"],[7286,"impl-Display-for-StructFunction"],[7287,"impl-Debug-for-FunctionExpr"],[7288,"impl-Display-for-FunctionExpr"],[7302,"impl-Debug-for-OptFlags"],[7303,"impl-UpperHex-for-OptFlags"],[7304,"impl-LowerHex-for-OptFlags"],[7305,"impl-Octal-for-OptFlags"],[7306,"impl-Binary-for-OptFlags"],[7309,"impl-Debug-for-Arc%3CT,+A%3E"],[7310,"impl-Display-for-Arc%3CT,+A%3E"],[7311,"impl-Pointer-for-Arc%3CT,+A%3E"],[7342,"impl-From%3CDslPlan%3E-for-LazyFrame"],[7344,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[7421,"impl-From%3Ci32%3E-for-Expr"],[7422,"impl-From%3Cf32%3E-for-Expr"],[7423,"impl-From%3C%26str%3E-for-Expr"],[7424,"impl-From%3CAggExpr%3E-for-Expr"],[7425,"impl-From%3Ci16%3E-for-Expr"],[7426,"impl-From%3Cf64%3E-for-Expr"],[7427,"impl-From%3Ci8%3E-for-Expr"],[7429,"impl-From%3Ci64%3E-for-Expr"],[7430,"impl-From%3Cu8%3E-for-Expr"],[7431,"impl-From%3Cu16%3E-for-Expr"],[7432,"impl-From%3Cu32%3E-for-Expr"],[7433,"impl-From%3Cu64%3E-for-Expr"],[7434,"impl-From%3Cbool%3E-for-Expr"],[7437,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7438,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7439,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7440,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7441,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7442,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7443,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7444,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7446,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7447,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[7455,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[7456,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[7457,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[7458,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[7473,"impl-From%3CPlSmallStr%3E-for-Selector"],[7474,"impl-From%3C%26str%3E-for-Selector"],[7475,"impl-From%3CString%3E-for-Selector"],[7476,"impl-From%3CExpr%3E-for-Selector"],[7481,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[7482,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[7483,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[7484,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[7485,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[7487,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[7488,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[7489,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[7490,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[7491,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[7492,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[7493,"impl-From%3CT%3E-for-Arc%3CT%3E"],[7494,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[7495,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[7496,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[7497,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[7505,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[7506,"impl-From%3CMutableStructArray%3E-for-StructArray"],[7507,"impl-From%3Cf64%3E-for-Scalar"],[7508,"impl-From%3Ci16%3E-for-Scalar"],[7509,"impl-From%3Cu32%3E-for-Scalar"],[7510,"impl-From%3Cu16%3E-for-Scalar"],[7511,"impl-From%3Cu8%3E-for-Scalar"],[7512,"impl-From%3Ci64%3E-for-Scalar"],[7513,"impl-From%3Ci32%3E-for-Scalar"],[7514,"impl-From%3Cu64%3E-for-Scalar"],[7515,"impl-From%3Ci8%3E-for-Scalar"],[7516,"impl-From%3Cf32%3E-for-Scalar"],[7526,"impl-OptFlags"],[7527,"impl-Flags-for-OptFlags"],[7532,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7533,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7541,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7542,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[7555,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[7556,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[8659,"impl-Array-for-StructArray"],[8660,"impl-StructArray"],[8666,"impl-Array-for-StructArray"],[8667,"impl-StructArray"],[8932,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[8933,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[8937,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[8938,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[9387,"impl-Array-for-StructArray"],[9388,"impl-StructArray"],[9640,"impl-LazyCsvReader"],[9641,"impl-LazyFileListReader-for-LazyCsvReader"],[9642,"impl-LazyJsonLineReader"],[9643,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9684,"impl-LazyFileListReader-for-LazyCsvReader"],[9685,"impl-LazyCsvReader"],[9686,"impl-LazyJsonLineReader"],[9687,"impl-LazyFileListReader-for-LazyJsonLineReader"],[9730,"impl-StructArray"],[9731,"impl-Array-for-StructArray"],[10221,"impl-StrpTimeParser%3Ci32%3E-for-DatetimeInfer%3CInt32Type%3E"],[10222,"impl-StrpTimeParser%3Ci64%3E-for-DatetimeInfer%3CInt64Type%3E"],[10227,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt32Type%3E"],[10228,"impl-TryFromWithUnit%3CPattern%3E-for-DatetimeInfer%3CInt64Type%3E"],[10936,"impl-Display-for-RollingFunction"],[10937,"impl-Debug-for-RollingFunction"],[10967,"impl-Debug-for-RollingFunctionBy"],[10968,"impl-Display-for-RollingFunctionBy"],[11192,"impl-Add-for-%26Series"],[11193,"impl-Add%3CT%3E-for-%26Series"],[11194,"impl-Add%3CT%3E-for-Series"],[11195,"impl-Add-for-Series"],[11211,"impl-AsSeries-for-Series"],[11212,"impl-SeriesSealed-for-Series"],[11265,"impl-Div-for-Series"],[11266,"impl-Div-for-%26Series"],[11267,"impl-Div%3CT%3E-for-Series"],[11268,"impl-Div%3CT%3E-for-%26Series"],[11279,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11280,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11281,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11283,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11284,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11285,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11301,"impl-Display-for-Series"],[11302,"impl-Debug-for-Series"],[11307,"impl-From%3CLogical%3CDurationType,+Int64Type%3E%3E-for-Series"],[11308,"impl-From%3CLogical%3CTimeType,+Int64Type%3E%3E-for-Series"],[11309,"impl-From%3CLogical%3CDatetimeType,+Int64Type%3E%3E-for-Series"],[11310,"impl-From%3CLogical%3CDateType,+Int32Type%3E%3E-for-Series"],[11312,"impl-From%3CChunkedArray%3CT%3E%3E-for-Series"],[11313,"impl-From%3C_SerdeSeries%3E-for-Series"],[11319,"impl-FromIterator%3C%26f32%3E-for-Series"],[11320,"impl-FromIterator%3Ci32%3E-for-Series"],[11321,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[11322,"impl-FromIterator%3C%26i64%3E-for-Series"],[11323,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[11324,"impl-FromIterator%3Cf32%3E-for-Series"],[11325,"impl-FromIterator%3C%26i16%3E-for-Series"],[11326,"impl-FromIterator%3C%26u16%3E-for-Series"],[11327,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[11328,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[11329,"impl-FromIterator%3Cu16%3E-for-Series"],[11330,"impl-FromIterator%3C%26u32%3E-for-Series"],[11331,"impl-FromIterator%3COption%3Cu16%3E%3E-for-Series"],[11332,"impl-FromIterator%3Cf64%3E-for-Series"],[11333,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[11334,"impl-FromIterator%3C%26u8%3E-for-Series"],[11335,"impl-FromIterator%3C%26f64%3E-for-Series"],[11336,"impl-FromIterator%3Cu32%3E-for-Series"],[11337,"impl-FromIterator%3Cbool%3E-for-Series"],[11338,"impl-FromIterator%3Cu8%3E-for-Series"],[11339,"impl-FromIterator%3C%26bool%3E-for-Series"],[11340,"impl-FromIterator%3COption%3Cu8%3E%3E-for-Series"],[11341,"impl-FromIterator%3Ci64%3E-for-Series"],[11342,"impl-FromIterator%3Cu64%3E-for-Series"],[11343,"impl-FromIterator%3C%26u64%3E-for-Series"],[11344,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[11345,"impl-FromIterator%3COption%3Ci8%3E%3E-for-Series"],[11346,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[11347,"impl-FromIterator%3Ci8%3E-for-Series"],[11348,"impl-FromIterator%3C%26i8%3E-for-Series"],[11349,"impl-FromIterator%3CString%3E-for-Series"],[11350,"impl-FromIterator%3C%26str%3E-for-Series"],[11351,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[11352,"impl-FromIterator%3C%26i32%3E-for-Series"],[11353,"impl-FromIterator%3COption%3Ci16%3E%3E-for-Series"],[11354,"impl-FromIterator%3Ci16%3E-for-Series"],[11355,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[11356,"impl-NamedFromOwned%3CVec%3Ci16%3E%3E-for-Series"],[11357,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[11358,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[11359,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[11360,"impl-NamedFromOwned%3CVec%3Cu16%3E%3E-for-Series"],[11361,"impl-NamedFromOwned%3CVec%3Cu8%3E%3E-for-Series"],[11362,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[11363,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[11364,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[11365,"impl-NamedFromOwned%3CVec%3Ci8%3E%3E-for-Series"],[11366,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[11378,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11379,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11380,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11382,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11383,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11384,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11426,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11427,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11428,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11430,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11431,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11432,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11441,"impl-Mul-for-Series"],[11442,"impl-Mul-for-%26Series"],[11443,"impl-Mul%3CT%3E-for-%26Series"],[11444,"impl-Mul%3CT%3E-for-Series"],[11449,"impl-NamedFrom%3CT,+%5BOption%3Ci8%3E%5D%3E-for-Series"],[11450,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[11451,"impl-NamedFrom%3CT,+%5BOption%3Ci16%3E%5D%3E-for-Series"],[11452,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[11453,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[11454,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[11455,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[11456,"impl-NamedFrom%3CT,+%5BOption%3Cu16%3E%5D%3E-for-Series"],[11457,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[11458,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[11459,"impl-NamedFrom%3CT,+T%3E-for-Series"],[11460,"impl-NamedFrom%3CT,+%5BOption%3CNaiveTime%3E%5D%3E-for-Series"],[11461,"impl-NamedFrom%3CT,+%5BNaiveTime%5D%3E-for-Series"],[11462,"impl-NamedFrom%3CT,+%5BOption%3CTimeDelta%3E%5D%3E-for-Series"],[11463,"impl-NamedFrom%3CT,+%5BTimeDelta%5D%3E-for-Series"],[11464,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDateTime%3E%5D%3E-for-Series"],[11465,"impl-NamedFrom%3CT,+%5BNaiveDateTime%5D%3E-for-Series"],[11466,"impl-NamedFrom%3CT,+%5BOption%3CNaiveDate%3E%5D%3E-for-Series"],[11467,"impl-NamedFrom%3CT,+%5BNaiveDate%5D%3E-for-Series"],[11468,"impl-NamedFrom%3CT,+%5BOption%3Cu8%3E%5D%3E-for-Series"],[11469,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[11470,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[11471,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[11472,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[11473,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[11474,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[11475,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[11476,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[11477,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[11478,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[11479,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[11480,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[11481,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[11482,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[11483,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[11484,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[11485,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[11486,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[11487,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[11488,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[11489,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[11490,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[11491,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[11492,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[11493,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[11494,"impl-NamedFrom%3CT,+%5Bu8%5D%3E-for-Series"],[11495,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[11496,"impl-NamedFrom%3CT,+%5Bu16%5D%3E-for-Series"],[11497,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[11498,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[11499,"impl-NamedFrom%3CT,+%5Bi8%5D%3E-for-Series"],[11500,"impl-NamedFrom%3CT,+%5Bi16%5D%3E-for-Series"],[11501,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[11507,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11508,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11509,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11511,"impl-ChunkCompare%3C%26str%3E-for-Series"],[11512,"impl-ChunkCompare%3CRhs%3E-for-Series"],[11513,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[11521,"impl-Rem%3CT%3E-for-Series"],[11522,"impl-Rem%3CT%3E-for-%26Series"],[11523,"impl-Rem-for-%26Series"],[11552,"impl-Sub-for-Series"],[11553,"impl-Sub%3CT%3E-for-%26Series"],[11554,"impl-Sub-for-%26Series"],[11555,"impl-Sub%3CT%3E-for-Series"],[11580,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[11581,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11582,"impl-TryFrom%3C(%26ArrowField,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[11583,"impl-TryFrom%3C(%26ArrowField,+Box%3Cdyn+Array%3E)%3E-for-Series"]],"c":"OjAAAAEAAAAAAAwAEAAAAEMQjhDKEM0QzhDPENAQ0RDWENkQ3hDfEAUR","e":"OzAAAAEAAMAhcwQCAAAABQABAAgAAAALAAIAEAAAABIAAAAUAB4APAAFAEYAAQBJAAsAWAAFAF8ABABlAAUAbAABAHAABAB2ABUAjQAAAI8AAACRABEApgADAKsAAgCyAA0AwQAVANkACADjAAsA8QABAPUAHQAZARUAMQETAEYBAQBJARMAXwEBAGMBAQBmAR4AhwECAI8BEQCiAQMAqQECAK4BAgCyAQcAvwEhAOYBBgDvAQgA+QE1ADICFQBJAgIATQIEAFMCBQBdAgAAXwIaAHsCBwCHAhEAmwIQAK0CAACvAgwAvQIOAM8CAgDUAgAA1wIAANoCAQDhAgAA5QIGAO0CAADvAgIA8wINAAIDAAAEAygALwMCADMDIwBaAzUAkgMIAJ8DEQC0A1wAHgQSADwEBwBFBEkAkgQOAKIEAQClBBkAwAQAAMMEDgDVBAIA2wQCAOAEHAD+BAkACQUKAB8FAQAmBQ0ANQUPAEkFEgBeBQAAYAUJAGwFAwByBQEAdgUNAI0FAACPBQAAlwUHAKAFBwC1BQEAuQUAALwFAwDEBQUAywUEANcFCwDqBQQA8QUNAAEGBgALBgcAFAYBABgGFwAxBgcAOgYAAD0GAAA/BgIARQYQAFcGAABaBgMAXwYCAGMGAQBmBggAcAYAAHIGBQB6BgEAfQYAAH8GAQCCBgMAhwYDAIwGAgCQBgMAlgYAAJkGAAChBgAApgYAAKkGAQCuBgEAsQYAALQGAAC8BgAAwgYDAM4GBgDYBhAA6wYFAPMGCAD+BgQABQcAAAcHAAAJBwEADwcFABgHAQAhBwEALQcAAC8HAQAyBwAANQcAADcHAAA7BwAAPQcAAEIHDABRBwIAYAcAAGIHBwBrBwEAbgcAAHIHAAB0BwMAeQcBAHwHBQCIBxYAoAcBAKQHBACqBwMAsQcHAMYHAwDLBwgA1QcEANwHAgDgBwUA6AcAAOoHDgD9BwEAAQgAAAMIAAAICAEADAgAAA4IBgAWCAAAGAgAABsIAQAfCAAAIQgBACQIAAAmCAIAKggMADgIAAA6CAEAPQgAAD8IAQBCCAAARAgBAEcIAABJCAEATAgDAFMIAABXCAEAWwgAAF4IAABgCAAAYggDAGcIAABqCAgAdAgCAHkIBAB/CAEAgwgAAIUIAgCJCAEAjwgDAJQIAQCXCAAAmQgBAJwIAACeCAEAoQgAAKMIAQCmCAAAqAgBAKsIAACtCAAAsAglANcIGADxCAMA9ghqAGQJeQDfCQgA6QmdAIgKBQCQCjAAwgoTANcKAgDcCgAA3goAAOsKBADzCgIA9woAAPkKAQARCwEAFAsAABkLBwAkCwAAJwsCACsLBQAyCwQAOAsFAD8LAABBCxoAYQsOAHILLQChCwAAzgsJANkLAADbCwAA3QsCAOELAwDmCwEA6wsAAO0LBwD2CwAA+QsCAP4LAwADDAAABgwOABcMAAAaDA8AKwwAAC4MCwA7DA0ASgwBAE0MAABPDA4AXwwAAGcMAABpDAEAbwwRAIMMAACFDAIAigwhAK4MAQCzDGYAGw0yAE8NAQBSDTkAjQ0BAJANCACaDQAAnA0BAJ8NBAClDQEAqg0AAKwNAgCwDQAAsw0EALkNBAC/DRIA0w0RAOcNAADpDQkA9g0FAP0NGAAZDgAAHA4LACoOAwA0DhUATA4QAGYOAQBqDgIAbg4AAHAOAAB1DgMAhw4AAI4OAACQDgAAkg4BAJkODACsDgIAsw4AALcOAQC9DgAAww4BAMYOAADTDgEA1w4AAN4OAADnDgIA6w4AAO4OAADwDgEA+A4AAPoOBAACDwYACw8KABcPAAAaDwEAHw8EACwPAAAuDwYAQA8CAEUPAQBIDxAAWw8dAHsPDACJDwAAjA8GAJYPCQCiDwMApw8LALUPDQDFDwoA0Q8TAOcPAADqDwIA7g8TAAMQDgATEAIAFxAKACMQAQAmEAMAKxADADAQCQA7EAcARBABAEcQHABlECgAjxAGAJoQAgCfEAAAohADAKgQAACsEAcAvBANAMsQAQDSEAMA1xABANsQAgDgEAAA4hAgAAYRDAAVEQUAHBEHACURIwBLEQ4AWxEOAGsRAQBvEQMAdhEGAIARDgCREQYAmhEAAJ0RCACnEQEAqxEEALERBQC4EQAAvREJAMgRAQDMEQQA0hEBANURCgDhEQAA5BEAAOYRCQDxEQAA9hEJAAESBQALEgAADhIAABYSAgAdEgAAIBIBACYSCAAwEgAAMhIAADQSAAA2EhEASxIHAFQSAQBXEgUAYRIEAGkSAgBtEgEAdBIDAHkSAAB7EgkAhhIAAIkSAwCOEgYAlxICAJwSAACfEgAAoRICAKYSAgCqEgUAsRIEALcSAwC+EgIAxBIAAMYSAQDKEgAAzBIEANMSDwDkEgAA5xIBAOoSAwDwEgIA9hIgABkTAAAbEwEAHxMAACETAQAlEwAAJxMBACsTAAAtEwUANhMCADsTAAA+EwAAQRMAAEMTAgBHEwIASxMKAFgTBwBhEwAAYxMAAGcTAQBrEwAAbRMAAG8TAQByEwEAdRMBAHoTAAB8Ew0AjRMFAJQTBwCeEwIAohMGAK0TAQCwEwAAshMBALUTBAC7EwMAwBMCAMQTAADGEwQAzBMAAM4TBgDWEwQA3BMBAN8TAQDiEwEA5RMBAOgTAADqEwAA7BMAAO8TAgD0EwMA+RMHAAMUAgAKFAAADBQGABQUAwAaFAAAHBQAAB8UAAAhFAMAJhQCACoUAAAsFAIAMBQAADIUBwA7FAcARRQVAFwUFQB1FAEAeBQPAIoUAACMFAEAkBQMAJ4UAACgFAIApRQBAKkUAQCuFAcAtxQDAL8UBgDHFAkA0xQDANgUCADiFAAA5BQCAOkUAgDwFAUA9xQSAAwVAAAOFQEAEhUAABQVAQAYFQAAGhUBAB4VAAAgFQQAJxUDACwVAQAvFQEANRUKAEEVAABEFQYATRUCAFEVXgCxFQUAvBUAAL4VAADBFQYAyhUAANIVAADWFQAA2BUAANwVBQDmFQAA6hUAAPEVAAD1FQAAARYCAAUWCAAPFgAAERYBABQWAgAbFgEAHhYEACQWAQAsFgoAORYAADsWAAA+FgAAQBYAAEIWAABEFgAARhb3AD8XAgBDFwEARhcAAEgXAgBOFwAAUhcAAFYXAABYFwAAWhcAAGAXAABiFwEAZRcAAG8XTwDAFwsAzRe5AIgYAQCOGAIAlBgCAJoYCgCpGAQArxgAALUYAAC3GAAAwRgBAMUYAADHGAAAzRgAANIYAQDkGAAA6RgCAO8YAADxGAUA+RgoACYZAgErGgAAMBoBADMaAwA6GgAAPBoDAEQaCABOGmUAtRoMAMcaAQDMGgEAzxoAANMaAADVGgAA1xoCANsaLAAJGxcAIhsMADIbrQDkGwAA6xsAAO0bAQDwGwAA8hsAAPYbAAD6GwAA/BsAAAAcAAADHAAABhwAAA0cAAAQHAIAFxwGAB8cAQAiHAAAJBwDACwcAAAuHAAAMBwBADUcaQCjHAAArxwAALEcAADUHAAA2xwAAN4cAAD+HAYABh0FAA4dBwAXHQEAIB0EAC0dAAAyHQMAPx0AAEIdAABSHQsAZR0AAGgdAABqHQAAbR0BAHYdAQB7HQIAgR0FAIgdAgCMHQEAkB0CAJQdAACWHQAAmB0AAJ0dAACjHQAAph0BAKkdAwCuHQAAsB0BALYdBAC+HQEAwh0AAM0dAADPHUAAEx4DABseAAAdHgAAHx4EACYeAAAoHgAAKh4BAC0eAAAwHgEANR4AADgefwC6HgAAvx4CAMMeAQBDHwEARx8AAEkfBgBTHwUAWh8DAF8fAgBkHwAAZh8BAGkfAABrHwAAbh8BAHUfAAB8HwAAfh8BAIIfAgCGHwMAjB8CAJEfAACTHwAAmh8BAJ0fAgCnHwAAqR8BAKwfAACwHwIAth8BAL4fAwDEHwEAyB8CAMwfAwDSHw4A5h8AAOwfAQDzHwAA9h8FAP8fAAAHIAIAFCAAAB4gAAAlIAAAJyABACogAAAtIAAAMiAAADQgAAA2IAAAOyAAAD8gAABBIAIASCAGAFUgCABjIAAAZSAAAGkgAABvIAAAcSAEAHogAQB9IAEAgCAAAIMgCACOIAEAkSAAAJQgAQCYIAAAnCAAAKQgAACnIAEAriABALQgAQC3IAQAwiACAMogAQDRIAIA1SACAOAgAADiIAQA6CAFAO8gAAD1IAMA+iAAAPwgAgACIQAABCEAABAhAAATIQEAFiEBABkhAwAfIQUAJiEEACwhAAAxIQAANyEAAD0hAQBDIQAARyEAAEkhAABLIQEAbiEAAHMhAAB7IQMAgCEFAIghAQCSIQAAliECAJohBACiIQAApCEBAKchAQCqIQEAriEAALAhAACyIQMAuSEAAMIhAADEIQAAxiEAAMwhAwDUIQAA1iEAANghAADaIQEA3yEAAOEhAADnIQIA6yECAO8hBwD4IQAA+iEAAP4hAAAEIgAAByIAAA0iAAARIgoAHiICACMiAAAmIgIAMSIBAEIiAABEIgAARyICAEsiAwBQIgIAVCIAAFciAABbIl4AvCIOAM4iAQDTIgoA3yIAAOEiAQDkIo4AdCN7APMjAAD1IwMAACQAAAMkDwAUJHoAkCQAAJgkAACdJAAAnyQAAKEkAACnJAUAriQBALIkAQC2JAAAuiQAAMAkAQDDJAAAxSR7AEclAwBQJQAAUyUAAFUlAABZJQEAXSUBAGAlAABnJQAAayUBAHElAAB3JQAAgSUAAIglAQCTJQMAmiUBAKolAACsJQAAryUAALElAAC5JQEAvCUBAMIlAADPJQAA1SUAANglAADbJQAA4yUAAOglAAD0JQAA9yUBAPolAAD8JQEABCYCAAomFAAgJgEAJiYBACkmDQA4JgQAPiYwAHEmAABzJgAAdSYBAHgmAQB7JgYAgyY/AMQmAQDHJggA0iYFANkmCQDkJgEA5yYAAOsmAADtJgMA8iYBAPUmBQD/JhIAEycBABYnAgAbJwAAHycWADcnFwBTJwQAXCcTAHEnBgCIJwAAlicCAKwnAACzJwgAwCcAAMInDADQJwIA1CcSAOgnAQDrJw8A/CcZABgoAAAaKAIAHygKACsoAQAuKAYANigDADsoAgA/KAAAQigGAEooBABRKAIAVSgFAF0oAABfKA4AcigBAHYoAAB4KAAAfSgBAIEoAACDKAQAiSgAAIsoAACOKAEAkigAAJQoAQCXKAAAmSgCAJ0oDACrKAAArSgBALAoAACyKAEAtSgAALcoAQC6KAAAvCgBAL8oAwDGKAAAyigBAM4oAADRKAAA0ygAANUoAwDaKAAA3SgIAOcoAgDsKAQA8igBAPYoAAD4KAIA/CgBAAIpAwAHKQEACikAAAwpAQAPKQAAESkBABQpAAAWKQEAGSkAABspAQAeKQAAICkAACMpEgA3KQYAQCkAAEMpEQBWKQgAYCkBAGMpCABtKQAAbykBAHUpAAB3KQQAgCkBAIkpAgCPKQAAkSkAAJspAACqKQMAsikKAL4pAADAKQgAyynvALwqAQC/KhoA2yoBAN4qEADxKhIABSsAAAcrFwAgKwEAJCsAACYrCwAzKwIAOisAAEorAwBRKwcAZisFAG4rAAB3KwAAeSsBAIArBgCIKwAAjisKAKIrBQCpKwAAqysDALArBQC5KwQAvysBAMMrAADJKwQA0isCANYrCgDkKwIA6CsAAOwrAgDwKwMA+CsRAA0sAQAQLAEAFCwBABksAgAlLAMALCwDADEsAQA1LAEAOCwwAGwsAABuLAAAcywBAHgsAQB7LAAAgSwBAIQsAwCMLAQAmCwCAJwsAACeLAAAoSwAAKQsAQCnLAAAqSwAAK0sAACyLAMAtywAALosCADELCoA8SwBAPQsAQD4LAEA/SwBAAItAgAHLQEACi0AAA0tAgATLQEAFi0AABgtAAAaLQAAHi0AACEtAwAqLQAAMi0AADQtAQA3LQ8ASC0FAFQtAABXLQMAXC0AAF8tCwBsLQAAbi0AAHAtBAB2LRYAjy0BAJMtDwCkLQEApy0EAA=="}],["polars_core",{"t":"EJJJFQQQQCCCQHQQHCCCCCCQQQCCCCCCHCQQQQQQIFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNCCNNNNNNNNNNNNNCNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKRRRMMMMMMMMMMMMMMMMMMMMMMMMFIFKKFFINNNNMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNMMMMNNNNNNNNCNNNNMNNNNNNNNNNNNNNNNNNNNNNNFFFFKFFFNNNNNNMNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPNNNNNNNNNNNNNNNNNNNNNNNNNKKNNNNNNNNNNNNKMKKNMFKFNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNCCPTTTTFPPTTFKFFGFGKPTTTPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFIKKNNNNNNMNNNNCNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNCHNNNNNNNMNNNNNNNNNMMNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNKIIFMNMNNONNNNNHHHNNHOHMNNNNPKKKKKKKKKKKKKKKKKKKKKKKKKIGPRKKRPPPPPPPPPNMMMMMMMNMCNNNMMNNNNNNNMMNMCMMCNNCMMCMMNNNNNNNNNNNNNNNMMMMNMNMMCMMMCMMNNMMMNNNNMNNCMKRRRKKHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHHPPPGNHNNNNNNNNNNNNNNNNNNHNNNNNKHCCCMMHHHHHHHHHKFFNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNOOOONNOOMMNNNNNNNNNNNNNNNNNNNNNNCHHHHHHHPGRKKKGGKPPPIPIFPFPPPPIFFPPFFKGPFFJJGPPPFPFPPPPIFPPPFPPPPFFIPPPPPPPIFPPPIFKPFRRRSIIIKKPIFPPPIFPPPIFPPPIFPPPIFPKRRRPPPPPPPIFPFKPPPPPPPRPPPKPPIPFFRPRIIIIIIFKKKKRGPKPPPIPFPPPPFGIPRFPPPIFPPPIFPPPIFPPPIFPPPGPPRRRRNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNMNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNHNNNNNNNNNNNNNNNNNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMNNMNNFFFKGPFPPPGNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNCNNNCNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNHNNHNNNNNNNHNGPPPPGFHHHPPPPPPFPPPPPPGIGPPPPPPPPNNNNNCNNNNNNNQNNNNNNHNNNNHNQQQQHHNNNNNNNNNNOOOOJJJEEEEEEEGPPNNNNNNNNNHNHHHHHNNHHHHHNNNNNPFPPPPGFPFGNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGKPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNONNONNNNOONIPPFGPFGGFFIPPIPKPPPPPPPPPPPFPPPNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNCNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOOKKHHHHHHHHMMMKMMPPGGPPPPPPPPPPPPFPPPPPPNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNHHHNNNNNNNNNNNNNNNHHIFFKSHHHNNNNNNNNNNNNNNNNOONNNNHNNNNNNNNNNNNNNNNNGFEKIFIEEPFFFKGKFEEEEEPPPEPTTPPPKKKPFPPIIGKEEEPIIIPPEPEEEKEEPPPKKPEPGPPIFEKPPPFGEEIEPKGPPGGFFFPPEPPEEPKFPEPEEPKENNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNOMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHEONNNNNNNNNNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNQNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMMMNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNHNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNONNNNNCNHHNNNMOONNONMMNNNNNNNNNNNNCNNNNNNQQQQONNNNMNNNNNCNCMMNMNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCMNNNNNNNNNNNNNNNOONNNNNNNOOOOKKKMMMFNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNGPPPPGKMMFHHHKKNNHFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNHRTIKKIHNMNMNMNMNMNMNMNPPGEPPKGGPPPFFIKPNNNNNNNNNNCNNNNNCNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNMNMMNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNMNNNNNNNCNNNNNNNNNNNNMNNNNNNNMMNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNMCNNNNMNNNMNNMNNNNNNNMNNNNNMNNNNMNNNNNNNNNNNNNNNNNMMMMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFINNNNNNNNNNNNNNNNNNNNNNKKKRMMNNCMMNNMMNNMMNNMMNNKKMNNMNNPPGNNNNNNNNNNNNNNNNNNNNNNNNTTKKKKKFFFFFNNNHHHHHHHNNNHHEHNNNNNNNNNNNNNNNNNNMNNNNNNNNNHHNNNHHNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNOCNNNNNNNNNNNNNNNNNNNMNNNNNNHHHHNNNNNNNNNNNNNNNNNNNMNNNNMNMHMNNNNNNHENNNMHHHMHNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNHHHHHH","n":["IdBuildHasher","POOL","PROCESS_ID","SINGLE_LOCK","StringCacheHolder","apply_method_all_arrow_series","apply_method_physical_integer","apply_method_physical_numeric","assert_df_eq","chunked_array","config","datatypes","df","disable_string_cache","downcast_as_macro_arg_physical","downcast_as_macro_arg_physical_mut","enable_string_cache","error","export","fmt","frame","functions","hashing","match_arrow_dtype_apply_macro_ca","match_dtype_to_logical_apply_macro","match_dtype_to_physical_apply_macro","prelude","random","scalar","schema","series","testing","using_string_cache","utils","with_match_physical_float_polars_type","with_match_physical_float_type","with_match_physical_integer_polars_type","with_match_physical_integer_type","with_match_physical_numeric_polars_type","with_match_physical_numeric_type","ChunkLenIter","ChunkedArray","ChunkedArrayLayout","Multi","MultiNoNull","Single","SingleNoNull","__clone_box","_can_fast_explode","_sum_as_f64","add","","","","add_to","agg_list","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","append","apply","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_in_place","apply_into_string_amortized","apply_kernel","apply_kernel_cast","apply_mut","","","apply_nonnull_values_generic","apply_to_inner","apply_to_slice","apply_values","apply_views","arg_sort","arg_sort_multiple","arg_unique","arithmetic","as_binary","as_ref","as_ref_dtype","binary_zip_and_apply_amortized","bitand","bitor","bitxor","borrow","","borrow_mut","","boxed_metadata_dyn","builder","cast","cast_and_apply_in_place","cast_unchecked","cast_with_options","checked_div","checked_div_num","chunk_lengths","","chunks","chunks_mut","clear","clone","clone_into","clone_to_uninit","collect","collect_cheap_metadata","comparison","concat_compact","cont_slice","copy_metadata","copy_metadata_cast","data_views","default","deref","","deref_mut","","div","","","","divide","drop","","","drop_nulls","dtype","equal","","equal_missing","","extend","fill_null_with_values","filter","first","first_non_null","float","fmt","","for_each","for_each_amortized","from","","","from_chunk_iter","from_chunk_iter_like","from_chunks","from_chunks_and_dtype","from_iter","","","from_iter_options","from_iter_trusted_length","","from_iter_values","from_iterator_par","from_par_iter","from_slice","from_slice_options","from_trusted_len_iter_rev","from_vec","from_vec_validity","full","full_null","full_null_like","full_null_with_dtype","get","get_any_value","get_any_value_unchecked","get_as_series","get_distinct_count","get_fast_explode_list","get_flags","get_inner","get_max_value","get_min_value","get_object","get_object_unchecked","get_unchecked","group_tuples","group_tuples_perfect","gt","","gt_eq","","has_nulls","head","init","","init_rand","inner_dtype","interior_mut_metadata","into","","into_column","into_decimal","into_decimal_unchecked","into_iter","into_no_null_iter","into_series","is_empty","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_optimal_aligned","is_sorted_flag","iter","iter_chunks","iter_offsets","iter_validities","iterator","join_compact","last","last_non_null","layout","legacy_div","","legacy_div_scalar","","legacy_div_scalar_lhs","","len","","lhs_div","lhs_rem","lhs_sub","limit","lt","","lt_eq","","max","","max_reduce","mean","","median","median_reduce","merge_metadata","metadata","","metadata_arc","metadata_dyn","metadata_mut","metadata_owned_arc","min","","min_max","min_reduce","mmap_slice","","mul","","","","multiply","n_chunks","n_unique","name","new","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_from_vec","new_from_vec_and_validity","new_vec","new_with_dims","none_to_nan","not_equal","","not_equal_missing","","null_count","object","ops","par_iter","","par_iter_indexed","","prod_reduce","prune_empty_chunks","quantile","quantile_reduce","rand_bernoulli","rand_normal","rand_standard_normal","rand_uniform","rechunk","ref_field","rem","","","","remainder","rename","reverse","rolling_map","rolling_map_float","sample_frac","sample_n","scatter_single","scatter_with","set","set_fast_explode","set_fast_explode_list","set_inner_dtype","set_null_count","set_sorted_flag","shift","shift_and_fill","shrink_to_fit","slice","","sort","sort_with","split_at","","std","std_reduce","sub","","","","subtract","sum","","sum_reduce","tail","take","","take_unchecked","","temporal","to_bytes_hashes","to_canonical","to_decimal","to_logical","to_ndarray","","to_owned","to_string_unchecked","to_vec","to_vec_null_aware","true_div","","true_div_scalar","","true_div_scalar_lhs","","try_apply_amortized","try_apply_amortized_generic","try_apply_into_string_amortized","try_apply_nonnull_values_generic","try_from","","try_from_chunk_iter","try_into","","try_zip_and_apply_amortized","type_id","","unique","unpack_series_matching_type","unset_fast_explode_list","value_unchecked","var","var_reduce","vzip","","with_chunk","with_chunk_like","with_chunks","with_name","with_nullable_idx","with_sorted_flag","wrapping_abs","","wrapping_add","","wrapping_add_scalar","","wrapping_floor_div","","wrapping_floor_div_scalar","","wrapping_floor_div_scalar_lhs","","wrapping_mod","","wrapping_mod_scalar","","wrapping_mod_scalar_lhs","","wrapping_mul","","wrapping_mul_scalar","","wrapping_neg","","wrapping_sub","","wrapping_sub_scalar","","wrapping_sub_scalar_lhs","","wrapping_trunc_div","","wrapping_trunc_div_scalar","","wrapping_trunc_div_scalar_lhs","","zip_and_apply_amortized","zip_with","ArithmeticChunked","Out","Scalar","TrueDivOut","legacy_div","legacy_div_scalar","legacy_div_scalar_lhs","true_div","true_div_scalar","true_div_scalar_lhs","wrapping_abs","wrapping_add","wrapping_add_scalar","wrapping_floor_div","wrapping_floor_div_scalar","wrapping_floor_div_scalar_lhs","wrapping_mod","wrapping_mod_scalar","wrapping_mod_scalar_lhs","wrapping_mul","wrapping_mul_scalar","wrapping_neg","wrapping_sub","wrapping_sub_scalar","wrapping_sub_scalar_lhs","wrapping_trunc_div","wrapping_trunc_div_scalar","wrapping_trunc_div_scalar_lhs","BinViewChunkedBuilder","BinaryChunkedBuilder","BooleanChunkedBuilder","ChunkedBuilder","NewChunkedArray","NullChunkedBuilder","PrimitiveChunkedBuilder","StringChunkedBuilder","__clone_box","","","","append_null","","","","","append_option","","append_value","","","","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","deref","","","","deref_mut","","","","drop","","","","finish","","","","","","","","from","","","","from_iter_options","from_iter_values","from_slice","from_slice_options","init","","","","into","","","","list","new","","","","shrink_to_fit","","","","to_owned","","","","try_from","","","","try_into","","","","type_id","","","","vzip","","","","AnonymousListBuilder","AnonymousOwnedListBuilder","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListNullChunkedBuilder","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","append_array","append_empty","","append_iter","","append_iter_values","append_null","","","","","","","","append_opt_array","append_opt_series","","append_opt_slice","append_series","","","","","","","","append_slice","append_trusted_len_iter","","append_values_iter","","borrow","","","","","","","borrow_mut","","","","","","","builder","default","","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","fast_explode","","","","","field","","","","","finish","","","","from","","","","","","","get_list_builder","init","","","","","","","inner_array","","","","","into","","","","","","","new","","","","","","","new_with_values_type","try_from","","","","","","","try_into","","","","","","","type_id","","","","","","","vzip","","","","","","","CastOptions","NonStrict","Overflowing","Strict","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","strict","to_owned","try_from","try_into","type_id","vzip","ChunkedCollectInferIterExt","ChunkedCollectIterExt","collect_ca","collect_ca_like","collect_ca_trusted","collect_ca_trusted_like","collect_ca_trusted_with_dtype","collect_ca_with_dtype","try_collect_ca","try_collect_ca_like","try_collect_ca_trusted","try_collect_ca_trusted_like","try_collect_ca_trusted_with_dtype","try_collect_ca_with_dtype","Canonical","canonical","ChunkedCollectParIterExt","FromParIterWithDtype","collect_ca_with_dtype","from_par_iter_with_dtype","BoolIterNoNull","PolarsIterator","SomeIterator","borrow","","borrow_mut","","deref","","deref_mut","","drop","","from","","init","","into","","into_iter","","new","next","","next_back","","par","size_hint","","try_from","","try_into","","type_id","","vzip","","list","string","Conflict","DEFAULT","DISTINCT_COUNT","FAST_EXPLODE_LIST","","IMMetadata","Keep","Locked","MAX_VALUE","MIN_VALUE","Metadata","MetadataCollectable","MetadataEnv","MetadataFlags","MetadataMerge","MetadataProperties","MetadataReadGuard","MetadataTrait","New","SORTED","SORTED_ASC","SORTED_DSC","Unlocked","__clone_box","","","","","all","","bitand","","bitand_assign","","bitor","","bitor_assign","","bits","","","","bitxor","","bitxor_assign","","borrow","","","","","","","borrow_mut","","","","","","","boxed_upcast","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","collect_cheap_metadata","","complement","","contains","","default","","","","deref","","","","","","","","deref_mut","","","","","","","difference","","disabled","distinct_count","","","distinct_count_opt","drop","","","","","","","empty","","enabled","eq","","experimental_enabled","extend","","fast_explode_list","fast_explode_list_opt","filter_props","filter_props_cast","flags","flags_opt","fmt","","","","","","","","","","","","from","","","","","","","from_bits","","from_bits_retain","","","","from_bits_truncate","","from_iter","","from_name","","get_distinct_count","get_fast_explode_list","","get_flags","","","get_max_value","get_min_value","get_mut","get_sorted_flag","init","","","","","","","insert","","intersection","","intersects","","into","","","","","","","into_iter","","is_all","","is_empty","","","is_sorted","is_sorted_any","is_sorted_ascending","is_sorted_descending","iter","","iter_names","","log","logfile","max_value","","","max_value_opt","merge","min_value","","","min_value_opt","new","not","","read","remove","","set","","set_distinct_count","set_fast_explode_list","","set_flags","set_max_value","set_min_value","set_sorted_ascending","set_sorted_descending","set_sorted_flag","","sorted","sorted_opt","sub","","sub_assign","","symmetric_difference","","take","to_owned","","","","","toggle","","try_from","","","","","","","try_into","","","","","","","try_read","try_write","type_id","","","","","","","union","","upcast","vzip","","","","","","","with_cheap_metadata","","write","ObjectArray","ObjectValueIter","PolarsObject","PolarsObjectSafe","__clone_box","_split_at_unchecked","arr_from_iter","","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_any","","as_any_mut","borrow","borrow_mut","builder","check_bound","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","equal","fmt","from","","full_null","get","get_dtype","if_then_else","if_then_else_broadcast_both","if_then_else_broadcast_false","if_then_else_broadcast_true","init","into","into_iter","is_null_unchecked","is_valid_unchecked","","iter","","len","null_count","registry","set_polars_allow_extension","set_validity","slice","slice_typed","slice_typed_unchecked","slice_unchecked","split_at_boxed","split_at_boxed_unchecked","to_boxed","","to_owned","try_arr_from_iter","","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_from","try_into","type_id","type_name","","validity","value","value_unchecked","","values_iter","","vzip","with_validity","","with_validity_typed","ObjectChunkedBuilder","append_null","","append_option","append_value","","append_value_from_any","borrow","borrow_mut","default","deref","deref_mut","drop","finish","from","init","into","new","to_series","try_from","try_into","type_id","vzip","AnonymousObjectBuilder","BuilderConstructor","ObjectConverter","ObjectRegistry","append_null","append_option","append_value","borrow","borrow_mut","builder_constructor","deref","deref_mut","drop","fmt","from","get_object_builder","get_object_converter","get_object_physical_type","init","into","is_object_builder_registered","physical_dtype","register_object_builder","to_series","try_from","try_into","type_id","vzip","Backward","ChunkAgg","ChunkAnyValue","ChunkApply","ChunkApplyKernel","ChunkBytes","ChunkCast","ChunkCompare","ChunkExpandAtIndex","ChunkExplode","ChunkFillNullValue","ChunkFilter","ChunkFull","ChunkFullNull","ChunkQuantile","ChunkReverse","ChunkRollApply","ChunkSet","ChunkShift","ChunkShiftFill","ChunkSort","ChunkTake","ChunkTakeUnchecked","ChunkUnique","ChunkVar","ChunkZip","FillNullLimit","FillNullStrategy","Forward","FuncRet","IsFirstDistinct","IsLastDistinct","Item","Max","MaxBound","Mean","Min","MinBound","None","One","Some","Zero","__clone_box","_sum_as_f64","apply","apply_kernel","apply_kernel_cast","apply_to_slice","apply_values","arg_sort","arg_sort_multiple","arg_unique","arity","borrow","borrow_mut","cast","cast_unchecked","cast_with_options","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equal","equal_missing","explode","explode_and_offsets","fill_null","fill_null_with_values","filter","float_sorted_arg_max","fmt","from","full","","full_null","gather","get_any_value","get_any_value_unchecked","gt","gt_eq","hash","init","into","is_first_distinct","is_last_distinct","lt","lt_eq","max","mean","median","min","min_max","n_unique","new_from_index","not_equal","not_equal_missing","offsets","quantile","reverse","rolling_map","scatter_single","scatter_with","search_sorted","set","shift","shift_and_fill","sort","","sort_with","std","sum","take","take_unchecked","to_byte_slices","to_owned","try_from","try_into","type_id","unique","var","vzip","zip","zip_with","BinaryFnMut","Ret","","","TernaryFnMut","UnaryFnMut","apply_binary_kernel_broadcast","apply_binary_kernel_broadcast_owned","binary","binary_elementwise","binary_elementwise_for_each","binary_elementwise_into_string_amortized","binary_elementwise_values","binary_mut_values","binary_mut_with_options","binary_owned","binary_to_series","binary_unchecked_same_type","broadcast_binary_elementwise","broadcast_binary_elementwise_values","broadcast_try_binary_elementwise","ternary_elementwise","try_binary","try_binary_elementwise","try_binary_mut_with_options","try_binary_unchecked_same_type","try_ternary_elementwise","try_unary_elementwise","try_unary_elementwise_values","try_unary_mut_with_options","unary_elementwise","unary_elementwise_values","unary_kernel","unary_kernel_owned","unary_mut_values","unary_mut_with_options","float_arg_max_sorted_ascending","float_arg_max_sorted_descending","_update_gather_sorted_flag","check_bounds_ca","check_bounds_nulls","Any","Left","Right","SearchSortedSide","__clone_box","binary_search_ca","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","lower_bound_chunks","to_owned","try_from","try_into","type_id","vzip","SlicedArray","_broadcast_bools","arg_bottom_k","arg_sort_multiple","options","slice_typed","slice_typed_unchecked","_arg_bottom_k","_get_rows_encoded","_get_rows_encoded_arr","_get_rows_encoded_ca","_get_rows_encoded_ca_unordered","_get_rows_encoded_compat_array","_get_rows_encoded_unordered","encode_rows_vertical_par_unordered","encode_rows_vertical_par_unordered_broadcast_nulls","SlicedArray","SortMultipleOptions","SortOptions","__clone_box","","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","descending","","drop","","eq","","equivalent","","","","","","fmt","","from","","","","hash","","init","","into","","maintain_order","","multithreaded","","new","","nulls_last","","slice_typed","slice_typed_unchecked","to_owned","","try_from","","try_into","","type_id","","vzip","","with_maintain_order","","with_multithreaded","","with_nulls_last","","with_nulls_last_multi","with_order_descending","","with_order_descending_multi","with_order_reversed","","conversion","datetime_to_timestamp_ms","datetime_to_timestamp_ns","datetime_to_timestamp_us","force_async","get_file_prefetch_size","get_rg_prefetch_size","verbose","Any","AnyValue","Array","ArrayCollectIterExt","ArrayFromIter","ArrayFromIterDtype","ArrowDataType","ArrowTimeUnit","AsRefDataType","Binary","","","BinaryChunked","BinaryOffset","BinaryOffsetChunked","BinaryOffsetType","BinaryOwned","BinaryType","BinaryView","Boolean","","","BooleanChunked","BooleanType","CatIter","Categorical","","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","CategoricalOwned","CategoricalType","CompatLevel","DTYPE_ENUM_KEY","DTYPE_ENUM_VALUE","DataType","Date","Date32","Date64","DateType","Datetime","DatetimeType","Decimal","","","Decimal256","DecimalChunked","DecimalType","Dictionary","Duration","","DurationType","Enum","","EnumOwned","Extension","FalseT","Field","FieldRef","FixedSizeBinary","FixedSizeList","Float","Float16","Float32","","","Float32Chunked","Float32Type","Float64","","","Float64Chunked","Float64Type","GetAnyValue","Global","GlobalRevMapMerger","HasViews","HashMap","","IDX_DTYPE","IdxArr","IdxCa","IdxType","InitHashMaps","InitHashMaps2","Int","Int128Chunked","Int128Type","Int16","","","Int16Chunked","Int16Type","Int32","","","Int32Chunked","Int32Type","Int64","","","Int64Chunked","Int64Type","Int8","","","Int8Chunked","Int8Type","Interval","IntoScalar","IsNested","IsObject","IsStruct","LargeBinary","LargeList","LargeUtf8","Lexical","List","","","ListChunked","ListType","Local","Logical","LogicalType","Map","Microsecond","Microseconds","Millisecond","Milliseconds","Nanosecond","Nanoseconds","Native","Null","","","NumericNative","Object","","ObjectChunked","ObjectOwned","ObjectType","OwnedObject","OwnedPhysical","Physical","","PlHashMap","PlHashSet","PlIdHashMap","PlIndexMap","PlIndexSet","PlRandomState","PlSmallStr","PolarsDataType","PolarsFloatType","PolarsIntegerType","PolarsNumericType","PolarsType","RevMapping","Second","StaticArray","Str","String","","StringChunked","StringOwned","StringType","Struct","Time","Time32","Time64","TimeType","TimeUnit","TimeZone","Timestamp","TrueDivPolarsType","TrueT","UInt16","","","UInt16Chunked","UInt16Type","UInt32","","","UInt32Chunked","UInt32Type","UInt64","","","UInt64Chunked","UInt64Type","UInt8","","","UInt8Chunked","UInt8Type","Union","Unknown","","UnknownKind","Utf8","Utf8View","ValueIterT","ValueT","ZeroablePhysical","ZeroableValueT","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","_can_fast_explode","add","","","","","","","","","","add_to","","","","","","","","","","","agg_list","","","","","all","all_kleene","amortized_iter","amortized_iter_with_name","any","any_kleene","apply","","","","","apply_amortized","apply_amortized_generic","apply_as_ints","","apply_kernel","","","apply_kernel_cast","","","apply_mut","","apply_to_inner","apply_to_slice","","","","","apply_values","","","","","apply_views","arg_sort","","","","arg_sort_multiple","","","","arg_unique","","","","arr_from_iter","arr_from_iter_trusted","arr_from_iter_trusted_with_dtype","arr_from_iter_with_dtype","as_binary","as_borrowed","as_ref","","as_ref_dtype","as_slice","binary_zip_and_apply_amortized","bitand","","bitor","","bitxor","","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","boxed","call_categorical_merge_operation","cast","","","cast_leaf","cast_unchecked","","","","","cast_with_options","","","","","","","categorical","checked_div","","","","","","","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","coerce","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","contains_categoricals","contains_objects","contains_views","create_enum_dtype","default","","","","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","div","divide","","","","","","","","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","dtype","","","","","eq","","","","","","","","","eq_missing","equal","","","","","","equal_missing","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","explode_and_offsets","field","fill_null_with_values","","filter","","","finish","fmt","","","","","","","","","","","","","","","","for_each_amortized","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_arrow","from_iter","","","","","","","","","from_iter_options","","","","from_iter_trusted_length","","","","","","","","","","from_iter_values","","","","from_par_iter","","","","","","","from_par_iter_with_dtype","from_slice","","","","from_slice_options","","","","from_trusted_len_iter_rev","from_vec","from_zeroable_vec","full","","","","","","","full_null","","","","","","","full_null_with_dtype","get","get_any_value","","","","","","","","","get_any_value_unchecked","","","","","","","","","get_as_series","get_dtype","","","","","","","","","","","","","","","","","","","","","","","","get_inner","get_object","get_object_unchecked","get_str","get_unchecked","","get_values_size","","","group_tuples","","","","","","gt","","","","","","gt_eq","","","","","","hash","","","","","","","hash_impl","idx","implode","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","inner_dtype","","","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_column","into_decimal","into_decimal_unchecked","into_iter","","","","","","into_scalar","into_series","","into_static","is_array","is_binary","is_bool","is_boolean","is_categorical","is_date","is_decimal","is_enum","is_float","","is_integer","","is_known","is_list","is_logical","is_nan","is_nested","","is_nested_null","","is_null","","is_numeric","","is_object","is_ord","is_primitive","is_signed_integer","","is_string","is_struct","is_temporal","is_unsigned_integer","","is_view","iter","iter_offsets","last","leaf_dtype","lt","","","","","","lt_eq","","","","","","make_categoricals_compatible","make_list_categoricals_compatible","matches_schema_type","materialize","max","max_reduce","","","mean","median","","median_reduce","","merge_dtypes","min","min_reduce","","","mmap_slice","mul","multiply","","","","","","","","n_unique","","name","","new","","","","","","","","","","","","","","new_empty","new_from_index","","","","","","new_from_vec","new_from_vec_and_validity","new_logical","newest","not","","not_equal","","","","","","not_equal_missing","","","","","","offsets","oldest","par_iter","","par_iter_indexed","","partial_cmp","","physical","precision","","quantile","","quantile_reduce","","rand_bernoulli","remainder","","","","","","","","reverse","","","","","","revmap","scale","","scatter_single","","","scatter_with","","","set","","","set_fast_explode","set_inner_dtype","set_name","shift","","","","","","shift_and_fill","","","","","","sort","","","","sort_with","","","","std_reduce","","str_value","strict_cast","string_cache","sub","subtract","","","","","","","","sum","sum_reduce","","take_unchecked","","","","to_arrow","","","to_arrow_field","to_ascii","to_decimal","to_logical","to_logical_type","to_ndarray","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_scale","","to_string","","","to_string_unchecked","tot_eq","try_apply_amortized","try_apply_amortized_generic","try_arr_from_iter","try_arr_from_iter_trusted","try_arr_from_iter_trusted_with_dtype","try_arr_from_iter_with_dtype","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_extract","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_strict_cast","try_to_arrow","try_to_compact_string","","","try_zip_and_apply_amortized","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","underlying_physical_type","unique","","","","value","value_unchecked","value_within_range","values_iter","var_reduce","","vec_hash","","","","","","","","","","","","","","","","vec_hash_combine","","","","","","","","","","","","","","","","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","with_capacity","","","with_nullable_idx","with_validity_typed","zero_sum","zip_and_apply_amortized","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","Global","GlobalRevMapMerger","Lexical","Local","Physical","RevMapping","__clone_box","_can_fast_unique","_with_fast_unique","append","","append_null","append_value","arg_sort","borrow","","","","borrow_mut","","","","call_categorical_merge_operation","cast_with_options","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drain_iter_and_finish","drop","","","","dtype","equal","","","equal_missing","","","finish","","","from","","","","from_cats_and_rev_map_unchecked","from_global_indices_unchecked","from_string_to_enum","full_null","get_any_value","get_any_value_unchecked","get_rev_map","gt","","","gt_eq","","","init","","","","into","","","","into_column","into_iter","into_series","is_empty","is_enum","iter_str","len","lt","","","lt_eq","","","make_categoricals_compatible","make_list_categoricals_compatible","max_reduce","merge_map","min_reduce","n_unique","name","new","","next","not_equal","","","not_equal_missing","","","null_count","physical","register_value","revmap","size_hint","sort","sort_with","string_cache","to_arrow","to_enum","to_global","to_local","to_owned","try_from","","","","try_into","","","","type_id","","","","unique","uses_lexical_ordering","value_counts","vzip","","","","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","__clone_box","","borrow","","borrow_mut","","build_local","clone","","clone_into","","clone_to_uninit","","default","","deref","","deref_mut","","drop","","eq","find","fmt","","from","","get","get_categories","get_optional","init","","into","","is_global","is_local","len","same_src","to_owned","","try_from","","try_into","","type_id","","vzip","","StringCacheHolder","borrow","borrow_mut","default","deref","deref_mut","disable_string_cache","drop","","enable_string_cache","from","hold","init","into","try_from","try_into","type_id","using_string_cache","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","CategoricalRemappingWarning","ColumnNotFound","ComputeError","Context","Duplicate","Err","ErrString","IO","InvalidOperation","MapWithoutReturnDtypeWarning","NoData","Ok","OutOfBounds","PolarsError","PolarsResult","PolarsWarning","SQLInterface","SQLSyntax","SchemaFieldNotFound","SchemaMismatch","ShapeMismatch","StringCacheMismatch","StructFieldNotFound","UserWarning","as_ref","borrow","","borrow_mut","","constants","deref","","","deref_mut","","drop","","feature_gated","fmt","","","from","","","get_warning_function","init","","into","","map_err","new_static","polars_bail","polars_ensure","polars_err","polars_warn","set_warning_function","to_compute_err","to_string","try_from","","try_into","","try_to_compact_string","type_id","","vzip","","error","","msg","","FALSE","LENGTH_LIMIT_MSG","TRUE","_boost_hash_combine","arrow","chrono","num","once_cell","rayon","regex","FloatFmt","Full","Mixed","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","fmt_decimal","from","get_decimal_separator","get_float_fmt","get_float_precision","get_thousands_separator","get_trim_decimal_zeros","init","into","set_decimal_separator","set_float_fmt","set_float_precision","set_thousands_separator","set_trim_decimal_zeros","to_owned","try_from","try_into","type_id","vzip","Any","DataFrame","First","Ignore","Last","None","NullStrategy","PhysRecordBatchIter","Propagate","RecordBatchIter","UniqueKeepStrategy","__clone_box","","","_add_columns","_add_series","_apply_columns","_apply_columns_par","_filter_seq","_new_no_checks_impl","_select_impl","_select_impl_unchecked","_select_with_schema_impl","_slice_and_realloc","_to_metadata","add","","","align_chunks","apply","apply_at_idx","as_single_chunk","as_single_chunk_par","borrow","","","","","borrow_mut","","","","","chunk_lengths","clear","clone","","","clone_into","","","clone_to_uninit","","","column","","columns","default","","deref","","","","","deref_mut","","","","","div","","","drop","","","","","","drop_in_place","drop_many","drop_many_amortized","drop_nulls","dtypes","empty","empty_with_arrow_schema","empty_with_schema","eq","","equals","equals_missing","equivalent","","","estimated_size","explode","","explode_impl","extend","fields","fill_null","filter","fmt","","","","from","","","","","from_iter","","from_rows","from_rows_and_schema","from_rows_iter_and_schema","get","get_column_index","get_column_names","get_column_names_owned","get_column_names_str","get_columns","get_columns_mut","get_row","get_row_amortized","get_row_amortized_unchecked","get_supertype","group_by","","group_by_stable","group_by_with_series","hash","hash_rows","head","height","hstack","hstack_mut","hstack_mut_unchecked","index","","","","","","","","init","","","","","insert_column","into","","","","","into_iter","","is_duplicated","is_empty","is_unique","iter","iter_chunks","","iter_chunks_physical","len","materialized_column_iter","max_horizontal","mean_horizontal","min_horizontal","mul","","","n_chunks","","new","new_no_checks","new_no_length_checks","new_with_broadcast","new_with_broadcast_no_checks","next","","null_count","par_materialized_column_iter","partition_by","partition_by_stable","pipe","pipe_mut","pipe_with_args","pop","ptr_equal","rem","","","rename","replace","replace_column","replace_or_add","reverse","row","sample_frac","sample_n","sample_n_literal","schema","schema_equal","select","select_at_idx","select_by_range","select_columns","select_physical","select_with_schema","select_with_schema_unchecked","set_column_names","shape","shift","should_rechunk","shrink_to_fit","size","size_hint","","slice","","slice_par","sort","sort_in_place","split_at","","split_chunks","split_chunks_by_n","sub","","","sum_horizontal","tail","take","take_columns","take_unchecked","take_unchecked_impl","to_ndarray","to_owned","","","to_string","transpose","transpose_impl","try_apply","try_apply_at_idx","try_from","","","","","","","try_from_rows_iter_and_schema","try_get_column_index","try_into","","","","","try_to_compact_string","type_id","","","","","unique","unique_impl","unique_stable","vstack","vstack_mut","vstack_mut_unchecked","vzip","","","","","width","with_column","with_column_and_schema","with_column_unchecked","with_row_index","with_row_index_mut","Column","IntoColumn","Scalar","ScalarColumn","Series","__clone_box","","add","","","","agg_first","agg_last","agg_list","agg_max","agg_mean","agg_median","agg_min","agg_n_unique","agg_quantile","agg_sum","agg_var","append","arg_sort","as_materialized_series","","as_scalar_column","as_series","as_single_value_series","binary","binary_offset","bit_repr","bitand","","","bitor","","bitxor","","bool","borrow","","borrow_mut","","cast","","cast_unchecked","","cast_with_options","","categorical","clear","clone","","clone_into","","clone_to_uninit","","decimal","default","deref","","deref_mut","","div","","","","divide","drop","","drop_nulls","dtype","","eq","equal","equal_missing","equals","equals_missing","explode","extend","extend_constant","f32","f64","field","fill_null","filter","fmt","","from","","","","from_single_value_series","full_null","gather_every","get","get_data_ptr","get_flags","get_metadata","get_object","get_unchecked","gt","gt_eq","has_nulls","","head","i16","i32","i64","i8","idx","init","","into","","into_column","","","into_frame","into_materialized_series","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_sorted_flag","len","","list","lt","lt_eq","max_reduce","min_reduce","mul","","","","name","","new","","new_empty","","new_from_index","new_scalar","not_equal","not_equal_missing","null_count","phys_iter","product","rechunk","rem","","","","rename","reshape_list","resize","reverse","sample_frac","sample_n","set_sorted_flag","shift","shrink_to_fit","shuffle","slice","sort","split_at","str","strict_cast","","sub","","","","tail","take","take_materialized_series","","take_slice","take_slice_unchecked","take_unchecked","to_owned","","to_physical_repr","to_series","try_from","","try_into","","type_id","","u16","u32","u64","u8","unique","unique_stable","vec_hash","vec_hash_combine","vzip","","with_name","wrapping_trunc_div_scalar","zip_with","zip_with_same_type","UnpivotArgsIR","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","index","init","into","on","to_owned","try_from","try_into","type_id","value_name","variable_name","vzip","BorrowIdxItem","Count","First","GroupBy","GroupByMethod","Groups","GroupsIdx","GroupsIndicator","GroupsProxy","GroupsProxyIter","GroupsProxyParIter","GroupsSlice","Idx","","IdxItem","Implode","IntoGroupsProxy","Last","Max","Mean","Median","Min","NUnique","NanMax","NanMin","Quantile","Slice","","SlicedGroups","Std","Sum","Var","__clone_box","","","","agg_list","aggregations","all","apply","as_list_chunked","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","count","default","","deref","","","","","","","","","deref_mut","","","","","","","","df","drive_unindexed","drop","","","","","","","","","eq","","equivalent","","","","","","expr","first","","","first_mut","fmt","","","","","fmt_group_by_column","from","","","","","","","","","","","","from_iter","from_par_iter","get","get_groups","get_groups_mut","group_count","group_tuples","","groups","idx_mut","init","","","","","","","","into","","","","","","","","into_idx","into_iter","","","into_par_iter","","","is_empty","","is_sorted_flag","iter","","keys","keys_sliced","last","len","","max","mean","median","min","n_unique","new","","next","nth","par_apply","par_iter","","quantile","select","slice","sort","","std","sum","take_group_firsts","take_group_lasts","take_groups","take_groups_mut","to_owned","","","","to_string","try_from","","","","","","","","try_into","","","","","","","","try_to_compact_string","type_id","","","","","","","","unroll","unwrap_idx","unwrap_slice","var","vzip","","","","","","","","include_nulls","groups","rolling","AggList","TakeExtremum","_agg_helper_idx","_agg_helper_idx_no_null","_agg_helper_slice","_agg_helper_slice_no_null","_rolling_apply_agg_window_no_nulls","_rolling_apply_agg_window_nulls","_slice_from_offsets","_use_rolling_kernels","agg_list","take_max","take_min","PhysicalAggExpr","evaluate","root_name","All","","AnyValueBuffer","AnyValueBufferTrusted","Boolean","","Float32","","Float64","","Int32","","Int64","","Null","","Row","String","","UInt32","","UInt64","","__clone_box","","","add","add_unchecked_borrowed_physical","add_unchecked_owned_physical","borrow","","","borrow_mut","","","clone","","","clone_into","","","clone_to_uninit","","","coerce_dtype","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","fmt","from","","","","","infer_schema","init","","","into","","","into_series","","new","","","reset","","rows_to_schema_first_non_null","rows_to_schema_supertypes","rows_to_supertypes","to_owned","","","try_from","","","try_into","","","type_id","","","vzip","","","concat_df_diagonal","concat_df_horizontal","IdBuildHasher","IdHasher","IdxHash","VecHash","_HASHMAP_INIT_SIZE","_boost_hash_combine","_df_rows_to_hashes_threaded_vertical","_hash_binary_array","borrow","","borrow_mut","","default","deref","","deref_mut","","drop","","finish","fmt","from","","hash","","idx","init","","into","","populate_multiple_key_hashmap","try_from","","try_into","","type_id","","vec_hash","","vec_hash_combine","","vzip","","write","write_i32","write_i64","write_u32","write_u64","Ambiguous","Arc","ArithmeticChunked","ArrayCollectIterExt","ArrayRef","ArrowField","ArrowSchema","BinaryChunkedBuilder","BooleanChunkedBuilder","C","CatIter","CategoricalChunked","CategoricalChunkedBuilder","CategoricalMergeOperation","CategoricalOrdering","ChunkAggSeries","ChunkId","ChunkedArray","ChunkedBuilder","ChunkedCollectInferIterExt","ChunkedCollectIterExt","Column","ColumnNotFound","ComputeError","Context","DataFrame","Duplicate","EMPTY","EMPTY_REF","Earliest","Err","Fortran","FromData","FromDataBinary","FromDataUtf8","Global","GlobalRevMapMerger","Higher","IO","IdxArr","IdxSize","IndexOrder","IndexToUsize","IntoColumn","IntoSeries","IntoVec","InvalidOperation","LargeBinaryArray","LargeListArray","LargeStringArray","Latest","Lexical","LhsNumOps","Linear","ListBinaryChunkedBuilder","ListBooleanChunkedBuilder","ListBuilderTrait","ListFromIter","ListPrimitiveChunkedBuilder","ListStringChunkedBuilder","Local","Lower","Midpoint","NamedFrom","NamedFromOwned","Nearest","NewChunkedArray","NoData","NonExistent","Null","","NullableChunkId","NullableIdxSize","NumOpsDispatch","NumOpsDispatchChecked","Ok","OutOfBounds","Physical","PlSmallStr","PolarsError","PolarsIterator","PolarsObject","PolarsResult","PrimitiveChunkedBuilder","Quantile","QuantileAggSeries","QuantileInterpolOptions","Raise","","RevMapping","RollingFnParams","RollingOptionsFixedWindow","RollingQuantileParams","RollingVarParams","SQLInterface","SQLSyntax","Scalar","SchemaFieldNotFound","SchemaMismatch","Series","SeriesTrait","ShapeMismatch","SlicedArray","StringCacheHolder","StringCacheMismatch","StringChunkedBuilder","StructFieldNotFound","UniqueKeepStrategy","UnpivotArgsIR","Var","VarAggSeries","VecHash","__clone_box","","","","","","","","","","","","allocator","as_fd","as_ptr","as_raw_fd","as_ref","","","","","as_str","assume_init","","borrow","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","call_categorical_merge_operation","cause","center","checked_div","checked_div_num","clone","","","","","","","","","","","","clone_into","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","cmp","","collect_arr","collect_arr_trusted","collect_arr_trusted_with_dtype","collect_arr_with_dtype","compare","","context","context_trace","convert_inner_type","datatypes","ddof","decrement_strong_count","decrement_strong_count_in","default","","","","","","","","","default_arrays","deref","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","description","df","downcast","downcast_unchecked","downgrade","drop","","","","","","","","","","","","","","","dtype","","eq","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","extract","finish","flush","fmt","","","","","","","","","","","","","","","","","fn_params","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_data_default","from_data_unchecked_default","","from_iter","","","","","","","","","from_iter_binary_trusted_len","from_iter_binview_trusted_len","from_iter_bool_trusted_len","from_iter_primitive_trusted_len","from_iter_utf8_trusted_len","from_par_iter","from_raw","from_raw_in","from_static","from_str","","from_string","from_vec","ge","get_mut","get_mut_unchecked","get_unchecked","gt","hash","","","","","","idx","increment_strong_count","increment_strong_count_in","indexes_to_usizes","init","","","","","","","","","","","","","","inner","inner_mut","interpol","into","","","","","","","","","","","","","","into_column","into_inner","into_raw","into_raw_with_allocator","into_series","into_string","is_null","is_null_idx","is_nullable","is_read_vectored","is_valid_bit_pattern","is_write_vectored","iter_names_and_dtypes","le","list","lt","make_categoricals_compatible","make_list_categoricals_compatible","make_mut","max_reduce","","median_reduce","metadata","min_periods","min_reduce","","name","ne","negative_to_usize","new","","","new_cyclic","new_in","new_uninit","new_uninit_in","new_uninit_slice","new_uninit_slice_in","new_zeroed","new_zeroed_in","new_zeroed_slice","new_zeroed_slice_in","null","","","partial_cmp","","pin","pin_in","polars_bail","polars_ensure","polars_err","polars_warn","prob","prod_reduce","","provide","ptr_eq","quantile_reduce","read","read_buf","read_to_end","read_to_string","read_vectored","revmap","seek","slice","slice_typed","slice_typed_unchecked","source","std_reduce","store","string_cache","strong_count","sum_reduce","","to_opt","to_owned","","","","","","","","","","","","to_string","","","try_collect_arr","try_collect_arr_trusted","try_collect_arr_trusted_with_dtype","try_collect_arr_with_dtype","try_from","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","try_negative_to_usize","try_new","try_new_in","try_new_uninit","try_new_uninit_in","try_new_zeroed","try_new_zeroed_in","try_pin","try_pin_in","try_to_compact_string","","","try_unwrap","type_id","","","","","","","","","","","","","","unwrap_or_clone","utf8","var_reduce","vzip","","","","","","","","","","","","","","weak_count","weights","window_size","with_metadata","wrap_msg","write","write_char","write_fmt","write_str","write_vectored","error","","msg","","FromData","FromDataBinary","FromDataUtf8","from_data_default","from_data_unchecked_default","","AnonymousBuilder","borrow","borrow_mut","deref","deref_mut","drop","finish","from","init","into","is_empty","new","offsets","push","push_empty","push_multiple","push_null","push_opt","take_offsets","try_from","try_into","type_id","vzip","MutableNullArray","__clone_box","as_any","as_box","as_mut_any","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","dtype","extend_nulls","fmt","from","init","into","len","new","push_null","reserve","shrink_to_fit","to_owned","try_from","try_into","type_id","validity","vzip","CategoricalOrdering","Global","Lexical","Local","Physical","RevMapping","SlicedArray","slice_typed","slice_typed_unchecked","StringCacheHolder","disable_string_cache","enable_string_cache","using_string_cache","BinaryFromIter","Utf8FromIter","from_values_iter","","set_global_random_seed","Scalar","__clone_box","as_any_value","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","dtype","eq","fmt","from","","","","","","","","","","","init","into","into_column","into_series","is_nan","is_null","new","reduce","to_owned","try_from","try_into","type_id","update","value","vzip","mean_reduce","DataType","IS_ARROW","Schema","SchemaExt","SchemaNamesAndDtypes","SchemaRef","ensure_matching_schema","from","from_arrow_schema","","get_field","","iter_fields","","iter_names_and_dtypes","","to_arrow","","to_supertype","","try_get_field","","Ascending","","BitRepr","ChunkCompare","Descending","","IntoSeries","IsSorted","","Large","Not","","Series","SeriesIter","SeriesPhysIter","SeriesTrait","Small","__clone_box","","_sum_as_f64","","_try_from_arrow_unchecked","_try_from_arrow_unchecked_with_md","add","","","","amortized_iter","append","arg_sort","","arg_unique","","arithmetic","array_ref","as_any","as_any_mut","","as_list","as_mut","as_ref","","as_single_ptr","","","binary","binary_offset","bitand","","bitor","","bitxor","","bool","borrow","","","","borrow_mut","","","","boxed_metadata","","cast","","cast_unchecked","cast_with_options","categorical","checked_div","","","checked_div_num","chunk_lengths","","chunks","chunks_mut","","clear","clone","","clone_inner","clone_into","","clone_to_uninit","","compute_len","decimal","default","deref","","","","","deref_mut","","","","div","","","","dot","drop","","","","drop_nulls","","dtype","","eq","","equal","","","equal_missing","","","equals","equals_missing","equivalent","","","estimated_size","explode","extend","extend_constant","f32","f64","field","","fill_null","filter","fmt","","","fmt_list","from","","","","","from_any_values","from_any_values_and_dtype","from_arrow","from_arrow_chunks","from_chunks_and_dtype_unchecked","from_iter","","","","","","","","","","","","","","","","","","","","","","","","","from_vec","","","","","","","full_null","gather_every","get","get_data_ptr","get_flags","get_leaf_array","get_metadata","","get_object","","get_object_chunked_unchecked","","get_unchecked","","gt","","","gt_eq","","","has_nulls","hash","head","i16","i32","i64","i8","idx","implementations","implode","init","","","","into","","","","into_column","into_frame","into_iter","into_series","","is_empty","","is_finite","is_infinite","is_nan","is_not_nan","is_not_null","is_null","is_series","","","is_sorted_flag","iter","iter_chunks","len","","limit","","list","lt","","","lt_eq","","","max","max_reduce","","mean","","mean_reduce","median","","median_reduce","","min","min_reduce","","mul","","","","n_chunks","","","n_unique","","name","new","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","new_empty","new_from_index","new_null","next","not_equal","","","not_equal_missing","","","null","null_count","ops","phys_iter","product","quantile_reduce","","rechunk","rem","","","rename","","reshape_list","reverse","","rolling_map","","sample_frac","sample_n","select_chunk","set_sorted_flag","shift","shrink_to_fit","","","shuffle","size_hint","slice","","sort","sort_with","","split_at","","std","","std_reduce","","str","str_value","strict_cast","sub","","","","sum","sum_reduce","","","tail","take","take_slice","take_slice_unchecked","take_unchecked","take_unchecked_from_slice","to_arrow","to_float","to_owned","","to_physical_repr","to_string","try_add_owned","try_from","","","","","","","","try_into","","","","try_mul_owned","try_new","try_set_metadata","try_sub_owned","try_to_compact_string","type_id","","","","u16","u32","u64","u8","unique","","unique_stable","unpack","var","","var_reduce","","vzip","","","","with_name","wrapping_trunc_div_scalar","zip_with","AmortSeries","ArrayBox","__clone_box","as_ref","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deep_clone","deref","deref_mut","drop","from","init","into","new","swap","to_owned","try_from","try_into","type_id","vzip","with_array","LhsNumOps","NumOpsDispatch","NumOpsDispatchInner","Output","add","add_to","","","checked","div","divide","","","mul","multiply","","","rem","remainder","","","sub","subtract","","","NumOpsDispatchChecked","NumOpsDispatchCheckedInner","checked_div","","","checked_div_num","","","Drop","Ignore","NullBehavior","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","init","into","to_owned","try_from","try_into","type_id","vzip","ALLOW_IMPLODE_LIST","ALLOW_PRIMITIVE_TO_STRING","Container","CustomIterTools","CustomIterToolsSized","FromTrustedLenIterator","IntoVec","NoNull","SuperTypeFlags","SuperTypeOptions","TrustMyLength","Wrap","__clone_box","","","_set_partition_size","accumulate_dataframes_horizontal","accumulate_dataframes_vertical","accumulate_dataframes_vertical_unchecked","accumulate_dataframes_vertical_unchecked_optional","align_chunks_binary","align_chunks_ternary","all","allow_implode_list","allow_primitive_to_string","any_values_to_supertype","any_values_to_supertype_and_n_dtypes","arrow","binary_concatenate_validities","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","borrow_mut","","","","","chunk_lengths","clone","","","clone_into","","","clone_to_uninit","","","coalesce_nulls","coalesce_nulls_columns","collect_reversed","collect_trusted","complement","concat_df","concat_df_unchecked","contains","default","","deref","","","","","","","deref_mut","","","","","","difference","drop","","","","","dtypes_to_schema","dtypes_to_supertype","empty","eq","","","equivalent","","","","","","","","","extend","flags","flatten","fmt","","","","","","from","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","","","from_iter_trusted_length","","","from_name","from_par_iter","from_trusted_len_iter_rev","","get_supertype","get_supertype_with_options","get_time_units","handle_casting_failures","hash","","","init","","","","","insert","intersection","intersects","into","","","","","into_inner","into_iter","","into_vec","","is_all","is_empty","iter","iter_chunks","iter_names","len","materialize_dyn_int","n_chunks","new","","new_repeat_n","next","next_back","not","operation_exceeded_idxsize_msg","rayon","remove","set","size_hint","slice","slice_slice","split","split_and_flatten","split_at","split_df_as_ref","sub","sub_assign","symmetric_difference","to_owned","","","toggle","trust_my_length","try_from","","","","","try_get_supertype","try_into","","","","","type_id","","","","","union","vzip","","","","","with_unstable_series","cap_and_offsets","flatten_df_iter","flatten_nullable","flatten_par","flatten_series"],"q":[[0,"polars_core"],[40,"polars_core::chunked_array"],[445,"polars_core::chunked_array::arithmetic"],[473,"polars_core::chunked_array::builder"],[581,"polars_core::chunked_array::builder::list"],[735,"polars_core::chunked_array::cast"],[764,"polars_core::chunked_array::collect"],[778,"polars_core::chunked_array::float"],[780,"polars_core::chunked_array::from_iterator_par"],[784,"polars_core::chunked_array::iterator"],[821,"polars_core::chunked_array::iterator::par"],[823,"polars_core::chunked_array::metadata"],[1109,"polars_core::chunked_array::object"],[1186,"polars_core::chunked_array::object::builder"],[1209,"polars_core::chunked_array::object::registry"],[1237,"polars_core::chunked_array::ops"],[1363,"polars_core::chunked_array::ops::arity"],[1399,"polars_core::chunked_array::ops::float_sorted_arg_max"],[1401,"polars_core::chunked_array::ops::gather"],[1404,"polars_core::chunked_array::ops::search_sorted"],[1434,"polars_core::chunked_array::ops::sort"],[1441,"polars_core::chunked_array::ops::sort::arg_bottom_k"],[1442,"polars_core::chunked_array::ops::sort::arg_sort_multiple"],[1450,"polars_core::chunked_array::ops::sort::options"],[1527,"polars_core::chunked_array::temporal"],[1528,"polars_core::chunked_array::temporal::conversion"],[1531,"polars_core::config"],[1535,"polars_core::datatypes"],[2995,"polars_core::datatypes::categorical"],[3137,"polars_core::datatypes::categorical::revmap"],[3191,"polars_core::datatypes::categorical::string_cache"],[3210,"polars_core::datatypes::revmap"],[3216,"polars_core::datatypes::string_cache"],[3220,"polars_core::error"],[3287,"polars_core::error::PolarsError"],[3291,"polars_core::error::constants"],[3294,"polars_core::export"],[3301,"polars_core::fmt"],[3332,"polars_core::frame"],[3616,"polars_core::frame::column"],[3826,"polars_core::frame::explode"],[3855,"polars_core::frame::group_by"],[4094,"polars_core::frame::group_by::GroupByMethod"],[4095,"polars_core::frame::group_by::GroupsProxy"],[4097,"polars_core::frame::group_by::aggregations"],[4110,"polars_core::frame::group_by::expr"],[4113,"polars_core::frame::row"],[4210,"polars_core::functions"],[4212,"polars_core::hashing"],[4260,"polars_core::prelude"],[4889,"polars_core::prelude::PolarsError"],[4893,"polars_core::prelude::default_arrays"],[4899,"polars_core::prelude::list"],[4922,"polars_core::prelude::null"],[4953,"polars_core::prelude::revmap"],[4959,"polars_core::prelude::slice"],[4962,"polars_core::prelude::string_cache"],[4966,"polars_core::prelude::utf8"],[4970,"polars_core::random"],[4971,"polars_core::scalar"],[5011,"polars_core::scalar::reduce"],[5012,"polars_core::schema"],[5034,"polars_core::series"],[5455,"polars_core::series::amortized_iter"],[5479,"polars_core::series::arithmetic"],[5504,"polars_core::series::arithmetic::checked"],[5512,"polars_core::series::ops"],[5539,"polars_core::utils"],[5750,"polars_core::utils::flatten"],[5755,"dyn_clone::sealed"],[5756,"num_traits"],[5757,"num_traits::cast"],[5758,"polars_error"],[5759,"polars_core::series::arithmetic::borrowed"],[5760,"polars_core::frame::group_by::proxy"],[5761,"core::option"],[5762,"core::iter::traits::iterator"],[5763,"polars_utils::pl_str"],[5764,"core::ops::function"],[5765,"core::marker"],[5766,"alloc::string"],[5767,"polars_core::datatypes::dtype"],[5768,"polars_arrow::array::binview::view"],[5769,"polars_core::datatypes::aliases"],[5770,"polars_core::chunked_array::metadata::md_trait"],[5771,"alloc::boxed"],[5772,"polars_core::series::arithmetic::borrowed::checked"],[5773,"polars_arrow::array"],[5774,"alloc::vec"],[5775,"compact_str"],[5776,"core::iter::traits::double_ended"],[5777,"core::fmt"],[5778,"core::iter::traits::collect"],[5779,"polars_arrow::bitmap::immutable"],[5780,"rayon::iter"],[5781,"polars_arrow::trusted_len"],[5782,"polars_core::datatypes::any_value"],[5783,"polars_utils::index"],[5784,"std::sync::rwlock"],[5785,"polars_core::chunked_array::logical::decimal"],[5786,"core::iter::traits::exact_size"],[5787,"polars_core::series::series_trait"],[5788,"core::slice::iter"],[5789,"core::iter::adapters::map"],[5790,"core::convert"],[5791,"polars_core::chunked_array::metadata::guard"],[5792,"polars_core::chunked_array::metadata::interior_mutable"],[5793,"alloc::sync"],[5794,"core::ops::range"],[5795,"polars_core::datatypes::field"],[5796,"polars_arrow::legacy::kernels::rolling::no_nulls"],[5797,"polars_core::chunked_array::ops::rolling_window"],[5798,"polars_utils::aliases"],[5799,"polars_utils::hashing"],[5800,"ndarray::aliases"],[5801,"either"],[5802,"core::result"],[5803,"core::any"],[5804,"polars_core::chunked_array::arithmetic::numeric"],[5805,"polars_core::chunked_array::builder::string"],[5806,"polars_arrow::array::binview"],[5807,"polars_core::chunked_array::builder::boolean"],[5808,"polars_core::chunked_array::builder::null"],[5809,"polars_core::chunked_array::builder::primitive"],[5810,"core::clone"],[5811,"polars_core::chunked_array::builder::list::anonymous"],[5812,"polars_core::chunked_array::builder::list::boolean"],[5813,"polars_core::chunked_array::builder::list::primitive"],[5814,"polars_core::chunked_array::builder::list::binary"],[5815,"polars_core::chunked_array::builder::list::null"],[5816,"core::hash"],[5817,"polars_arrow::array::boolean"],[5818,"polars_core::chunked_array::metadata::env"],[5819,"polars_core::chunked_array::metadata::collect"],[5820,"bitflags::iter"],[5821,"std::fs"],[5822,"std::sync::mutex"],[5823,"polars_arrow::datatypes"],[5824,"polars_arrow::bitmap::utils::iterator"],[5825,"polars_arrow::bitmap::utils::zip_validity"],[5826,"polars_arrow::offset"],[5827,"polars_arrow::array::static_array"],[5828,"core::error"],[5829,"polars_arrow::array::primitive"],[5830,"polars_arrow::legacy::array::slice"],[5831,"polars_row::row"],[5832,"polars_arrow::array::binary"],[5833,"chrono::naive::datetime"],[5834,"alloc::borrow"],[5835,"polars_arrow::array::static_array_collect"],[5836,"bytemuck::zeroable"],[5837,"polars_core::chunked_array::logical::categorical"],[5838,"polars_core::chunked_array::logical::categorical::merge"],[5839,"polars_core::chunked_array::logical"],[5840,"polars_core::datatypes::time_unit"],[5841,"polars_arrow::types"],[5842,"polars_arrow::datatypes::physical_type"],[5843,"core::borrow"],[5844,"polars_arrow::pushable"],[5845,"polars_core::datatypes::into_scalar"],[5846,"core::cmp"],[5847,"polars_core::chunked_array::logical::categorical::builder"],[5848,"polars_core::chunked_array::logical::categorical::revmap"],[5849,"polars_core::chunked_array::logical::categorical::string_cache"],[5850,"polars_error::warning"],[5851,"polars_arrow::datatypes::schema"],[5852,"polars_core::series::from"],[5853,"polars_core::chunked_array::ndarray"],[5854,"polars_arrow::array::struct_"],[5855,"polars_arrow::record_batch"],[5856,"polars_core::series::iterator"],[5857,"polars_utils::idx_vec"],[5858,"rayon::iter::plumbing"],[5859,"polars_core::frame::group_by::into_groups"],[5860,"core::iter::adapters::copied"],[5861,"core::iter::adapters::zip"],[5862,"polars_arrow::legacy::kernels::rolling"],[5863,"polars_utils::float"],[5864,"polars_arrow::types::native"],[5865,"polars_core::frame::group_by::aggregations::agg_list"],[5866,"polars_core::frame::row::av_buffer"],[5867,"polars_core::hashing::identity"],[5868,"hashbrown::map"],[5869,"polars_core::hashing::vector_hasher"],[5870,"core::alloc"],[5871,"std::os::fd::owned"],[5872,"std::os::fd::raw"],[5873,"std::path"],[5874,"std::ffi::os_str"],[5875,"core::mem::maybe_uninit"],[5876,"polars_arrow::legacy::kernels::time"],[5877,"core::default"],[5878,"core::ffi::c_str"],[5879,"polars_arrow::scalar"],[5880,"std::io::error"],[5881,"simdutf8::basic"],[5882,"alloc::collections"],[5883,"regex::error"],[5884,"alloc::ffi::c_str"],[5885,"polars_arrow::legacy::array::default_arrays"],[5886,"polars_arrow::buffer::immutable"],[5887,"polars_arrow::array::list"],[5888,"polars_core::named_from"],[5889,"polars_core::chunked_array::ops::aggregate"],[5890,"polars_core::chunked_array::ops::aggregate::quantile"],[5891,"polars_arrow::legacy::index"],[5892,"core::pin"],[5893,"core::io::borrowed_buf"],[5894,"std::io"],[5895,"polars_core::chunked_array::ops::aggregate::var"],[5896,"alloc::collections::btree::map"],[5897,"polars_arrow::legacy::array::list"],[5898,"polars_arrow::legacy::array::null"],[5899,"polars_arrow::bitmap::mutable"],[5900,"polars_arrow::array::utf8"],[5901,"polars_schema::schema"],[5902,"alloc::rc"],[5903,"polars_core::utils::supertype"],[5904,"polars_arrow::legacy::utils"],[5905,"polars_arrow::legacy::trusted_len::rev"],[5906,"core::iter::sources::repeat"],[5907,"core::iter::adapters::take"],[5908,"polars_core::chunked_array::object::extension"],[5909,"polars_error::constants"],[5910,"polars_core::frame::horizontal"],[5911,"polars_arrow::legacy::prelude"],[5912,"polars_arrow::legacy::array"],[5913,"polars_arrow::legacy::array::utf8"],[5914,"polars_core::utils::any_value"],[5915,"polars_core::utils::schema"],[5916,"polars_core::utils::series"]],"i":"```````````````````````````````````````````Kl000l00000000000000000000000000000000000`000000001010``0000000000000`0`00000001010000000100000000000`000000100000000000`000000000000000000000000000000001000010000000000000000000`0000000000000000000000000000`0000000000000000000000000000000000000000000000000000000``000000000000000000000000000000000000000000000000000000000`00000000000000000000010010010000000100000000000000000000000000000000000000000000`A@`00000000000000000000000000````````A@dA@hA@jA@lA@b432140043143214321432143214321432143214321044AA`AAb5436543AAd00076547654`7654365476547654765476547654````````AAf0AAhAAjAAl0AAn43AB`ABb4ABd47734376215044212176215047621504476762150476215047621504215432154376037621504`7621504215437621504762150447621504762150476215047621504`Fd000000000000000000000000000``ABhABj1000101000`ABl``ABnAC````ACdACf101010101010101011010`1010101010``ADdInGb0Ib`3Lb22````````42110Ld4ACh43434343434344334343215604321560431150431504315043ACj054542654332671543267154541F`7774378265652652657777777266666555554378265656655656565775077773543782656565654378265656576577776565220777707773653656577577777757765656533726565437826543782653343782656534378265113````ADh00000If1111`111111110011111111111111111111``111111101111111110Ih2222222222`AEf000000000000000000000````AEj00AEl0000000```00`0`10000AG````````````````````````````0AFf``AGb22222CDn3033AFb3AFh044AFj0AFl`77AFn00888888866AGd0`AGhAGj`;;`AGlAGn`AH`0<<>>>AHbAHd>><<AHf==:AHhAGb0:2AHjAHlAHn0`0AI`AIb`AFj0AIdAFbAIfAIhAIjAG`000AFl61`AIl`AJfAJbAIn`````````````````````````````````````AJj00`0`000000000000000000`00000`````AJl0````````````EdEj101010101010101010101011100010110010101010101010221010101010101010010010````````AMj`C```````HnDnADj`1``2`0210```21````2`````100`1`2100``010`2120```0040210``210```BBn`4CE`CEb``````7``543``543``543``543``3`666333BC`654``3``4AOfAMn1010A`987`98`9``:3:```````````B@``3`<:9`:`8988```80`:98``:98``:98``:98``898`88AJ`0<0AMfAMh=?<AMlMj7AN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfE`JdGf0D`00El00HnjJbM`LnLjMdClCnDdDhAnE`?>=AEhGf0220020D`El344AKlAKn43243232664325643253432AKd54305436AL`0ALb06HnDnMjALdAJ`><<<<<<AMfCEdBnjJbIdAMh;AMj;AMl;AMnAN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfAMfCEdBnjJbIdAMhHnAMjDnAMlMjAMnAN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfDn`AMd0Hn2E`GfD`ElAKd6Jd54321`JbM`LnLjMdClCnAMfAMh?AMjDnAMlMjAMnAN`ANb>=ANdANf>=<;ANhANjDdDhANlAnANnAO`AObAOdADjAOfAMfAMhHnAMjDnAMlMjAMnAN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfAMfAMhHnAMjDnAMlMjAMnAN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfMjAOh000Dn00`HnAMj26AMf0CEdBnjJbIdAMh879AMl<AMnAN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfAMf0CEdBnjJbIdAMhHnAMjDnAMlMjAMnAN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfJdjJbM`LnLjMdClCnAMfCEdBn:9IdAMhHnAMjDnAMlMjAMnAN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfAMdJdHnMj01AMjDn0AMl3AMn985E`GfD`0El0321100999777666555888444===<<<3AMf3121AEhAMb6431AMh==;::9<88ADjAOf95CEdBnjJbId7Hn00000AMjDn000AMlMj00AMn0AN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADj00AOfDnE`00GfD`0El0AEh32104432211AKd01432154433225432143214AJ`00654312065431260JdAMd08765341008765348C`jJbIdAN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdE`AEh0HnB@nAJ`4D`AKd6Gf2El278133008133006AMjDnMjAMnADjAOf<<4AMfCEdBnjJbIdAMhHn=<AMl<;AN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfE`Dn3AMfCEdBnjJbIdAMhHnAMj9AMlMjAMnAN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfAMfBA`0E`GfD`ElAKdAEhBAbJd8HnDn0010000101000010=1010100001000010=AJ`:01:98877:98877``1AMj::98:AKlAKn10`<<;:<6jJbM`LnLjMdClCnD`ElMj0CE`CEbBBh55554444AEh040E`Gf87AKd333AMfAMl3343;;::43;;::404;4;HnAMn3Jd4AKlAKn108jJbM`LnLjMdClCnE`GfD`ElAKdAEh`JdAMf65465465477Mj87654387654376547654AKlAKnHn0`5jJbM`LnLjMdClCnGf0ElD`011Dn?AMn102E`ADj1AMfAMhHnAMj7AMlMj8AN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfDn2JdAMfHn3AMnEl2E`0AL`0ALb0AOh00067CEdBnjJbIdAMh<AMjDnAMlMj?AN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfAMfCEdBnjJbIdAMhHnAMjDnAMlMjAMnAN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfHnDn10AMnE`AMfCEdBnjJbIdAMh:AMj:AMlMj;AN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOf1GfD`ElAEhAJ`0Dn1AKlAKn7BAjBAlAOlBAnBB`BBbBBdBBfBA`:9?>AKd>Gf:98765432<;D`El3AEhAMfCEdBnjJbIdAMhHnAMjDnAMlMjAMnAN`ANbM`LnANdANfLjMdClCnANhANjDdDhANlAnANnAO`AObAOdADjAOfCE`CEbBBhEfAJ`HnE``````BBn`BC`10`AM`00BBj10010BCbBBl32103`3333021032103221033333333AMb3132144444444444444321432144244444444444``41444312444444443`244`444443214321432144443214`6565`565656656565656565656565656666565666665656565656`BCh0000`00`0000000`0`7676`````BClAKh000Ah`112101```11111112BCj3030`3003030`300300`3030`0``````0303003030CEfCEh10```````````BD`0000000000`0`````00`````00000BDj`0BDh11``0``01BCf0000000000000000000BEnBF`3421034222342342342`224210342103422221034222222222242224442`2222223422103422222222222222222`222422222222222222103422103421022222222222222222222221022222222222222222`222222222222222222102222222222222222222342222221034222221034221034222222210342222222``Eh`00BG`1111111111111111110110111111111111010101010111010101110101111110110111111111111110111001111111111101111111010BDf212221222222221222222222212121222222222222221222222222222122222221222212121212122222222212222`BGf000000000000000000000000000`BGl0``0``````BHdAl`2`22222222210`222BGh1BEb40`1023BHnBH`BGn453762104537453745374537345621004537621045373162104453745444555`643445377`621044445537445335BHh04673215648732156486355255765564447644444543345644656446644564887321564873215648873215648666473215648CEjCEl0``````````BIjBIl0`BIn0BJ`BJb``101010101010`10101010BE`211210210210210210`02102102100000022110`2102102121021```210210210210210``````````BJdBJf10110101010100001010`101010BJl0002122222`````````BFj````````````AKh00`0Bh0BNnAh4```BBn`N`5```````5```3BC``1``````211``1`6`4BLd````471``````BId``61`````88`88``8``8`8``0``7OfBKnLfNb=B@d85BL`BLb84444>>>>4>44?>>65443=BFj3;8219AKhBh9876BNn36>;54<`87BKl02;:9847?<65=2;:9847?<65=2;:9847?<65=29AOh0003:44``7::3::::958N``544=<;;:3690>87?54=<;:3690>87?;`;;;54=<;;:3690>87?994=;;;:690>87?444===;;;666999000???<AMb<6655>=<<<;7:1?98BLd<7777766666??>==================<58;2BId;:1BNdBNhBNj::::::::LfCEn0000111<<;<BO`222Fl3>3BFjB@d<:Of66`AKhBh2BKn9NbBNn76N`BIdBL`BLbBLd:7198:7Lf76=<543210000098;<0;0BDn1`1``1BOj0BOl?:11?3BOnC@`5B@d6666666666`Of?Bh888````:6688588888`8`AJl09C@lBKn`;994340;NbBFj7N`BIdBL`BLbBLdAKh;LfAOh0002=>:119BNn9B@d987654?Of=4<2;1:9876BOn555555556Bh66702?6>4=3<;:986`C@l813BKn8Nb7BFj7N`BIdBL`BLbBLd?66<AKhLf;;;0CEfCEh10```BNdBNhBNj`CAf000000000000000000000`CAj00000000000000000000000000000`BBnBC`10``AJl0``````CF`CFb``L`000000000000000000000000000000`0000000`CBl0`````BDdCBh1010121010101Jn0``00```BGb11````01AfBOf0111111`10000`10001001001110000001CC`342034211122221122121122421424222203422034222222034211114222222222444222222112142220342222222222222222222222222222222222222222212221111111122222214222222`203420342220BFb32233332200333323223333333322223222232233332232223333333333333333333333333333333333333323133333332`3322233323325223333222331233222322223333333322332222333533331453333314533333314533333223222221453333``Ch000000000000000000000```CCd0CCfAj0`2100210021002100``BKlFf0100CCh0`000000000000000000000000CCj0``````````0CClCD````````211````22222222CDhAJn43210432CCn543543543``CDb06``6653322654322654632654``636533366655565`6666653265546666226CDf337333````4764376577743765375BFf6888383`3466668``8863```3`8888768254876`5487654876854876``````","f":"`````````````{{}b}``0```````````````{{}d}``````````````{{fh}b}{{{f{{l{j}}}}}d}{{{f{{l{c}}}}}nA`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}{f{Al}}}AfA`}{{{f{{l{An}}}}}d}{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{j}}}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{{l{j}}}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}{{C`{}{{Bl{Bn}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cd{B`}{{Cb{B`}}}}Cf}}{{{f{{l{j}}}}c}{{l{j}}}{{Cj{Ch}{{Cb{Af}}}}}}{{{f{{l{j}}}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{{l{Cl}}}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{{l{Cn}}}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{l{c}}e}{{l{c}}}A`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{c}}}}e}D`C`{{Cj{{f{BjDb}}}}}}{{{f{{l{c}}}}{f{Cd}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cd}}}{{l{e}}}A`C`}{{{f{Bj{l{c}}}}e}bA`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Cj{{f{Df}}}{{Cb{{f{Df}}}}}}}}{{{f{{l{Dh}}}}c}{{l{Dh}}}{{Cj{{f{{Dl{Dj}}}}}{{Cb{{f{{Dl{Dj}}}}}}}}}}{{{f{{l{c}}}}Dng}{{l{i}}}C`{}{{Cj{}{{Cb{e}}}}}C`}{{{f{{l{j}}}}{f{Cd}}}{{Ah{E`}}}}{{{f{{l{c}}}}g{f{Bj{Dl{e}}}}}bA`{}{{Cd{B`{f{e}}}{{Cb{e}}}}}}{{{f{{l{c}}}}e}{{l{c}}}A`{{Cd{}{{Cb{}}}}Cf}}{{{f{{l{Dd}}}}c}{{l{Dd}}}{{Cj{Eb{f{Df}}}{{Cb{Eb}}}}Cf}}{{{f{{l{c}}}}Ed}EfA`}{{{f{{l{c}}}}{f{{Dl{Eh}}}}{f{Ej}}}{{Ah{Ef}}}A`}{{{f{{l{c}}}}}{{Ah{Ef}}}A`}`{{{f{{l{Dd}}}}}El}{{{f{{l{c}}}}}{{f{{l{c}}}}}C`}{{{f{{l{c}}}}}{{f{Dn}}}C`}{{{f{{l{j}}}}{f{{l{c}}}}{f{{l{e}}}}g}{{l{j}}}C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{{l{c}}}}}eEn{}}00{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{{l{c}}}}}{{Fb{F`}}}C`}``{{{f{{l{c}}}}e}{{l{g}}}A`{{Cd{}{{Cb{}}}}Cf}A`}{{{f{{l{c}}}}{f{Dn}}}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Dn}}Fd}{{Ah{Af}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Ff}{{{f{{l{c}}}}e}{{Ah{Af}}}FfAd}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{Fh}}}}}}}C`}{{{f{{l{c}}}}}FjC`}{{{f{{l{c}}}}}{{f{{Fn{Fl}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{Fn{Fl}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}C`}0{{f{f{Bjc}}}b{}}{fb}`{{{f{Bj{l{c}}}}}b{C`A`}}`{fG`}{{{f{{l{c}}}}}{{Ah{{f{Dl}}}}}A`}{{{f{Bj{l{c}}}}{f{{l{c}}}}Gb}bC`}{{{f{Bj{l{c}}}}{f{{l{e}}}}Gb}bC`C`}{{{f{{l{c}}}}}{{`{{Gd{}{{Bb{{f{Dl}}}}}}}}}A`}{{}{{l{c}}}C`}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}}bC`}{Fhb}0{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{Dn}}}C`}{{{f{{l{c}}}}e}GfA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}01{{{f{Bj{l{c}}}}{f{{l{c}}}}}{{Ah{b}}}A`}{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Gf}}}{{Ah{{l{c}}}}}{{C`{}{{Gh{Bn}}{Gj{Bn}}}}}}{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fh}}}C`}`{{{f{{l{c}}}}{f{BjGl}}}GnA`}{{{f{{l{An}}}}{f{BjGl}}}Gn}{{{f{{l{c}}}}e}bC`{{Cj{B`}}}}{{{f{{l{j}}}}c}b{{Cj{{B`{Ch}}}}}}{c{{l{e}}}H`{{C`{}{{Hb{c}}}}}}{cc{}}0{{Bhc}{{l{e}}}Hd{{C`{}{{Hb{}}}}C`}}{{{f{{l{c}}}}e}{{l{c}}}{{C`{}{{Hb{}}}}C`}Hd}{{Bh{Fn{Fl}}}{{l{c}}}C`}{{Bh{Fn{Fl}}Dn}{{l{c}}}C`}{c{{l{e}}}{{Hd{}{{Bb{{Hh{Fn{B`{Hf}}}}}}}}}A`}{c{{l{An}}}{{Hd{}{{Bb{{B`{d}}}}}}}}{c{{l{e}}}{{Hd{}{{Bb{B`}}}}}A`}{{Bhc}{{l{e}}}{{Bf{}{{Bb{B`}}}}}A`}12{{Bhc}{{l{e}}}{{Bf{}{{Bb{}}}}}A`}`{c{{l{e}}}{{Hj{}{{Bb{B`}}}}}A`}{{Bh{f{Dl}}}{{l{c}}}A`}{{Bh{f{{Dl{B`}}}}}{{l{c}}}A`}{c{{l{e}}}{{Hl{}{{Bb{B`}}}}}A`}{{BhFn}{{l{c}}}A`}{{BhFn{B`{Hf}}}{{l{c}}}A`}{{BhFh}{{l{c}}}A`}0{{{f{{l{c}}}}Fh}{{l{c}}}C`}{{BhFh{f{Dn}}}E`}{{{f{{l{c}}}}Fh}B`C`}{{{f{{l{c}}}}Fh}{{Ah{Hn}}}A`}{{{f{{l{c}}}}Fh}HnA`}{{{f{{l{j}}}}Fh}{{B`{Af}}}}{{{f{{l{c}}}}}{{B`{I`}}}C`}{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}IbC`}{{{f{{l{j}}}}}Af}{{{f{{l{c}}}}}B`C`}0{{{f{{l{{Id{c}}}}}}Fh}{{B`{{f{If}}}}}Ih}09{{{f{{l{c}}}}dd}{{Ah{Al}}}A`}{{{f{{l{c}}}}FhdFh}AlEn}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}{{{f{{l{c}}}}e}GfA`Ad}018{{{f{{l{c}}}}{B`{Fh}}}{{l{c}}}C`}{{}Fh}0{{FhIj{B`{Il}}}{{l{c}}}A`}{{{f{{l{j}}}}}{{f{Dn}}}}{{{f{{l{c}}}}}{{J`{{In{c}}}}}C`}{{}c{}}0{{}Eh}{{{l{Jb}}{B`{Fh}}Fh}{{Ah{Jd}}}}{{{l{Jb}}{B`{Fh}}Fh}Jd}{{{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}}{{`{JfJh{Jj{}{{Bb{}}}}GdHl}}}A`}{{{l{c}}}AfC`}{{{f{{l{c}}}}}dC`}{{{f{{l{c}}}}}GfJl}000{{{f{{l{c}}}}}GfC`}02{{{f{{l{c}}}}}JnC`}{{{f{{l{c}}}}}{{`{{K`{}{{Bb{B`}}}}}}}C`}{{{f{{l{c}}}}}{{`{{Bf{}{{Bb{{l{c}}}}}}}}}C`}{{{f{{l{j}}}}}{{`{{Bf{}{{Bb{Kb}}}}}}}}{{{f{{l{c}}}}}{{Kh{{Kd{Fl}}{Kf{{f{Fl}}}{{Cb{{B`{{f{Hf}}}}}}}}}}}C`}`{{fc}G`{{Kj{Df}}}}{{{f{{l{c}}}}}B`C`}{{{f{{l{c}}}}}{{B`{Fh}}}C`}{{{f{{l{c}}}}}{{Kl{c}}}C`}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}{{c{f{{l{e}}}}}g{}A`{}}{{c{l{e}}}g{}A`{}}{{{f{{l{c}}}}}FhC`}0{{{f{{l{c}}}}e}{{l{c}}}A`{AbKn}}00{{{f{{l{c}}}}Fh}{{l{c}}}C`}{{{f{{l{c}}}}e}GfA`Ad}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}01{{{f{{l{An}}}}}{{B`{d}}}}{{{f{{l{c}}}}}B`A`}{{{f{{l{c}}}}}L`A`}{{{f{{l{An}}}}}{{B`{n}}}}{{{f{{l{c}}}}}{{B`{n}}}A`}{{{f{{l{c}}}}}{{B`{n}}}En}{{{f{{l{c}}}}}L`En}{{{f{Bj{l{c}}}}{In{c}}}bC`}`{{{f{{l{c}}}}}{{Lb{c}}}C`}{{{f{{l{c}}}}}{{f{{Lf{{Ld{c}}}}}}}C`}{{{f{{l{c}}}}}{{B`{{Lh{F`}}}}}C`}{{{f{Bj{l{c}}}}}{{f{Bj{Lf{{Ld{c}}}}}}}C`}{{{f{{l{c}}}}}{{Lf{{Ld{c}}}}}C`};<{{{f{{l{c}}}}}{{B`{Hh}}}A`};{{Bh{f{Dl}}}{{l{c}}}A`}{{Bh{f{{Dl{Dj}}}}FhFh}{{l{An}}}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}FhC`}{{{f{{l{c}}}}}{{Ah{Fh}}}A`}{{{f{{l{c}}}}}{{f{Bh}}}C`}{{Bhc}{{l{Lj}}}{{Kj{{Dl{Ll}}}}}}{{Bhc}{{l{Ln}}}{{Kj{{Dl{{B`{Il}}}}}}}}{{Bhc}{{l{Dd}}}{{Kj{{Dl{Db}}}}}}{{Bhc}{{l{Dh}}}{{Kj{{Dl{{Fn{Dj}}}}}}}}{{Bhc}{{l{An}}}{{Kj{{Dl{d}}}}}}{{Bhc}{{l{M`}}}{{Kj{{Dl{Mb}}}}}}{{Bhc}{{l{Ln}}}{{Kj{{Dl{Il}}}}}}{{Bhc}{{l{Md}}}{{Kj{{Dl{Kb}}}}}}{{Bhc}{{l{Jb}}}{{Kj{{Dl{Mf}}}}}}{{Bhc}{{l{Md}}}{{Kj{{Dl{{B`{Kb}}}}}}}}{{Bhc}{{l{Jb}}}{{Kj{{Dl{{B`{Mf}}}}}}}}{{Bhc}{{l{Cl}}}{{Kj{{Dl{{B`{Ij}}}}}}}}{{Bhc}{{l{Cl}}}{{Kj{{Dl{Ij}}}}}}{{Bhc}{{l{Lj}}}{{Kj{{Dl{{B`{Ll}}}}}}}}{{Bhc}{{l{Cn}}}{{Kj{{Dl{{B`{n}}}}}}}}{{Bh{Mh{Kb}}}{{l{Md}}}}{{Bhc}{{l{Dd}}}{{Kj{{Dl{{B`{Db}}}}}}}}{{Bhc}{{l{Dh}}}{{Kj{{Dl{{B`{{Fn{Dj}}}}}}}}}}{{Bh{Mh{Ll}}}{{l{Lj}}}}{{Bh{Mh{Il}}}{{l{Ln}}}}{{Bh{Mh{Mb}}}{{l{M`}}}}{{Bhc}{{l{An}}}{{Kj{{Dl{{B`{d}}}}}}}}{{Bhc}{{l{M`}}}{{Kj{{Dl{{B`{Mb}}}}}}}}{{Bhc}{{l{Cn}}}{{Kj{{Dl{n}}}}}}{Bh{{l{{Id{c}}}}}Ih}{{{f{{l{c}}}}FhFh}{{l{c}}}A`}{{Bh{Fn{c}}}{{l{{Id{c}}}}}Ih}{{Bh{Fn{c}}Hf}{{l{{Id{c}}}}}Ih}{{BhFn}{{l{c}}}A`}{{{Lf{Mj}}{Fn{Fl}}I`I`}{{l{c}}}C`}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{c}}}}{f{{l{c}}}}}GfA`}{{{f{{l{c}}}}e}GfA`Ad}01{{{f{{l{c}}}}}FhC`}``{{{f{{l{Dd}}}}}{{`{{Ml{}{{Bb{{B`{{f{Df}}}}}}}}}}}}{{{f{{l{j}}}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{Bj{l{j}}}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{{l{Dd}}}}}{{`{{Mn{}{{Bb{{B`{{f{Df}}}}}}}}}}}}{{{f{{l{c}}}}}L`A`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}nN`}{{Ah{{B`{n}}}}}En}{{{f{{l{c}}}}nN`}{{Ah{L`}}}En}{{BhFhn}{{Ah{{l{An}}}}}}{{BhFhnn}{{Ah{{l{c}}}}}A`}{{BhFh}{{l{c}}}A`}{{BhFhnn}{{l{c}}}A`}{{{f{{l{c}}}}}{{l{c}}}C`}{{{f{{l{c}}}}}{{f{Mj}}}C`}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{Bj{l{c}}}}Bh}bC`}{{{f{{l{c}}}}}{{l{c}}}A`}{{{f{{l{c}}}}{f{Cd}}Nb}{{Ah{Af}}}A`}{{{f{{l{c}}}}Fhe}{{Ah{{l{c}}}}}Jl{{Cj{{f{Bj{l{c}}}}}{{Cb{B`}}}}}}{{{f{{l{c}}}}ndd{B`{Il}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}Fhdd{B`{Il}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}eB`}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}}{{{f{{l{c}}}}eg}{{Ah{{l{c}}}}}A`{{Hd{}{{Bb{I`}}}}}{{Cd{B`}{{Cb{B`}}}}}}{{{f{{l{c}}}}{f{Gf}}B`}{{Ah{{l{c}}}}}A`}{{{f{Bj{l{j}}}}}b}{{{f{Bj{l{c}}}}d}bC`}{{{f{Bj{l{j}}}}Dn}b}{{{f{Bj{l{c}}}}I`}bC`}{{{f{Bj{l{c}}}}Jn}bC`}{{{f{{l{c}}}}Kb}{{l{c}}}A`}{{{f{{l{c}}}}KbB`}{{l{c}}}A`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}KbFh}{{l{c}}}C`}0{{{f{{l{c}}}}d}{{l{c}}}A`}{{{f{{l{c}}}}Ed}{{l{c}}}A`}{{{f{{l{c}}}}Kb}{{Hh{{l{c}}{l{c}}}}}C`}0{{{f{{l{c}}}}Dj}{{B`{n}}}A`}{{{f{{l{c}}}}Dj}L`En}{{{l{c}}{l{c}}}eA`{}}{{{l{c}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{AbAd}{}}{{{f{{l{c}}}}{f{Af}}}{{Ah{Af}}}Aj}{{{f{{l{c}}}}}B`A`}{{{f{{l{An}}}}}{{B`{I`}}}}{{{f{{l{c}}}}}L`A`}{{{f{{l{c}}}}{B`{Fh}}}{{l{c}}}C`}{{{f{{l{c}}}}{f{Ef}}}{{Ah{{l{c}}}}}C`}{{{f{{l{c}}}}{f{e}}}{{Ah{{l{c}}}}}C`{{Kj{{Dl{I`}}}}Nd}}{{{f{{l{c}}}}{f{e}}}{{l{c}}}{{C`{}{{Gh{Bn}}{Nf{Bn}}}}C`}{{Kj{{Dl{I`}}}}Nd}}{{{f{{l{c}}}}{f{Ef}}}{{l{c}}}{{C`{}{{Gh{Bn}}{Nf{Bn}}}}C`}}`{{{f{{l{c}}}}dNh}{{Fn{{Fn{Nj}}}}}C`}{{{f{{l{c}}}}}{{l{c}}}Jl}{{{f{{l{Dd}}}}Fh}{{Ah{Af}}}}{{{f{Bj{l{j}}}}Dn}b}{{{f{{l{c}}}}}{{Ah{Nl}}}A`}{{{f{{l{j}}}}}{{Ah{Nn}}}}{fc{}}{{{f{{l{Dh}}}}}D`}{{{f{{l{c}}}}}{{Fn{B`}}}A`}{{{f{{l{c}}}}}{{O`{Fn{Fn{B`}}}}}A`}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{l{c}}e}gA`{}{}}{{{f{{l{c}}}}e}gA`{}{}}{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}{{{f{{l{j}}}}c}{{Ah{{l{j}}}}}{{Cj{Ch}{{Cb{{Ah{Af}}}}}}}}{{{f{{l{j}}}}e}{{Ah{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Ah{{B`{c}}}}}}}}Cf}C`}{{{f{{l{c}}}}g}{{Ob{D`e}}}C`{}{{Cj{{f{BjDb}}}{{Cb{{Ob{be}}}}}}}}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{Ob{eg}}}}}}}C`}{c{{Ob{e}}}{}{}}0{{Bhg}{{Ob{{l{i}}e}}}H`{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{{C`{}{{Hb{c}}}}C`}}{{}{{Ob{c}}}{}}0{{{f{{l{j}}}}{f{{l{c}}}}e}{{Ah{{l{j}}}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Ah{{B`{Af}}}}}}}}}}{fOd}0{{{f{{l{c}}}}}{{Ah{{l{c}}}}}A`}{{{f{{l{c}}}}{f{Af}}}{{Ah{{f{{l{c}}}}}}}C`}{{{f{Bj{l{c}}}}}bC`}{{{f{{l{c}}}}Fh}{}C`}{{{f{{l{c}}}}Dj}{{B`{n}}}A`}{{{f{{l{c}}}}Dj}L`En}{{}c{}}0{{Bhc}{{l{e}}}H`{{C`{}{{Hb{c}}}}C`}}{{{f{{l{e}}}}c}{{l{e}}}H`{{C`{}{{Hb{c}}}}C`}}{{{f{{l{c}}}}{Fn{Fl}}}{{l{c}}}C`}{{{l{c}}Bh}{{l{c}}}C`}{{{f{{Dl{Of}}}}e}c{}{{Oh{{f{Ef}}}{{Cb{c}}}}}}{{{f{{l{c}}}}Jn}{{l{c}}}C`}{{{f{{l{c}}}}}eA`{}}{{{l{c}}}eA`{}}{{{l{c}}{l{c}}}eA`{}}{{{f{{l{c}}}}{f{{l{c}}}}}eA`{}}{{{f{{l{c}}}}e}gA`{}{}}{{{l{c}}e}gA`{}{}}2301{{c{l{e}}}g{}A`{}}{{c{f{{l{e}}}}}g{}A`{}}453201543276453201453210{{{f{{l{j}}}}{f{{l{c}}}}e}{{l{j}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Af}}}}}}}}{{{f{{l{c}}}}{f{Gf}}{f{{l{c}}}}}{{Ah{{l{c}}}}}{{C`{}{{Nf{Bn}}}}}}````{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}e{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}c}g{}{}{}}{{c{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}g{}{}{}}{{{A@`{}{{Oj{c}}{Ol{e}}{On{g}}}}}e{}{}{}}65654654650654654````````{{fh}b}000{{{f{BjA@b}}}b}{{{f{Bj{A@d{c}}}}}b{A@fNd}}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{{{f{Bj{A@d{c}}}}{B`{e}}}b{A@fNd}{{Kj{c}}}}{{{f{BjA@b}}{B`{c}}}b{}}{{{f{BjA@b}}c}b{}}{{{f{Bj{A@d{c}}}}e}b{A@fNd}{{Kj{c}}}}{{{f{BjA@h}}d}b}5{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{{A@d{c}}}}}{{A@d{c}}}{A@fNd}}{{{f{A@h}}}A@h}{{{f{A@j}}}A@j}{{{f{{A@l{c}}}}}{{A@l{c}}}{A`A@n}}{{f{f{Bjc}}}b{}}000{fb}000{Fh{{f{c}}}{}}000{Fh{{f{Bjc}}}{}}000{Fhb}000{A@b{{l{c}}}C`}{{{A@d{{Dl{Dj}}}}}El}{{{A@d{Df}}}D`}{AA`D`}{AAbEl}{A@hGf}`{{{A@l{c}}}{{l{c}}}A`}{cc{}}000{{Bhe}AAd{}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}AAd{}{{Bf{}{{Bb{c}}}}}}{{Bh{f{{Dl{c}}}}}AAd{}}{{Bh{f{{Dl{{B`{c}}}}}}}AAd{}}{{}Fh}000{{}c{}}000`{{BhFh}{{A@d{c}}}{A@fNd}}{{BhFh}A@h}{{BhFh}A@j}{{BhFh}{{A@l{c}}}A`}{{{f{BjA@b}}}b}{{{f{BjA@h}}}b}{{{f{BjA@j}}}b}{{{f{Bj{A@l{c}}}}}bA`}{fc{}}000{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}000<<<<````````{{{f{BjAAf}}{f{H`}}}b}{{{f{BjAAf}}}b}{{{f{BjAAh}}}b}{{{f{BjAAj}}c}b{{Bf{}{{Bb{{B`{d}}}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{B`}}}}Hl}}{{{f{Bj{AAl{c}}}}e}bA`{{Bf{}{{Bb{}}}}Hl}}{{{f{BjAAn}}}b}54{{{f{BjAB`}}}b}{{{f{BjABb}}}b}{{{f{BjAAj}}}b}{{{f{BjABd}}}b}{{{f{Bj{AAl{c}}}}}bA`}{{{f{BjAAf}}{B`{{f{H`}}}}}b}{{{f{BjAAf}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{BjAAn}}{B`{{f{Af}}}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{B`{{f{Dl}}}}}bA`}{{{f{BjAAn}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAf}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAh}}{f{Af}}}{{Ah{b}}}}{{{f{BjAB`}}{f{Af}}}{{Ah{b}}}}{{{f{BjABb}}{f{Af}}}{{Ah{b}}}}{{{f{BjAAj}}{f{Af}}}{{Ah{b}}}}{{{f{BjABd}}{f{Af}}}{{Ah{b}}}}{{{f{Bj{AAl{c}}}}{f{Af}}}{{Ah{b}}}A`}{{{f{Bj{AAl{c}}}}{f{Dl}}}bA`}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{B`{{f{Df}}}}}}}}Hl}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{B`{{f{{Dl{Dj}}}}}}}}}}Hl}}{{{f{BjAB`}}c}b{{Bf{}{{Bb{{f{Df}}}}}}}}{{{f{BjABb}}c}b{{Bf{}{{Bb{{f{{Dl{Dj}}}}}}}}}}{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000`{{}AAf}{{}AAh}{Fh{{f{c}}}{}}000000{Fh{{f{Bjc}}}{}}000000{Fhb}000000{{{f{AB`}}}d}{{{f{ABb}}}d}{{{f{AAj}}}d}{{{f{{AAl{c}}}}}dA`}{{{f{AAn}}}d}{{{f{AB`}}}{{f{Mj}}}}{{{f{ABb}}}{{f{Mj}}}}{{{f{AAj}}}{{f{Mj}}}}{{{f{{AAl{c}}}}}{{f{Mj}}}A`}{{{f{AAn}}}{{f{Mj}}}}{{{f{BjAAf}}}E`}{{{f{BjAAh}}}E`}{{{f{BjABd}}}E`}{{{f{BjAAn}}}E`}{cc{}}000000{{{f{Dn}}FhFhBh}{{Ah{{Fb{AAn}}}}}}{{}Fh}000000{{{f{BjAB`}}}Fl}{{{f{BjABb}}}Fl}{{{f{BjAAj}}}Fl}{{{f{Bj{AAl{c}}}}}FlA`}{{{f{BjAAn}}}Fl}{{}c{}}000000{{BhFh{B`{Dn}}}AAf}{{BhFh{B`{Dn}}}AAh}{{BhFhFh}AB`}{{BhFhFh}ABb}{{BhFhFh}AAj}{{BhFh}ABd}{{BhFhFhDn}{{AAl{c}}}A`}{{BhFhFhDnDn}{{AAl{c}}}A`}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{fOd}000000;;;;;;;````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Fd}}}Fd}{{f{f{Bjc}}}b{}}{fb}{{}Fd}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{Fd}}{f{Fd}}}d}{{f{f{c}}}d{}}00{{{f{Fd}}{f{BjGl}}}Gn}{cc{}}{{{f{Fd}}{f{Bjc}}}bABf}{{}Fh}{{}c{}}{{{f{Fd}}}d}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5``{{ABhBh}{{l{c}}}C`}{{ABj{f{{l{c}}}}}{{l{c}}}C`}10{{ABjBhDn}{{l{c}}}C`}0{{ABhBh}{{Ob{{l{c}}e}}}C`{}}{{ABj{f{{l{c}}}}}{{Ob{{l{c}}e}}}C`{}}10{{ABjBhDn}{{Ob{{l{c}}e}}}C`{}}0`{ABlABl}``{{ABnBhDn}e{}{{AC`{c}}}}{{eBhDn}AC`{}{{Hj{}{{Bb{c}}}}}}```{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{Fhb}0{cc{}}0{{}Fh}0{{}c{}}000{{{f{ACb}}}ACd}{{{f{BjACd}}}{{B`{c}}}{}}{{{f{Bj{ACf{c}}}}}{{B`{e}}}Bf{}}1{{{f{Bj{ACf{c}}}}}{{B`{e}}}Gd{}}`{{{f{ACd}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{{ACf{c}}}}}{{Hh{Fh{B`{Fh}}}}}Bf}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}099`````````````````````````{{fh}b}0000{{}Gb}{{}Ib}{{GbGb}Gb}{{IbIb}Ib}{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}3210{{{f{Gb}}}Mb}0{{{f{Ib}}}Dj}05432{f{{f{c}}}{}}000000{{{f{Bj}}}{{f{Bjc}}}{}}000000{{{f{{Ld{c}}}}}{{Fb{F`}}}C`}{{{f{{Ld{c}}}}}{{Ld{c}}}C`}{{{f{{In{c}}}}}{{In{c}}}C`}{{{f{ACh}}}ACh}{{{f{Gb}}}Gb}{{{f{Ib}}}Ib}{{f{f{Bjc}}}b{}}0000{fb}0000{{{f{BjACj}}}b}0{GbGb}{IbIb}{{{f{Gb}}Gb}d}{{{f{Ib}}Ib}d}{{}{{Ld{c}}}C`}{{}{{In{c}}}C`}{{}Gb}{{}Ib}{Fh{{f{c}}}{}}{{{f{{Lb{c}}}}}{{f{e}}}C`{}}111111{Fh{{f{Bjc}}}{}}000000{{GbGb}Gb}{{IbIb}Ib}{{}d}{{{f{F`}}}{{B`{I`}}}}{{{In{c}}I`}{{In{c}}}C`}{{{f{{In{c}}}}}{{B`{I`}}}C`}{{{In{c}}{B`{I`}}}{{In{c}}}C`}{Fhb}000000<;5{{{f{Gb}}{f{Gb}}}d}{{{f{Ib}}{f{Ib}}}d}7{{{f{BjGb}}c}b{{Hd{}{{Bb{Gb}}}}}}{{{f{BjIb}}c}b{{Hd{}{{Bb{Ib}}}}}}{{{In{c}}d}{{In{c}}}C`}{{{In{c}}{B`{d}}}{{In{c}}}C`}{{{f{{In{c}}}}Gb}{{In{c}}}C`}{{{f{{In{c}}}}Gb}{{In{e}}}C`C`}{{{In{c}}Ib}{{In{c}}}C`}{{{In{c}}{B`{Ib}}}{{In{c}}}C`}{{{f{{In{c}}}}{f{BjGl}}}GnC`}{{{f{ACh}}{f{BjGl}}}Gn}{{{f{Gb}}{f{BjGl}}}Gn}0000{{{f{Ib}}{f{BjGl}}}Gn}0000{cc{}}000000{Mb{{B`{Gb}}}}{Dj{{B`{Ib}}}}{MbGb}0{DjIb}010{cGb{{Hd{}{{Bb{Gb}}}}}}{cIb{{Hd{}{{Bb{Ib}}}}}}{{{f{Df}}}{{B`{Gb}}}}{{{f{Df}}}{{B`{Ib}}}}{{{f{{In{c}}}}}{{B`{I`}}}C`}{{{f{{In{c}}}}}dC`}{{{f{Ib}}}d}{{{f{F`}}}Ib}{{{f{{In{c}}}}}IbC`}0{{{f{{In{c}}}}}{{B`{f}}}C`}0{{{f{Bj{Ld{c}}}}}{{f{Bj{In{c}}}}}C`}{{{f{Ib}}}Jn}{{}Fh}000000{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}{{GbGb}Gb}{{IbIb}Ib}{{{f{Gb}}Gb}d}{{{f{Ib}}Ib}d}{{}c{}}000000{Gbc{}}{Ibc{}}{{{f{Gb}}}d}{{{f{Ib}}}d}{{{f{{In{c}}}}}dC`}21{{{f{{In{c}}}}}JnC`}111{{{f{Gb}}}{{ACl{Gb}}}}{{{f{Ib}}}{{ACl{Ib}}}}{{{f{Gb}}}{{ACn{Gb}}}}{{{f{Ib}}}{{ACn{Ib}}}}{{}d}{{}{{f{{ADb{AD`}}}}}}{{{f{F`}}}{{B`{L`}}}}{{{f{{In{c}}}}}{{B`{L`}}}C`}{{{In{c}}}{{In{c}}}C`}{{{In{c}}B`}{{In{c}}}C`}{{{f{{In{c}}}}{In{c}}}{{ADd{c}}}C`}4321{{{In{c}}}{{Ld{c}}}C`}{GbGb}{IbIb}{{{f{{Ld{c}}}}}{{Lh{{In{c}}}}}C`}{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}{{{f{BjGb}}Gbd}b}{{{f{BjIb}}Ibd}b}{{{f{Bj{In{c}}}}{B`{I`}}}bC`}{{{f{Bj{In{c}}}}d}bC`}{{{f{BjIb}}d}b}{{{f{Bj{In{c}}}}Ib}bC`}{{{f{Bj{In{c}}}}B`}bC`}033{{{f{Bj{In{c}}}}Jn}bC`}{{{f{BjIb}}Jn}b}{{{In{c}}Jn}{{In{c}}}C`}{{{In{c}}{B`{Jn}}}{{In{c}}}C`}{{GbGb}Gb}{{IbIb}Ib}>=10{{{Ld{c}}}{{In{c}}}C`}{fc{}}0000{{{f{BjGb}}Gb}b}{{{f{BjIb}}Ib}b}{c{{Ob{e}}}{}{}}000000{{}{{Ob{c}}}{}}000000{{{f{{Ld{c}}}}}{{B`{{Lh{{In{c}}}}}}}C`}{{{f{{Ld{c}}}}}{{B`{{J`{{In{c}}}}}}}C`}{fOd}000000:9{{{f{{Ld{c}}}}}{{f{{ADf{F`}}}}}C`}{{}c{}}000000{ACjACj}0{{{f{{Ld{c}}}}}{{J`{{In{c}}}}}C`}````{{fh}b}{{{f{{ADh{c}}}}Fh}{{Hh{{ADh{c}}{ADh{c}}}}}Ih}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{f{c}}}}}}}}{e{{ADh{c}}}Ih{{Hd{}{{Bb{{B`{{f{c}}}}}}}}}}{{ADje}g{}{{Hd{}{{Bb{c}}}}}{}}0{{{f{If}}}{{f{ADl}}}}{{{f{{ADh{c}}}}}{{f{ADl}}}Ih}{{{f{Bj{ADh{c}}}}}{{f{BjADl}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{{{f{{ADh{c}}}}Fh}dIh}{{{f{{ADh{c}}}}}{{ADh{c}}}{IhA@n}}{{f{f{Bjc}}}b{}}{fb}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{{ADh{c}}}}}{{f{ADj}}}Ih}{{{f{{f{If}}}}{f{{f{If}}}}}d}{{{f{If}}{f{If}}}d}{{{f{{ADh{c}}}}{f{BjGl}}}Gn{IhADn}}{{{Fn{c}}}{{ADh{c}}}Ih}{cc{}}{{FhADj}{{ADh{c}}}Ih}{{{f{{ADh{c}}}}Fh}{{B`{{f{c}}}}}Ih}{{}ADj}{{{f{Hf}}{f{{ADh{c}}}}{f{{ADh{c}}}}}{{ADh{c}}}Ih}{{ADj{f{Hf}}cc}{{ADh{e}}}{}Ih}{{{f{Hf}}{f{{ADh{c}}}}e}{{ADh{c}}}Ih{}}{{{f{Hf}}c{f{{ADh{e}}}}}{{ADh{e}}}{}Ih}{{}Fh}{{}c{}}{{{f{{ADh{c}}}}}eIh{}}{{{f{{ADh{c}}}}Fh}dIh}{{fFh}d}1{{{f{{ADh{c}}}}}{{AEd{{f{c}}{AE`{c}}AEb}}}Ih}{{{f{{ADh{c}}}}}{{AEd{egAEb}}}Ih{}{}}{{{f{{ADh{c}}}}}FhIh}0`{db}{{{f{Bj{ADh{c}}}}{B`{Hf}}}bIh}{{{f{Bj{ADh{c}}}}FhFh}bIh}{{fFhFh}c{}}01{{{f{{ADh{c}}}}Fh}{{Hh{{Fb{H`}}{Fb{H`}}}}}Ih}0{{{f{If}}}{{Fb{If}}}}{{{f{{ADh{c}}}}}{{Fb{H`}}}Ih}{fc{}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{B`{{f{c}}}}e}}}}}}}}{g{{Ob{{ADh{c}}e}}}Ih{}{{Hd{}{{Bb{{Ob{{f{c}}e}}}}}}}}{{ADjg}{{Ob{ie}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}{}}0{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{If}}}{{f{Df}}}}{{}{{f{Df}}}}{{{f{{ADh{c}}}}}{{B`{{f{Hf}}}}}Ih}{{{f{{ADh{c}}}}Fh}{{f{c}}}Ih}0{{{f{{ADh{c}}}}Fh}eIh{}}{{{f{{ADh{c}}}}}eIh{}}{{{f{{ADh{c}}}}}{{AE`{c}}}Ih}{{}c{}}{{{ADh{c}}{B`{Hf}}}{{ADh{c}}}Ih}{{{f{{ADh{c}}}}{B`{Hf}}}{{Fb{H`}}}Ih}1`{{{f{Bj{AEf{c}}}}}bIh}0{{{f{Bj{AEf{c}}}}{B`{c}}}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}bIh}{{{f{Bj{AEf{c}}}}c}bIh}{{{f{Bj{AEf{c}}}}{f{ADl}}}{{Ah{b}}}Ih}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}{{AEf{c}}}Ih}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{AEf{c}}}{{AEh{c}}}Ih}{cc{}}{{}Fh}{{}c{}}{{BhFh}{{AEf{c}}}Ih}{{{f{Bj{AEf{c}}}}}AfIh}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5````{{{f{BjAEj}}}b}{{{f{BjAEj}}{B`{{f{ADl}}}}}b}{{{f{BjAEj}}{f{ADl}}}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}`{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{AEl}}{f{BjGl}}}Gn}{cc{}}{{BhFh}{{Fb{AEj}}}}{{}AEn}{{}ADj}{{}Fh}{{}c{}}{{}d}`{{AF`AEnADj}b}{{{f{BjAEj}}}Af}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6``````````````````````````````````````````{{fh}b}{{{f{AFb}}}n}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{AFh}}{f{Cd}}}AFh}{{{f{AFh}}{f{Cd}}}{{l{c}}}C`}{{{f{{AFf{}{{AFd{c}}}}}}i{f{Bj{Dl{g}}}}}b{}{}{}{{Cd{{B`{e}}{f{g}}}{{Cb{g}}}}}}{{{f{{AFf{}{{AFd{c}}}}}}g}{{AFf{}{{AFd{c}}}}}{}{}{{Cd{e}{{Cb{c}}}}Cf}}{{{f{AFj}}Ed}Ef}{{{f{AFj}}{f{{Dl{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{AFl}}}{{Ah{Ef}}}}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AFn}}{f{Dn}}}{{Ah{Af}}}}0{{{f{AFn}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{AG`}}}AG`}{{f{f{Bjc}}}b{}}{fb}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{AG`}}{f{AG`}}}d}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{Af}}}}{{{f{AGd}}}{{Ah{{Hh{Af{AGf{Kb}}}}}}}}`{{{f{AGh}}c}{{Ah{AGh}}}{}}{{{f{AGj}}{f{Gf}}}{{Ah{{l{c}}}}}C`}`{{{f{AG`}}{f{BjGl}}}Gn}{cc{}}`{{BhcFh}AGl{}}{{BhFh}AGn}`{{{f{AH`}}Fh}{{Ah{Hn}}}}{{{f{AH`}}Fh}Hn}::{{{f{AG`}}{f{Bjc}}}bABf}{{}Fh}{{}c{}}{{{f{AHb}}}{{Ah{Gf}}}}{{{f{AHd}}}{{Ah{Gf}}}}??{{{f{AFb}}}{{B`{c}}}{}}{{{f{AFb}}}{{B`{n}}}}{{{f{AHf}}}{{B`{c}}}{}}2{{{f{AFb}}}{{B`{{Hh{cc}}}}}{}}{{{f{AFl}}}{{Ah{Fh}}}}{{{f{AHh}}FhFh}{{l{c}}}C`}{{{f{{AGb{}{{Bb{c}}}}}}e}c{}{}}0{{{f{AGd}}}{{Ah{{AGf{Kb}}}}}}{{{f{AHf}}nN`}{{Ah{{B`{c}}}}}{}}{{{f{AHj}}}AHj}{{{f{AHl}}{f{Cd}}Nb}{{Ah{Af}}}}{{{f{AHn}}c{B`{e}}}{{Ah{AHn}}}{{Hd{}{{Bb{I`}}}}}{}}{{{f{AHn}}ci}{{Ah{AHn}}}{{Hd{}{{Bb{I`}}}}}{}{}{{Cd{{B`{e}}}{{Cb{{B`{g}}}}}}}}`{{{f{AHn}}{f{Gf}}{B`{c}}}{{Ah{AHn}}}{}}{{{f{AI`}}Kb}{{l{c}}}C`}{{{f{AIb}}Kbc}{{l{e}}}{}C`}`{{{f{AFj}}d}{{l{c}}}C`}{{{f{AFj}}Ed}{{l{c}}}C`}{{{f{AId}}Dj}{{B`{n}}}}{{{f{AFb}}}{{B`{c}}}{}}{{{f{AIf}}{f{c}}}{{Ah{AIf}}}Nd}{{{f{AIh}}{f{c}}}AIhNd}{{{f{AIj}}}{{Fn{{f{{Dl{Dj}}}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{AFl}}}{{Ah{AFl}}}}9{{}c{}}`{{{f{AIl}}{f{Gf}}{f{{l{c}}}}}{{Ah{{l{c}}}}}C`}``````{{{f{{l{c}}}}{f{{l{e}}}}gik}{{l{m}}}C`C`{{Cd{ff}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}{{Cd{f}{{Cb{}}}}}C`}{{{l{c}}{l{e}}gik}{{l{m}}}C`C`{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}{{Cd{}{{Cb{}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`H`{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{l{i}}}C`C`{{AIn{B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}g}bC`C`{{Cj{B`B`}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}D`C`C`{{Cj{{f{BjDb}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}i}{{l{k}}}C`C`{}{{Cj{}{{Cb{g}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}C`C`{H`AJ`}{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}iBh}{{l{k}}}C`C`H`{{Cj{ff}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{l{c}}{l{e}}i}{{l{k}}}C`C`H`{{Cj{}{{Cb{g}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}g}{{Ah{Af}}}C`C`{{Cj{ff}{{Cb{{Fb{H`}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}gdd}{{l{c}}}C`C`{{Cj{ff}{{Cb{{Fb{H`}}}}}}}}85{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}C`C`{}{}{{Cj{B`B`}{{Cb{{Ob{{B`{g}}i}}}}}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}i}{{l{k}}}C`C`C`{{AJb{B`B`B`}}}C`}{{{f{{l{c}}}}{f{{l{e}}}}k}{{Ob{{l{m}}i}}}C`C`H`AJd{{Cj{ff}{{Cb{{Ob{gi}}}}}}}{{C`{}{{Hb{g}}}}}}2{{{f{{l{c}}}}{f{{l{e}}}}kBh}{{Ob{{l{m}}i}}}C`C`H`AJd{{Cj{ff}{{Cb{{Ob{gi}}}}}}}{{C`{}{{Hb{g}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}idd}{{Ob{{l{c}}g}}}C`C`AJd{{Cj{ff}{{Cb{{Ob{{Fb{H`}}g}}}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}m}{{Ob{{l{o}}k}}}C`C`C`{}{}{{Cj{B`B`B`}{{Cb{{Ob{{B`{i}}k}}}}}}}C`}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{}{}{{Cj{B`}{{Cb{{Ob{{B`{e}}g}}}}}}}C`}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{}{}{{Cj{}{{Cb{{Ob{eg}}}}}}}C`}{{{f{{l{c}}}}i}{{Ob{{l{k}}g}}}C`{H`AJ`}AJd{{Cj{f}{{Cb{{Ob{eg}}}}}}}{{C`{}{{Hb{e}}}}}}{{{f{{l{c}}}}e}{{l{g}}}C`{{AJf{B`}}}C`}{{{f{{l{c}}}}e}{{l{g}}}C`AJfC`}{{{f{{l{c}}}}g}{{l{i}}}C`H`{{Cj{f}{{Cb{e}}}}}{{C`{}{{Hb{e}}}}}}{{{l{c}}g}{{l{i}}}C`H`{{Cj{}{{Cb{e}}}}}{{C`{}{{Hb{e}}}}}}{{{f{{l{c}}}}g}{{l{i}}}C`{H`AJ`}{{Cj{f}{{Cb{e}}}}}{{C`{}{{Hb{e}}}}}}0{{{f{{l{c}}}}}FhA`}0{{JnJn}Jn}{{{f{Ef}}I`}{{Ah{b}}}}{{{f{{AJh{I`}}}}I`}{{Ah{b}}}}````{{fh}b}{{{f{{l{c}}}}eAJjd}{{Fn{I`}}}C`{{Bf{}{{Bb{B`}}}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{AJj}}}AJj}{{f{f{Bjc}}}b{}}{fb}{{}AJj}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{AJj}}{f{AJj}}}d}{{f{f{c}}}d{}}00{{{f{AJj}}{f{BjGl}}}Gn}{cc{}}{{{f{AJj}}{f{Bjc}}}bABf}{{}Fh}{{}c{}}{{{f{{Dl{f}}}}cI`e}{{Fn{I`}}}{{Bf{}{{Bb{B`}}}}}{{Cd{fFhf}{{Cb{d}}}}}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}5`{{Fh{f{Bj{Fn{d}}}}}b}```{{{f{AJl}}FhFh}AJl}0{{Fh{f{{Dl{Eh}}}}{f{BjEj}}}{{Ah{{AJn{Ef}}}}}}{{{f{{Dl{Eh}}}}{f{{Dl{d}}}}{f{{Dl{d}}}}}{{Ah{AK`}}}}{{{f{{Dl{Eh}}}}{f{{Dl{d}}}}{f{{Dl{d}}}}}{{Ah{{AKb{Kb}}}}}}{{Bh{f{{Dl{Eh}}}}{f{{Dl{d}}}}{f{{Dl{d}}}}}{{Ah{AKd}}}}{{Bh{f{{Dl{Af}}}}}{{Ah{AKd}}}}{{{f{Af}}}{{Ah{Fl}}}}{{{f{{Dl{Af}}}}}{{Ah{AK`}}}}{{{f{{Dl{Af}}}}}{{Ah{AKd}}}}0```{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{Ed}}}Ed}{{{f{Ej}}}Ej}{{f{f{Bjc}}}b{}}0{fb}0{{}Ed}{{}Ej}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0``{Fhb}0{{{f{Ed}}{f{Ed}}}d}{{{f{Ej}}{f{Ej}}}d}{{f{f{c}}}d{}}00000{{{f{Ed}}{f{BjGl}}}Gn}{{{f{Ej}}{f{BjGl}}}Gn}{{{f{Ej}}}Ed}{cc{}}{{{f{Ed}}}Ej}1{{{f{Ed}}{f{Bjc}}}bABf}{{{f{Ej}}{f{Bjc}}}bABf}{{}Fh}0{{}c{}}0````{{}Ed}{{}Ej}``{{{f{AJl}}FhFh}AJl}0{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077{{Edd}Ed}{{Ejd}Ej}1010{{Ejc}Ej{{Hd{}{{Bb{d}}}}}}210{EdEd}{EjEj}`{AKfKb}00{{}d}??0````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000000000000000000000{{{f{E`}}}d}{{{f{Jd}}{f{Jd}}}c{}}{{{f{Gf}}{f{Gf}}}c{}}{{GfGf}c{}}{{{f{D`}}{f{Df}}}c{}}{{D`D`}c{}}{{{f{D`}}{f{D`}}}c{}}{{ElEl}c{}}{{{f{El}}{f{El}}}c{}}{{{f{El}}{f{{Dl{Dj}}}}}c{}}{{{f{Hn}}{f{Hn}}}Hn}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKh}}}{}}000000{{{f{D`}}{f{Af}}}{{Ah{Af}}}}{{{f{El}}{f{Af}}}{{Ah{Af}}}}{{{f{Gf}}{f{Af}}}{{Ah{Af}}}}{{{f{E`}}{f{Al}}}Af}{{{f{Gf}}{f{Al}}}Af}{{{f{D`}}{f{Al}}}Af}{{{f{El}}{f{Al}}}Af}{{{f{{AEh{c}}}}{f{Al}}}AfIh}{{{f{Gf}}}d}{{{f{Gf}}}{{B`{d}}}}{{{f{E`}}}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}{{{f{E`}}Bh}{{`{{`{{Bf{}{{Bb{{B`{Bd}}}}}}}}}}}}32{{{f{E`}}c}E`{{Cd{{B`{Af}}}{{Cb{{B`{Af}}}}}}Cf}}{{{f{Gf}}c}Gf{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}Cf}}{{{f{D`}}c}D`{{Cd{{B`{{f{Df}}}}}{{Cb{{B`{{AKj{Df}}}}}}}}Cf}}{{{f{El}}c}El{{Cd{{B`{{f{{Dl{Dj}}}}}}}{{Cb{{B`{{AKj{{Dl{Dj}}}}}}}}}}Cf}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cd{{B`{{f{c}}}}}{{Cb{{B`{c}}}}}}Cf}}{{{f{E`}}c}E`{{Cj{Ch}{{Cb{Af}}}}}}{{{f{E`}}e}{{l{g}}}{}{{Cj{{B`{Ch}}}{{Cb{{B`{c}}}}}}Cf}C`}{{{f{AKl}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{AKn}}c}Af{{Cd{{f{Af}}}{{Cb{Af}}}}}}{{{f{Gf}}{f{Cd}}}Gf}{{{f{D`}}{f{Cd}}}D`}{{{f{El}}{f{Cd}}}El}{{{f{Gf}}{f{Cd}}}{{l{c}}}C`}{{{f{D`}}{f{Cd}}}{{l{c}}}C`}{{{f{El}}{f{Cd}}}{{l{c}}}C`}{{{f{D`}}c}D`{{Cj{{f{Df}}}{{Cb{{f{Df}}}}}}}}{{{f{El}}c}El{{Cj{{f{{Dl{Dj}}}}}{{Cb{{f{{Dl{Dj}}}}}}}}}}{{{f{E`}}{f{Cd}}}{{Ah{E`}}}}{{{f{E`}}e{f{Bj{Dl{c}}}}}b{}{{Cd{{B`{Af}}{f{c}}}{{Cb{c}}}}}}{{{f{Gf}}e{f{Bj{Dl{c}}}}}b{}{{Cd{{B`{d}}{f{c}}}{{Cb{c}}}}}}{{{f{D`}}e{f{Bj{Dl{c}}}}}b{}{{Cd{{B`{{f{Df}}}}{f{c}}}{{Cb{c}}}}}}{{{f{El}}e{f{Bj{Dl{c}}}}}b{}{{Cd{{B`{{f{{Dl{Dj}}}}}}{f{c}}}{{Cb{c}}}}}}{{{f{{AEh{c}}}}g{f{Bj{Dl{e}}}}}bIh{}{{Cd{{B`{{f{c}}}}{f{e}}}{{Cb{e}}}}}}{{{f{E`}}c}E`{{Cd{Af}{{Cb{Af}}}}Cf}}{{{f{Gf}}c}Gf{{Cd{d}{{Cb{d}}}}Cf}}{{{f{D`}}c}D`{{Cd{{f{Df}}}{{Cb{{AKj{Df}}}}}}Cf}}{{{f{El}}c}El{{Cd{{f{{Dl{Dj}}}}}{{Cb{{AKj{{Dl{Dj}}}}}}}}Cf}}{{{f{{AEh{c}}}}e}{{AEh{c}}}Ih{{Cd{{f{c}}}{{Cb{c}}}}Cf}}{{{f{D`}}c}D`{{Cj{Eb{f{Df}}}{{Cb{Eb}}}}Cf}}{{{f{Gf}}Ed}Ef}{{{f{D`}}Ed}Ef}{{{f{El}}Ed}Ef}{{{f{AKd}}Ed}Ef}{{{f{Gf}}{f{{Dl{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{D`}}{f{{Dl{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{El}}{f{{Dl{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{AKd}}{f{{Dl{Eh}}}}{f{Ej}}}{{Ah{Ef}}}}{{{f{Gf}}}{{Ah{Ef}}}}{{{f{D`}}}{{Ah{Ef}}}}{{{f{El}}}{{Ah{Ef}}}}{{{f{{AEh{c}}}}}{{Ah{Ef}}}Ih}{eAL`{}{{Hd{}{{Bb{c}}}}}}0{{ADje}ALb{}{{Hd{}{{Bb{c}}}}}}0{{{f{D`}}}El}{{{f{Hn}}}Hn}{{{f{Dn}}}{{f{Dn}}}}{{{f{Mj}}}{{f{Dn}}}}{{{f{ALd}}}{{f{Dn}}}}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}}{{B`{{f{{Dl{c}}}}}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}{f{{l{c}}}}{f{{l{e}}}}g}E`C`C`{{Cj{{B`{Ch}}B`B`}{{Cb{{B`{Af}}}}}}}}{{{f{Gf}}{f{Gf}}}c{}}{{GfGf}c{}}1010{f{{f{c}}}{}}0000000000000000000000000000000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000000000000000000000000000000{Dn{{Fb{Dn}}}}{{{f{AM`}}{f{AM`}}c}{{Ah{AM`}}}AMb}{{{f{AMd}}{f{Dn}}}{{Ah{Af}}}}0{{{f{Hn}}{f{Dn}}}Hn}{{{f{Dn}}Dn}Dn}{{{f{E`}}{f{Dn}}}{{Ah{Af}}}}{{{f{Gf}}{f{Dn}}}{{Ah{Af}}}}{{{f{D`}}{f{Dn}}}{{Ah{Af}}}}{{{f{El}}{f{Dn}}}{{Ah{Af}}}}{{{f{AKd}}{f{Dn}}}{{Ah{Af}}}}{{{f{AMd}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Jd}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{E`}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Gf}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{D`}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{El}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{AKd}}{f{Dn}}Fd}{{Ah{Af}}}}`{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKh}}}{}}0000{{{f{AKl}}{f{Af}}}{{Ah{Af}}}}{{{f{AKn}}{f{Af}}}{{Ah{Af}}}}{{{f{{AMf{ce}}}}}{{AMf{ce}}}C`C`}{{{f{AMh}}}AMh}{{{f{Hn}}}Hn}{{{f{AMj}}}AMj}{{{f{Dn}}}Dn}{{{f{AMl}}}AMl}{{{f{Mj}}}Mj}{{{f{AMn}}}AMn}{{{f{AN`}}}AN`}{{{f{ANb}}}ANb}{{{f{M`}}}M`}{{{f{Ln}}}Ln}{{{f{ANd}}}ANd}{{{f{ANf}}}ANf}{{{f{Lj}}}Lj}{{{f{Md}}}Md}{{{f{Cl}}}Cl}{{{f{Cn}}}Cn}{{{f{ANh}}}ANh}{{{f{ANj}}}ANj}{{{f{Dd}}}Dd}{{{f{Dh}}}Dh}{{{f{ANl}}}ANl}{{{f{An}}}An}{{{f{ANn}}}ANn}{{{f{AO`}}}AO`}{{{f{AOb}}}AOb}{{{f{AOd}}}AOd}{{{f{ADj}}}ADj}{{{f{AOf}}}AOf}{{f{f{Bjc}}}b{}}00000000000000000000000000000{fb}00000000000000000000000000000{{{f{BjMj}}Dn}b}{AOhe{}{{AL`{c}}AJ`}}0{{AOhADj}e{}{{ALb{c}}AJ`}}0{{{f{Dn}}}d}00{AOjDn}{{}Hn}{{}AMj}{{}Dn}{{}ADj}{Fh{{f{c}}}{}}{{{f{{AMf{ce}}}}}{{f{g}}}C`C`{}}1111111111111111111111111111111111{{{f{Bj{AMf{ce}}}}}{{f{Bjg}}}C`C`{}}{Fh{{f{Bjc}}}{}}0000000000000000000000000000000000{{{f{Jd}}{f{Jd}}}c{}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKh}}}{}}000000{Fhb}0000000000000000000000000000000000{{{f{AMd}}}{{f{Dn}}}}{{{f{Jd}}}{{f{Dn}}}}{{{f{Hn}}}Dn}{{{f{Mj}}}{{f{Dn}}}}`{{{f{Hn}}{f{Hn}}}d}{{{f{AMj}}{f{AMj}}}d}{{{f{Dn}}{f{ADj}}}d}{{{f{Dn}}{f{Dn}}}d}{{{f{AMl}}{f{AMl}}}d}{{{f{Mj}}{f{Mj}}}d}{{{f{AMn}}{f{AMn}}}d}{{{f{ADj}}{f{ADj}}}d}{{{f{AOf}}{f{AOf}}}d}{{{f{Hn}}{f{Hn}}d}d}{{{f{E`}}{f{E`}}}Gf}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{D`}}{f{Df}}}Gf}{{{f{El}}{f{El}}}Gf}{{{f{El}}{f{{Dl{Dj}}}}}Gf}543201{{f{f{c}}}d{}}00000000000000000000000{{{f{E`}}}{{Ah{{Hh{Af{AGf{Kb}}}}}}}}{{{f{{AMf{ce}}}}}MjC`C`}{{{f{Gf}}d}{{Ah{Gf}}}}{{{f{El}}{f{{Dl{Dj}}}}}{{Ah{El}}}}{{{f{D`}}{f{Gf}}}{{Ah{{l{Dd}}}}}}{{{f{El}}{f{Gf}}}{{Ah{{l{Dh}}}}}}{{{f{{AEh{c}}}}{f{Gf}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{AMb{f{AOl}}{f{AOl}}}{{Ah{AOl}}}}{{{f{E`}}{f{BjGl}}}Gn}{{{f{D`}}{f{BjGl}}}Gn}{{{f{El}}{f{BjGl}}}Gn}{{{f{{AEh{c}}}}{f{BjGl}}}GnIh}{{{f{AMh}}{f{BjGl}}}Gn}{{{f{Hn}}{f{BjGl}}}Gn}0{{{f{AMj}}{f{BjGl}}}Gn}{{{f{Dn}}{f{BjGl}}}Gn}0{{{f{AMl}}{f{BjGl}}}Gn}{{{f{Mj}}{f{BjGl}}}Gn}{{{f{AMn}}{f{BjGl}}}Gn}0{{{f{ADj}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{AOf}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{E`}}c}b{{Cj{{B`{Ch}}}}}}{cc{}}000000{cHnB@`}{{{f{{Dl{Dj}}}}}Hn}{{{B`{c}}}Hn{{B@b{Hn}}}}{dHn}{{{f{Df}}}Hn}55{{{f{ADj}}}Dn}{HnDn}{{{f{Hn}}}Dn}88{{{f{B@d}}}Mj}9{{{f{Hn}}}Mj}:{{{f{AOf}}}AMn};;;;;;;;;;;;;;;;;;;;;{B@fADj}{B@hADj}={{{f{ADj}}d}Dn}{cE`{{Hd{}{{Bb{{B`{{Fb{H`}}}}}}}}}}{cE`{{Hd{}{{Bb{{B`{Af}}}}}}}}{eE`{{B@j{Af}}}{{Hd{}{{Bb{c}}}}}}{cGf{{Hd{}{{Bb{d}}}}}}{eD`{{`{Df}}}{{Hd{}{{Bb{c}}}}}}{eD`{{Kj{Df}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eEl{{Kj{{Dl{Dj}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eEl{{`{{Dl{Dj}}}}}{{Hd{}{{Bb{c}}}}}}{e{{AEh{c}}}Ih{{Hd{}{{Bb{{B`{c}}}}}}}}{{Bhc}{{l{An}}}{{Bf{}{{Bb{{B`{d}}}}}}}}{{Bhe}D`{{Kj{Df}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}El{{Kj{{Dl{Dj}}}}}{{Bf{}{{Bb{{B`{c}}}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{{B`{c}}}}}}}};:98765{eAKd{{Kj{{Dl{Dj}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{eAKd{{`{{Dl{Dj}}}}}{{Hd{}{{Bb{c}}}}}}6{{Bhc}{{l{An}}}{{Bf{}{{Bb{d}}}}}}{{Bhe}D`{{Kj{Df}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}El{{Kj{{Dl{Dj}}}}}{{Bf{}{{Bb{c}}}}}}{{Bhe}{{AEh{c}}}Ih{{Bf{}{{Bb{c}}}}}}{cE`{{Hj{}{{Bb{{B`{Af}}}}}}}}{cGf{{Hj{}{{Bb{{B`{d}}}}}}}}{cGf{{Hj{}{{Bb{d}}}}}}{eD`{{Kj{Df}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eD`{{`{Df}}JfJhB@l}{{Hj{}{{Bb{c}}}}}}{eEl{{Kj{{Dl{Dj}}}}JfJh}{{Hj{}{{Bb{{B`{c}}}}}}}}{eEl{{`{{Dl{Dj}}}}JfJhB@l}{{Hj{}{{Bb{c}}}}}}{{cBhDn}E`{{Hj{}{{Bb{{B`{Af}}}}}}}}{{Bh{f{{Dl{d}}}}}Gf}{{Bh{f{{Dl{c}}}}}D`{{Kj{Df}}}}{{Bh{f{{Dl{c}}}}}El{{Kj{{Dl{Dj}}}}}}{{Bh{f{{Dl{c}}}}}{{AEh{c}}}Ih}{{Bh{f{{Dl{{B`{d}}}}}}}Gf}{{Bh{f{{Dl{{B`{c}}}}}}}D`{{Kj{Df}}}}{{Bh{f{{Dl{{B`{c}}}}}}}El{{Kj{{Dl{Dj}}}}}}{{Bh{f{{Dl{{B`{c}}}}}}}{{AEh{c}}}Ih}{cGf{{Hl{}{{Bb{{B`{d}}}}}}}}{{{Fn{c}}ADj}{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{Fn{c}}ADj}{{AJ`{}{{ALf{e}}{ALh{c}}{ALj{g}}}}}{ALl{ALn{e}}}A@n{{Gd{}{{Bb{e}}}}HlJfJh}}{{FhcADj}{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{Bh{f{Af}}Fh}E`}{{BhdFh}Gf}{{Bh{f{Df}}Fh}D`}{{Bh{f{{Dl{Dj}}}}Fh}El}{{Bh{f{{Dl{Dj}}}}Fh}AKd}{{BhcFh}{{AEh{c}}}Ih}{{FhADj}{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{BhFh}E`}{{BhFh}Gf}{{BhFh}D`}{{BhFh}El}{{BhFh}AKd}{{BhFh}{{AEh{c}}}Ih}{{BhFh{f{Dn}}}E`}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}Fh}{{B`{c}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{Jd}}Fh}{{Ah{Hn}}}}{{{f{AMd}}Fh}{{Ah{Hn}}}}0{{{f{E`}}Fh}{{Ah{Hn}}}}{{{f{Gf}}Fh}{{Ah{Hn}}}}{{{f{D`}}Fh}{{Ah{Hn}}}}{{{f{El}}Fh}{{Ah{Hn}}}}{{{f{AKd}}Fh}{{Ah{Hn}}}}{{{f{{AEh{c}}}}Fh}{{Ah{Hn}}}Ih}{{{f{Jd}}Fh}Hn}{{{f{AMd}}Fh}Hn}0{{{f{E`}}Fh}Hn}{{{f{Gf}}Fh}Hn}{{{f{D`}}Fh}Hn}{{{f{El}}Fh}Hn}{{{f{AKd}}Fh}Hn}{{{f{{AEh{c}}}}Fh}HnIh}{{{f{E`}}Fh}{{B`{Af}}}}{{}Dn}00000000000000000000000{{{f{E`}}}Af}{{{f{{AEh{c}}}}Fh}{{B`{{f{If}}}}}Ih}0{{{f{Hn}}}{{B`{{f{Df}}}}}}{{{f{B@n}}Fh}Hn}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}Fh}{{B`{c}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}Fh}{{{f{D`}}}Fh}{{{f{AKd}}}Fh}{{{f{E`}}dd}{{Ah{Al}}}}{{{f{Gf}}dd}{{Ah{Al}}}}{{{f{D`}}dd}{{Ah{Al}}}}{{{f{El}}dd}{{Ah{Al}}}}{{{f{AKd}}dd}{{Ah{Al}}}}{{{f{{AEh{c}}}}dd}{{Ah{Al}}}Ih}{{{f{E`}}{f{E`}}}Gf}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{D`}}{f{Df}}}Gf}{{{f{El}}{f{El}}}Gf}{{{f{El}}{f{{Dl{Dj}}}}}Gf}543201{{{f{Hn}}{f{Bjc}}}bABf}{{{f{AMj}}{f{Bjc}}}bABf}{{{f{Dn}}{f{Bjc}}}bABf}{{{f{Mj}}{f{Bjc}}}bABf}{{{f{AMn}}{f{Bjc}}}bABf}{{{f{ADj}}{f{Bjc}}}bABf}{{{f{AOf}}{f{Bjc}}}bABf}{{{f{Hn}}{f{Bjc}}d}bABf}{{{f{Hn}}}I`}{DnDn}{{}Fh}0000000000000000000000000000000000{{{f{E`}}}{{f{Dn}}}}{{{f{Dn}}}{{B`{{f{Dn}}}}}}{{{f{ADj}}}{{B`{{f{ADj}}}}}}{{}c{}}0000000000000000000000000000000000{{}Eh}{{BA`{B`{Fh}}Fh}{{Ah{Jd}}}}{{BA`{B`{Fh}}Fh}Jd}{{{f{E`}}}c{}}{{{f{Gf}}}c{}}{{{f{D`}}}c{}}{{{f{El}}}c{}}{{{f{AKd}}}c{}}{{{f{{AEh{c}}}}}eIh{}}{{BAbDn}{{Ah{L`}}}}{JdAf}{BA`Af}{HnHn}{{{f{Dn}}}d}00{{{f{Hn}}}d}1111010111101{{{f{ADj}}}d}12121222212222120{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}}{{AEd{cgAEb}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{E`}}}{{`{{Bf{}{{Bb{Kb}}}}}}}}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}}{{B`{c}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{Dn}}}{{f{Dn}}}}{{{f{E`}}{f{E`}}}Gf}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{D`}}{f{Df}}}Gf}{{{f{El}}{f{{Dl{Dj}}}}}Gf}{{{f{El}}{f{El}}}Gf}543201{{{f{AM`}}{f{AM`}}}{{Ah{{Hh{AM`AM`}}}}}}{{E`E`}{{Ah{{Hh{E`E`}}}}}}{{{f{Dn}}{f{Dn}}}{{Ah{d}}}}{{{f{AMj}}}{{B`{Dn}}}}{{{f{Gf}}}{{B`{d}}}}{{{f{Gf}}}L`}{{{f{D`}}}L`}{{{f{El}}}L`}{{{f{Gf}}}{{B`{n}}}}{{{f{AKl}}}{{B`{Ij}}}}{{{f{AKn}}}{{B`{n}}}}{{{f{AKl}}}L`}{{{f{AKn}}}L`}{{{f{Dn}}{f{Dn}}}{{Ah{Dn}}}}9876{{Bh{f{{Dl{Dj}}}}FhFh}Gf}{{{f{Jd}}{f{Jd}}}c{}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKh}}}{}}000000{{{f{D`}}}{{Ah{Fh}}}}{{{f{El}}}{{Ah{Fh}}}}{{{f{Mj}}}{{f{Bh}}}}`{{}c{}}00{{Bhc}D`{{Kj{{Dl{{f{Df}}}}}}}}{{Bhc}D`{{Kj{{Dl{{B`{{f{Df}}}}}}}}}}{{Bhc}D`{{Kj{{Dl{{AKj{Df}}}}}}}}{{Bhc}D`{{Kj{{Dl{{B`{{AKj{Df}}}}}}}}}}{{Bhc}El{{Kj{{Dl{{B`{{AKj{{Dl{Dj}}}}}}}}}}}}{{Bhc}El{{Kj{{Dl{{f{{Dl{Dj}}}}}}}}}}{{Bhc}El{{Kj{{Dl{{B`{{f{{Dl{Dj}}}}}}}}}}}}{{Bhc}El{{Kj{{Dl{{AKj{{Dl{Dj}}}}}}}}}}{{Bhe}{{AEh{c}}}Ih{{Kj{{Dl{{B`{c}}}}}}}}{{Bh{f{{Dl{c}}}}}{{AEh{c}}}Ih}{{BhDn}Mj}{Bh{{AEh{c}}}Ih}{{{f{E`}}FhFh}E`}{{{f{Gf}}FhFh}Gf}{{{f{D`}}FhFh}D`}{{{f{El}}FhFh}El}{{{f{AKd}}FhFh}AKd}{{{f{{AEh{c}}}}FhFh}{{AEh{c}}}Ih}{{Bh{Fn{c}}}{{AEh{c}}}Ih}{{Bh{Fn{c}}Hf}{{AEh{c}}}Ih}{{{l{c}}}{{AMf{ec}}}C`C`}{{}AMl}{Gfc{}}{{{f{Gf}}}c{}}{{{f{E`}}{f{E`}}}Gf}{{{f{Gf}}{f{Gf}}}Gf}{{{f{D`}}{f{Df}}}Gf}{{{f{D`}}{f{D`}}}Gf}{{{f{El}}{f{{Dl{Dj}}}}}Gf}{{{f{El}}{f{El}}}Gf}543210{{{f{E`}}}{{Ah{{AGf{Kb}}}}}}9{{{f{E`}}}{{`{{Ml{}{{Bb{{B`{Af}}}}}}}}}}{{{f{D`}}}{{`{{Ml{}{{Bb{{B`{{f{Df}}}}}}}}}}}}{{{f{BjE`}}}{{`{{Mn{}{{Bb{{B`{Af}}}}}}}}}}{{{f{D`}}}{{`{{Mn{}{{Bb{{B`{{f{Df}}}}}}}}}}}}{{{f{Hn}}{f{Hn}}}{{B`{BAd}}}}{{{f{AMn}}{f{AMn}}}{{B`{BAd}}}}{{{f{{AMf{ce}}}}}{{f{{l{e}}}}}C`C`}{{{f{Jd}}}{{B`{Fh}}}}{{{f{{AMf{ANnJb}}}}}{{B`{Fh}}}}{{{f{AKl}}nN`}{{Ah{{B`{Ij}}}}}}{{{f{AKn}}nN`}{{Ah{{B`{n}}}}}}{{{f{AKl}}nN`}{{Ah{L`}}}}{{{f{AKn}}nN`}{{Ah{L`}}}}{{BhFhn}{{Ah{Gf}}}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKh}}}{}}000000{{{f{E`}}}E`}{{{f{Gf}}}Gf}{{{f{D`}}}D`}{{{f{El}}}El}{{{f{AKd}}}AKd}{{{f{{AEh{c}}}}}{{AEh{c}}}Ih}`{{{f{Jd}}}Fh}{{{f{{AMf{ANnJb}}}}}Fh}{{{f{Gf}}c{B`{d}}}{{Ah{Gf}}}{{Hd{}{{Bb{I`}}}}}}{{{f{D`}}c{B`{{f{Df}}}}}{{Ah{D`}}}{{Hd{}{{Bb{I`}}}}}}{{{f{El}}c{B`{{f{{Dl{Dj}}}}}}}{{Ah{El}}}{{Hd{}{{Bb{I`}}}}}}{{{f{Gf}}ce}{{Ah{Gf}}}{{Hd{}{{Bb{I`}}}}}{{Cd{{B`{d}}}{{Cb{{B`{d}}}}}}}}{{{f{D`}}ce}{{Ah{D`}}}{{Hd{}{{Bb{I`}}}}}{{Cd{{B`{{f{Df}}}}}{{Cb{{B`{Db}}}}}}}}{{{f{El}}ce}{{Ah{El}}}{{Hd{}{{Bb{I`}}}}}{{Cd{{B`{{f{{Dl{Dj}}}}}}}{{Cb{{B`{{Fn{Dj}}}}}}}}}}{{{f{Gf}}{f{Gf}}{B`{d}}}{{Ah{Gf}}}}{{{f{D`}}{f{Gf}}{B`{{f{Df}}}}}{{Ah{D`}}}}{{{f{El}}{f{Gf}}{B`{{f{{Dl{Dj}}}}}}}{{Ah{El}}}}{{{f{BjE`}}}b}{{{f{BjE`}}Dn}b}{{{f{BjMj}}Bh}b}{{{f{E`}}Kb}E`}{{{f{Gf}}Kb}Gf}{{{f{D`}}Kb}D`}{{{f{El}}Kb}El}{{{f{AKd}}Kb}AKd}{{{f{{AEh{c}}}}Kb}{{AEh{c}}}Ih}{{{f{E`}}Kb{B`{{f{Af}}}}}E`}{{{f{Gf}}Kb{B`{d}}}Gf}{{{f{D`}}Kb{B`{{f{Df}}}}}D`}{{{f{El}}Kb{B`{{f{{Dl{Dj}}}}}}}El}{{{f{AKd}}Kb{B`{{f{{Dl{Dj}}}}}}}AKd}{{{f{{AEh{c}}}}Kb{B`{{Id{c}}}}}{{l{{Id{c}}}}}Ih}{{{f{Gf}}d}Gf}{{{f{D`}}d}D`}{{{f{El}}d}{{l{Dh}}}}{{{f{AKd}}d}AKd}{{{f{Gf}}Ed}{{l{An}}}}{{{f{D`}}Ed}{{l{Dd}}}}{{{f{El}}Ed}{{l{Dh}}}}{{{f{AKd}}Ed}AKd}{{{f{AKl}}Dj}L`}{{{f{AKn}}Dj}L`}{{{f{Hn}}}{{AKj{Df}}}}{{{f{Hn}}{f{Dn}}}{{B`{Hn}}}}`{{{f{Jd}}{f{Jd}}}c{}}{{{f{E`}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{c}}}}{f{Af}}}{{Ob{AfAKh}}}{}}000000{{{f{Gf}}}{{B`{I`}}}}{{{f{Gf}}}L`}{{{f{El}}}L`}{{{f{D`}}{f{Ef}}}D`}{{{f{D`}}{f{c}}}D`{{Kj{{Dl{I`}}}}Nd}}{{{f{El}}{f{Ef}}}El}{{{f{El}}{f{c}}}El{{Kj{{Dl{I`}}}}Nd}}{{{f{Dn}}AMl}ADj}{{{f{Mj}}AMl}B@d}{AMnAOf}{{{f{Dn}}BhAMl}B@d}{AMn{{f{Df}}}}{{{f{D`}}Fh}{{Ah{Af}}}}{{{f{BjE`}}Dn}b}{{{f{ADj}}}{{f{ADj}}}}{{{f{E`}}}{{Ah{Nn}}}}{fc{}}00000000000000000000000000000{{{f{Dn}}}Dn}{{{f{ADj}}}BAf}{{{f{Jd}}Fh}{{Ah{{AKj{Jd}}}}}}{{{f{{AMf{ANnJb}}}}Fh}{{Ah{{AKj{{AMf{ANnJb}}}}}}}}{fDb}00{{{f{El}}}D`}{{{f{Hn}}{f{Hn}}}d}{{{f{E`}}c}{{Ah{E`}}}{{Cj{Ch}{{Cb{{Ah{Af}}}}}}}}{{{f{E`}}e}{{Ah{{l{g}}}}}{}{{Cj{{B`{Ch}}}{{Cb{{Ah{{B`{c}}}}}}}}Cf}C`}{g{{Ob{AL`e}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{{ADjg}{{Ob{ALbe}}}{}{}{{Hd{}{{Bb{{Ob{ce}}}}}}}}0{AOh{{Ob{eg}}}{}{{AL`{c}}AJ`}{}}0{{AOhADj}{{Ob{eg}}}{}{{ALb{c}}AJ`}{}}0{{{f{Hn}}}{{Ah{c}}}Kn}{c{{Ob{e}}}{}{}}0000000000000000000000000000000000{{}{{Ob{c}}}{}}0000000000000000000000000000000000{{{f{Hn}}{f{Dn}}}{{Ah{Hn}}}}{{{f{Dn}}AMl}{{Ah{ADj}}}}{f{{Ob{G`BAh}}}}00{{{f{E`}}{f{{l{c}}}}e}{{Ah{E`}}}C`{{Cj{{B`{Ch}}B`}{{Cb{{Ah{{B`{Af}}}}}}}}}}{fOd}0000000000000000000000000000000000{{{f{ADj}}}ADj}{{{f{Gf}}}{{Ah{Gf}}}}{{{f{D`}}}{{Ah{D`}}}}{{{f{El}}}{{Ah{El}}}}{{{f{{AEh{c}}}}}{{Ah{{l{{Id{c}}}}}}}Ih}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}Fh}cA@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}0{{{f{Dn}}Hn}d}{{{f{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}}}gA@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{AKl}}Dj}L`}{{{f{AKn}}Dj}L`}{{{f{Gf}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BAj}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BAl}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AOl}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BAn}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{BA`}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AKl}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{D`}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{El}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{AKd}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}Ih}{{{f{Gf}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{BAj}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{BAl}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{AOl}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{BAn}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{BB`}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{BBb}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{BBd}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{BBf}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{BA`}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{AKl}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{AKn}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{D`}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{El}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{AKd}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{{f{{AEh{c}}}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}Ih}{{}c{}}0000000000000000000000000000000000{Fhc{}}0{Fh{{BBh{ce}}}{}{}}{{{f{{Dl{Of}}}}e}c{}{{Oh{{f{Ef}}}{{Cb{c}}}}}}{{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}{B`{Hf}}}{{AJ`{}{{ALf{c}}{ALh{e}}{ALj{g}}}}}A@n{ALl{ALn{c}}}{{Gd{}{{Bb{c}}}}HlJfJh}}{{{f{Dn}}}Hn}{{{f{E`}}{f{{l{c}}}}e}E`C`{{Cj{{B`{Ch}}B`}{{Cb{{B`{Af}}}}}}}}```````````{{fh}b}{{{f{AM`}}}d}{{AM`d}AM`}{{{f{BjBBj}}{B`{{f{Df}}}}}b}{{{f{BjAM`}}{f{AM`}}}{{Ah{b}}}}{{{f{BjBBj}}}b}{{{f{BjBBj}}{f{Df}}}b}{{{f{AM`}}Ed}Ef}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{AM`}}{f{AM`}}c}{{Ah{AM`}}}AMb}{{{f{AM`}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{AM`}}}AM`}{{f{f{Bjc}}}b{}}{fb}{{}BBl}{Fh{{f{c}}}{}}000{Fh{{f{Bjc}}}{}}000{{BBjc}AM`{{Hd{}{{Bb{{B`{{f{Df}}}}}}}}}}{Fhb}000{{{f{AM`}}}{{f{Dn}}}}{{{f{AM`}}{f{Df}}}c{}}{{{f{AM`}}{f{D`}}}c{}}{{{f{AM`}}{f{AM`}}}c{}}021{{AMb{f{AOl}}{f{AOl}}}{{Ah{AOl}}}}{BBjAM`}{BBl{{Lf{BBn}}}}{cc{}}000{{AOl{Lf{BBn}}dBC`}AM`}{{AOlBC`}AM`}{{{f{D`}}{f{AOj}}BC`}{{Ah{AM`}}}}{{BhdFhBC`}AM`}{{{f{AM`}}Fh}{{Ah{Hn}}}}{{{f{AM`}}Fh}Hn}{{{f{AM`}}}{{f{{Lf{BBn}}}}}}=<;;=<{{}Fh}000{{}c{}}000{{}Eh}1{AM`Af}{{{f{AM`}}}d}0{{{f{AM`}}}BCb}{{{f{AM`}}}Fh}{{{f{AM`}}{f{Df}}}c{}}{{{f{AM`}}{f{AM`}}}c{}}{{{f{AM`}}{f{D`}}}c{}}102{{{f{AM`}}{f{AM`}}}{{Ah{{Hh{AM`AM`}}}}}}{{E`E`}{{Ah{{Hh{E`E`}}}}}}{{{f{AM`}}}L`}{{{f{BjBBl}}{f{{Lf{BBn}}}}}{{Ah{b}}}}1{{{f{AM`}}}{{Ah{Fh}}}}{{{f{AM`}}}{{f{Bh}}}}{{BhFhBC`}BBj}{{{Lf{BBn}}}BBl}{{{f{BjBCb}}}{{B`{c}}}{}}9:;;9:<{{{f{AM`}}}{{f{AOl}}}}{{{f{BjBBj}}{f{Df}}}{{Hh{Mbd}}}}`{{{f{BCb}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{AM`}}d}AM`}{{{f{AM`}}Ed}AM`}`{{{f{AM`}}AMld}Fl}{{{f{AM`}}{f{AOj}}BCd}AM`}{{{f{AM`}}}{{Ah{AM`}}}}{{{f{AM`}}}AM`}{fc{}}{c{{Ob{e}}}{}{}}000{{}{{Ob{c}}}{}}000{fOd}0005{{{f{AM`}}}d}{{{f{AM`}}}{{Ah{BCf}}}}{{}c{}}000``````{{fh}b}0{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{AOjBBn}{{{f{BC`}}}BC`}{{{f{BBn}}}BBn}{{f{f{Bjc}}}b{}}0{fb}0{{}BC`}{{}BBn}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{Fhb}0{{{f{BC`}}{f{BC`}}}d}{{{f{BBn}}{f{Df}}}{{B`{Mb}}}}{{{f{BC`}}{f{BjGl}}}Gn}{{{f{BBn}}{f{BjGl}}}Gn}{cc{}}0{{{f{BBn}}Mb}{{f{Df}}}}{{{f{BBn}}}{{f{AOj}}}}{{{f{BBn}}Mb}{{B`{{f{Df}}}}}}{{}Fh}0{{}c{}}0{{{f{BBn}}}d}0{{{f{BBn}}}Fh}{{{f{BBn}}{f{BBn}}}d}{fc{}}0{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}077`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{}BCh}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{{}b}{{{f{BjBCh}}}b}{Fhb}2{cc{}}6{{}Fh}{{}c{}}=<;{{}d}1```````660````````````````````````{{{f{BCj}}}{{f{Df}}}}<<;;`9{{{f{BCj}}}f}:9966`{{{f{BCl}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{BCj}}{f{BjGl}}}{{Ob{bAOn}}}}07{cBCj{{B@b{{AKj{Df}}}}}}8{{}{{Kf{{f{Df}}BCl}{{Cb{b}}}}}}8877{cAKhAJd}{{{f{Df}}}BCj}````{{{Kf{{f{Df}}BCl}{{Cb{b}}}}}b}{cAKhBCn}{fDb}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{f{{Ob{G`BAh}}}}{fOd}0{{}c{}}0`````````````````{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BD`}}}BD`}{{f{f{Bjc}}}b{}}{fb}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{BjGl}}MfFh}Gn}{cc{}}{{}BDb}{{}BD`}{{}{{B`{Fh}}}}{{}Db}{{}d}{{}Fh}{{}c{}}{{{B`{BDb}}}b}{BD`b}{{{B`{Fh}}}b}2{{{B`{d}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}8```````````{{fh}b}00{{{f{BjBCf}}{Fn{Eh}}{f{BDd}}}{{Ah{b}}}}{{{f{BjBCf}}{Fn{Af}}{f{BDd}}}{{Ah{b}}}}{{{f{BCf}}{f{Cd}}}{{Fn{Eh}}}}0{{{f{BCf}}{f{Gf}}}{{Ah{BCf}}}}{{{Fn{Eh}}}BCf}{{{f{BCf}}{f{{Dl{Bh}}}}}{{Ah{BCf}}}}0{{{f{BCf}}{f{{Dl{Bh}}}}{f{BDd}}d}{{Ah{BCf}}}}{{{f{BCf}}KbFh}BCf}{{{f{BCf}}}BCf}{{{f{BCf}}{f{BCf}}}c{}}{{{f{BCf}}{f{Af}}}c{}}{{BCf{f{Af}}}c{}}{{{f{BjBCf}}}{{f{BjBCf}}}}{{{f{BjBCf}}{f{Df}}e}{{Ah{{f{BjBCf}}}}}BDf{{Oh{{f{Eh}}}{{Cb{c}}}}}}{{{f{BjBCf}}Fhe}{{Ah{{f{BjBCf}}}}}BDf{{Oh{{f{Eh}}}{{Cb{c}}}}}}22{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{BCf}}}{{`{{Bf{}{{Bb{Fh}}}}}}}}9{{{f{BDh}}}BDh}{{{f{BDj}}}BDj};{{f{f{Bjc}}}b{}}00{fb}00`{{{f{BCf}}{f{Df}}}{{Ah{{f{Eh}}}}}}{{{f{BCf}}e}{{Ah{{Fn{{f{Eh}}}}}}}{{Kj{Df}}}{{Hd{}{{Bb{c}}}}}}{{}BDj}{{}BCf}{Fh{{f{c}}}{}}0000{Fh{{f{Bjc}}}{}}0000{{BCf{f{Af}}}c{}}{{{f{BCf}}{f{BCf}}}c{}}{{{f{BCf}}{f{Af}}}c{}}{Fhb}0000{{{f{BCf}}{f{Df}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{Df}}}{{Ah{Eh}}}}{{{f{BCf}}e}BCf{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCf}}{f{{BDl{Bh}}}}}BCf}{{{f{BCf}}{B`{{f{{Dl{c}}}}}}}{{Ah{BCf}}}{}}{{{f{BCf}}}{{Fn{Dn}}}}<{{{f{BDn}}}BCf}{{{f{BDd}}}BCf}{{{f{BDj}}{f{BDj}}}d}{{{f{BCf}}{f{BCf}}}d}00{{f{f{c}}}d{}}00{{{f{BCf}}}Fh}`{{{f{BCf}}e}{{Ah{BCf}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCf}}{Fn{Eh}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{BCf}}}{{Ah{b}}}}{{{f{BCf}}}{{Fn{Mj}}}}{{{f{BCf}}AG`}{{Ah{BCf}}}}{{{f{BCf}}{f{Gf}}}{{Ah{BCf}}}}{{{f{BDh}}{f{BjGl}}}Gn}{{{f{BDj}}{f{BjGl}}}Gn}{{{f{BCf}}{f{BjGl}}}Gn}0{cc{}}0000{cBCf{{Hd{}{{Bb{Af}}}}}}{cBCf{{Hd{}{{Bb{Eh}}}}}}{{{f{{Dl{BE`}}}}}{{Ah{BCf}}}}{{{f{{Dl{BE`}}}}{f{BDd}}}{{Ah{BCf}}}}{{c{f{BDd}}}{{Ah{BCf}}}{{Bf{}{{Bb{{f{BE`}}}}}}}}{{{f{BCf}}Fh}{{B`{{Fn{Hn}}}}}}{{{f{BCf}}{f{Df}}}{{B`{Fh}}}}{{{f{BCf}}}{{Fn{{f{Bh}}}}}}{{{f{BCf}}}{{Fn{Bh}}}}{{{f{BCf}}}{{Fn{{f{Df}}}}}}{{{f{BCf}}}{{f{{Dl{Eh}}}}}}{{{f{BjBCf}}}{{f{Bj{Fn{Eh}}}}}}{{{f{BCf}}Fh}{{Ah{BE`}}}}{{{f{BCf}}Fh{f{BjBE`}}}{{Ah{b}}}}{{{f{BCf}}Fh{f{BjBE`}}}b}{{{f{BCf}}}{{B`{{Ah{Dn}}}}}}`{{{f{BCf}}e}{{Ah{BEb}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{{f{BCf}}{Fn{Eh}}dd}{{Ah{BEb}}}}{{{f{BDj}}{f{Bjc}}}bABf}{{{f{BjBCf}}{B`{Nh}}}{{Ah{BAn}}}}{{{f{BCf}}{B`{Fh}}}BCf}{{{f{BCf}}}Fh}{{{f{BCf}}{f{{Dl{Eh}}}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{{Dl{Eh}}}}}{{Ah{{f{BjBCf}}}}}}{{{f{BjBCf}}{f{{Dl{Eh}}}}}{{f{BjBCf}}}}{{{f{BCf}}Fh}{{f{c}}}{}}{{{f{BCf}}{f{Df}}}{{f{c}}}{}}{{{f{BCf}}BEd}{{f{c}}}{}}{{{f{BCf}}{BEf{Fh}}}{{f{c}}}{}}{{{f{BCf}}{BEh{Fh}}}{{f{c}}}{}}{{{f{BCf}}{BEj{Fh}}}{{f{c}}}{}}{{{f{BCf}}{BEl{Fh}}}{{f{c}}}{}}{{{f{BCf}}{Mh{Fh}}}{{f{c}}}{}}{{}Fh}0000{{{f{BjBCf}}Fhc}{{Ah{{f{BjBCf}}}}}BDf}{{}c{}}000000{{{f{BCf}}}{{Ah{Gf}}}}{{{f{BCf}}}d}1{{{f{BCf}}}{{`{{Jj{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCf}}}{{`{{Bf{}{{Bb{BCf}}}}}}}}{{{f{BCf}}AMld}BEn}{{{f{BCf}}}BF`}{{{f{BCf}}}Fh}4{{{f{BCf}}}{{Ah{{B`{Af}}}}}}{{{f{BCf}}BDh}{{Ah{{B`{Af}}}}}}1{{{f{BCf}}{f{Af}}}c{}}{{BCf{f{Af}}}c{}}{{{f{BCf}}{f{BCf}}}c{}}55{{{Fn{Eh}}}{{Ah{BCf}}}}{{{Fn{Eh}}}BCf}111{{{f{BjBEn}}}{{B`{c}}}{}}{{{f{BjBF`}}}{{B`{c}}}{}}{{{f{BCf}}}BCf}{{{f{BCf}}}{{`{{Ml{}{{Bb{{f{Af}}}}}}}}}}{{{f{BCf}}ed}{{Ah{{Fn{BCf}}}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}0{{BCfe}{{Ah{c}}}{}{{Cd{BCf}{{Cb{{Ah{c}}}}}}}}{{{f{BjBCf}}e}{{Ah{c}}}{}{{Cd{{f{BjBCf}}}{{Cb{{Ah{c}}}}}}}}{{BCfgc}{{Ah{e}}}{}{}{{Cd{BCfc}{{Cb{{Ah{e}}}}}}}}{{{f{BjBCf}}}{{B`{Eh}}}}{{{f{BCf}}{f{BCf}}}d}><={{{f{BjBCf}}{f{Df}}Bh}{{Ah{{f{BjBCf}}}}}}{{{f{BjBCf}}{f{Df}}c}{{Ah{{f{BjBCf}}}}}BFb}{{{f{BjBCf}}Fhc}{{Ah{{f{BjBCf}}}}}BDf}{{{f{BjBCf}}Bhc}{{Ah{{f{BjBCf}}}}}BFb};`{{{f{BCf}}{f{Af}}dd{B`{Il}}}{{Ah{BCf}}}}0{{{f{BCf}}Fhdd{B`{Il}}}{{Ah{BCf}}}}{{{f{BCf}}}BDd}{{{f{BCf}}{f{BCf}}}{{Ah{b}}}}{{{f{BCf}}e}{{Ah{BCf}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCf}}Fh}{{B`{{f{Eh}}}}}}{{{f{BCf}}c}{{Ah{BCf}}}{{BFd{Fh}}}}{{{f{BCf}}c}{{Ah{{Fn{Eh}}}}}{{BFf{Bh}}}}3{{{f{BCf}}e{f{BFh}}}{{Ah{BCf}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCf}}e{f{BDd}}}{{Ah{BCf}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BjBCf}}e}{{Ah{b}}}{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{BCf}}}{{Hh{FhFh}}}}{{{f{BCf}}Kb}BCf}{{{f{BCf}}}d}{{{f{BjBCf}}}b}{{{f{BCf}}}Fh}{{{f{BEn}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{BF`}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{BCf}}KbFh}BCf}00{{{f{BCf}}cEj}{{Ah{BCf}}}{{BFf{Bh}}}}{{{f{BjBCf}}cEj}{{Ah{{f{BjBCf}}}}}{{BFf{Bh}}}}{{{f{BCf}}Kb}{{Hh{BCfBCf}}}}0{{{f{BjBCf}}}{{`{{Bf{}{{Bb{BCf}}}}}}}}{{BCfFhd}{{Fn{BCf}}}}{{{f{BCf}}{f{Af}}}c{}}{{{f{BCf}}{f{BCf}}}c{}}{{BCf{f{Af}}}c{}}{{{f{BCf}}BDh}{{Ah{{B`{Af}}}}}}{{{f{BCf}}{B`{Fh}}}BCf}{{{f{BCf}}{f{Ef}}}{{Ah{BCf}}}}{BCf{{Fn{Eh}}}}{{{f{BCf}}{f{Ef}}}BCf}{{{f{BCf}}{f{Ef}}d}BCf}{{{f{BCf}}BFj}{{Ah{Nn}}}}{fc{}}00{fDb}{{{f{BjBCf}}{B`{{f{Df}}}}{B`{{O`{Db{Fn{Db}}}}}}}{{Ah{BCf}}}}{{{f{BjBCf}}{B`{{f{Df}}}}{B`{{O`{Bh{Fn{Bh}}}}}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{Df}}e}{{Ah{{f{BjBCf}}}}}BDf{{Oh{{f{Af}}}{{Cb{{Ah{c}}}}}}}}{{{f{BjBCf}}Fhe}{{Ah{{f{BjBCf}}}}}BDf{{Oh{{f{Eh}}}{{Cb{{Ah{c}}}}}}}}{c{{Ob{e}}}{}{}}000{BFl{{Ah{BCf}}}}{{{Hh{BFn{f{BDn}}}}}{{Ah{BCf}}}}2{{c{f{BDd}}}{{Ah{BCf}}}{{Bf{}{{Bb{{Ah{{f{BE`}}}}}}}}}}{{{f{BCf}}{f{Df}}}{{Ah{Fh}}}}{{}{{Ob{c}}}{}}0000{f{{Ob{G`BAh}}}}{fOd}0000{{{f{BCf}}{B`{{f{{Dl{Db}}}}}}BDj{B`{{Hh{KbFh}}}}}{{Ah{BCf}}}}{{{f{BCf}}d{B`{{Fn{Bh}}}}BDj{B`{{Hh{KbFh}}}}}{{Ah{BCf}}}}1{{{f{BCf}}{f{BCf}}}{{Ah{BCf}}}}{{{f{BjBCf}}{f{BCf}}}{{Ah{{f{BjBCf}}}}}}{{{f{BjBCf}}{f{BCf}}}b}{{}c{}}0000{{{f{BCf}}}Fh}{{{f{BjBCf}}c}{{Ah{{f{BjBCf}}}}}BDf}{{{f{BjBCf}}c{f{BDd}}}{{Ah{{f{BjBCf}}}}}BDf}{{{f{BjBCf}}Eh}{{f{BjBCf}}}}{{{f{BCf}}Bh{B`{I`}}}{{Ah{BCf}}}}{{{f{BjBCf}}Bh{B`{I`}}}{{f{BjBCf}}}}`````{{fh}b}0{{Ehc}e{AbKn}{}}{{EhEh}c{}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}c}e{AbKn}{}}{{{f{Eh}}{f{Al}}}Eh}0000000{{{f{Eh}}{f{Al}}nN`}Eh}1{{{f{Eh}}{f{Al}}Dj}Eh}{{{f{BjEh}}{f{Eh}}}{{Ah{{f{BjEh}}}}}}{{{f{Eh}}Ed}Ef}{{{f{Eh}}}{{f{Af}}}}{{{f{BG`}}}{{f{Af}}}}{{{f{Eh}}}{{B`{{f{BG`}}}}}}{{{f{Eh}}}{{B`{{f{Af}}}}}}{{{f{BG`}}}Af}{{{f{Eh}}}{{Ah{{f{El}}}}}}{{{f{Eh}}}{{Ah{{f{AKd}}}}}}{{{f{Eh}}}{{B`{BGb}}}}?>{{{f{Eh}}{f{Eh}}}{{Ah{Eh}}}}{{EhEh}c{}}{{{f{Eh}}{f{Eh}}}c{}}10{{{f{Eh}}}{{Ah{{f{Gf}}}}}}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{{f{Eh}}{f{Dn}}}{{Ah{Eh}}}}{{{f{BG`}}{f{Dn}}}{{Ah{BG`}}}}10{{{f{Eh}}{f{Dn}}Fd}{{Ah{Eh}}}}{{{f{BG`}}{f{Dn}}Fd}{{Ah{BG`}}}}{{{f{Eh}}}{{Ah{{f{AM`}}}}}}{{{f{Eh}}}Eh}0{{{f{BG`}}}BG`}{{f{f{Bjc}}}b{}}0{fb}0{{{f{Eh}}}{{Ah{{f{Jd}}}}}}{{}Eh}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{{{f{Eh}}c}e{AbKn}{}}{{Ehc}e{AbKn}{}}{{EhEh}c{}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}{f{Eh}}}{{Ah{Eh}}}}{Fhb}0={{{f{Eh}}}{{f{Dn}}}}{{{f{BG`}}}{{f{Dn}}}}{{{f{Eh}}{f{Eh}}}d}{{{f{Eh}}{f{Eh}}}{{Ah{Gf}}}}011{{{f{Eh}}}{{Ah{Eh}}}}{{{f{BjEh}}{f{Eh}}}{{Ah{{f{BjEh}}}}}}{{{f{Eh}}HnFh}{{Ah{Eh}}}}{{{f{Eh}}}{{Ah{{f{AKl}}}}}}{{{f{Eh}}}{{Ah{{f{AKn}}}}}}{{{f{Eh}}}{{AKj{Mj}}}}{{{f{Eh}}AG`}{{Ah{Eh}}}}{{{f{Eh}}{f{{l{An}}}}}{{Ah{Eh}}}}{{{f{Eh}}{f{BjGl}}}Gn}{{{f{BG`}}{f{BjGl}}}Gn}{BG`Eh}{AfEh}{cc{}}0{{AfFh}{{Ah{BG`}}}}{{BhFh{f{Dn}}}Eh}{{{f{Eh}}FhFh}Eh}{{{f{Eh}}Fh}{{Ah{Hn}}}}{{{f{Eh}}}Fh}{{{f{Eh}}}Ib}{{{f{Eh}}}{{B`{{Fb{F`}}}}}}{{{f{Eh}}Fh}{{B`{{f{If}}}}}}{{{f{Eh}}Fh}Hn}{{{f{Eh}}{f{Eh}}}{{Ah{Gf}}}}0{{{f{Eh}}}d}{{{f{BG`}}}d}{{{f{Eh}}{B`{Fh}}}Eh}{{{f{Eh}}}{{Ah{{f{BBb}}}}}}{{{f{Eh}}}{{Ah{{f{BBd}}}}}}{{{f{Eh}}}{{Ah{{f{BBf}}}}}}{{{f{Eh}}}{{Ah{{f{BB`}}}}}}{{{f{Eh}}}{{Ah{{f{Ef}}}}}}{{}Fh}0{{}c{}}0{BDfEh}{EhEh}{BG`Eh}{EhBCf}{{{f{BjEh}}}{{f{BjAf}}}}>={{{f{Eh}}}{{Ah{Gf}}}}000{{{f{Eh}}}Gf}0{{{f{Eh}}}Jn}{{{f{Eh}}}Fh}{{{f{BG`}}}Fh}{{{f{Eh}}}{{Ah{{f{E`}}}}}}{{{f{Eh}}{f{Eh}}}{{Ah{Gf}}}}0{{{f{Eh}}}{{Ah{L`}}}}0{{{f{Eh}}c}e{AbKn}{}}{{Ehc}e{AbKn}{}}{{{f{Eh}}{f{Eh}}}c{}}{{EhEh}c{}}{{{f{Eh}}}{{f{Bh}}}}{{{f{BG`}}}{{f{Bh}}}}{{Bhc}Eh{}}{{BhL`Fh}BG`}{{Bh{f{Dn}}}Eh}{{BhDn}BG`}{{{f{Eh}}FhFh}Eh}{{BhL`Fh}Eh}=={{{f{Eh}}}Fh}{{{f{Eh}}}BGd}>{{{f{Eh}}}Eh}=><;{{{f{BjEh}}Bh}b}{{{f{Eh}}{f{{Dl{Kb}}}}}{{Ah{Eh}}}}{{{f{BG`}}Fh}BG`}3{{{f{Eh}}ndd{B`{Il}}}{{Ah{Eh}}}}{{{f{Eh}}Fhdd{B`{Il}}}{{Ah{Eh}}}}{{{f{BjEh}}Jn}b}{{{f{Eh}}Kb}Eh}{{{f{BjEh}}}b}{{{f{Eh}}{B`{Il}}}Eh}{{{f{Eh}}KbFh}Eh}{{{f{Eh}}Ed}{{Ah{Eh}}}}{{{f{Eh}}Kb}{{Hh{EhEh}}}}{{{f{Eh}}}{{Ah{{f{D`}}}}}}{{{f{Eh}}{f{Dn}}}{{Ah{Eh}}}}{{{f{BG`}}{f{Dn}}}{{Ah{BG`}}}}{{Ehc}e{AbKn}{}}{{{f{Eh}}c}e{AbKn}{}}{{EhEh}c{}}{{{f{Eh}}{f{Eh}}}c{}}{{{f{Eh}}{B`{Fh}}}Eh}{{{f{Eh}}{f{Ef}}}{{Ah{Eh}}}}{EhAf}{BG`Af}{{{f{Eh}}{f{{Dl{I`}}}}}{{Ah{Eh}}}}{{{f{Eh}}{f{{Dl{I`}}}}}Eh}{{{f{Eh}}{f{Ef}}}Eh}{fc{}}0{{{f{Eh}}}Eh}{{{f{BG`}}}Af}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}0{{{f{Eh}}}{{Ah{{f{BAl}}}}}}{{{f{Eh}}}{{Ah{{f{AOl}}}}}}{{{f{Eh}}}{{Ah{{f{BAn}}}}}}{{{f{Eh}}}{{Ah{{f{BAj}}}}}}{{{f{Eh}}}{{Ah{Eh}}}}0{{{f{Eh}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}{{{f{Eh}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}{{}c{}}0{{EhBh}Eh}{{{f{Eh}}c}Eh{AbKn}}{{{f{Eh}}{f{Gf}}{f{Eh}}}{{Ah{Eh}}}}{{{f{Eh}}{f{{l{An}}}}{f{Eh}}}{{Ah{Eh}}}}`{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{BGf}}}BGf}{{f{f{Bjc}}}b{}}{fb}{{}BGf}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{BGf}}{f{BGf}}}d}{{f{f{c}}}d{}}00{{{f{BGf}}{f{BjGl}}}Gn}{cc{}}{{{f{BGf}}{f{Bjc}}}bABf}`{{}Fh}{{}c{}}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}``4````````````````````````````````{{fh}b}000{{{f{BEb}}}{{Ah{BCf}}}}`{{{f{BGh}}}{{f{{Dl{BGj}}}}}}{{{f{BEb}}c}{{Ah{BCf}}}{{Cj{BCf}{{Cb{{Ah{BCf}}}}}}JfJh}}{{{f{Al}}}E`}{f{{f{c}}}{}}0000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000{{{f{BGh}}}BGh}{{{f{Al}}}Al}{{{f{BEb}}}BEb}{{{f{BGl}}}BGl}{{f{f{Bjc}}}b{}}000{fb}000;{{}BGh}{{}Al}{Fh{{f{c}}}{}}000{{{f{BGn}}}{{f{c}}}{}}1111{Fh{{f{Bjc}}}{}}0000000`{{BH`e}{}{}{{BHb{c}}}}{Fhb}000{{{f{BjBGh}}}b}1111{{{f{BGh}}{f{BGh}}}d}{{{f{Al}}{f{Al}}}d}{{f{f{c}}}d{}}00000`{{{f{BHd}}}I`}{{{f{BGh}}}{{f{{Dl{I`}}}}}}{{{f{BEb}}}{{Ah{BCf}}}}{{{f{BjBGh}}}{{f{Bj{Fn{I`}}}}}}{{{f{BGh}}{f{BjGl}}}Gn}{{{f{Al}}{f{BjGl}}}Gn}{{{f{BEb}}{f{BjGl}}}Gn}{{{f{BGl}}{f{BjGl}}}Gn}0{{{f{Df}}BGl}Bh}{cc{}}000{{{Fn{BHf}}}BGh}{{{Fn{{Hh{{Fn{I`}}{Fn{BGj}}}}}}}BGh}{{{Fn{{Fn{BHf}}}}}BGh}33{BGhAl}44{cBGh{{Hd{}{{Bb{BHf}}}}}}{cBGh{{Hj{}{{Bb{BHf}}}}}}{{{f{Al}}Fh}BHd}{{{f{BEb}}}{{f{Al}}}}{{{f{BjBEb}}}{{f{BjAl}}}}{{{f{Al}}}Ef}{{{f{BHh}}dd}{{Ah{Al}}}}0{{{f{BEb}}}{{Ah{BCf}}}}{{{f{BjAl}}}{{f{BjBGh}}}}{{}Fh}0000000{{}c{}}0000000{AlBGh}1{{{f{BGh}}}c{}}{BGhc{}}301{{{f{BHd}}}d}{{{f{Al}}}d}{{{f{BGh}}}d}{{{f{BGh}}}{{BHl{{BHj{{Kd{I`}}}}{Kd{BGj}}}}}}{{{f{Al}}}BHn}{{{f{BEb}}}{{Fn{Eh}}}}{{{f{BEb}}{B`{{Hh{KbFh}}}}}{{Fn{Eh}}}}={{{f{BHd}}}Fh}{{{f{Al}}}Fh}?????{{{Fn{I`}}{Fn{BGj}}d}BGh}{{{f{BCf}}{Fn{Eh}}Al{B`{{Fn{Bh}}}}}BEb}{{{f{BjBHn}}}{{B`{c}}}{}}{{{f{BjBHn}}Fh}{{B`{c}}}{}}{{{f{BEb}}c}{{Ah{BCf}}}{{Cd{BCf}{{Cb{{Ah{BCf}}}}}}JfJh}}{f}{{{f{Al}}}BH`}{{{f{BEb}}nN`}{{Ah{BCf}}}}{{BEbe}BEb{{B@b{Bh}}}{{Hd{}{{Bb{c}}}}}}{{{f{Al}}KbFh}BGn}{{{f{BjBGh}}}b}{{{f{BjAl}}}b}{{{f{BEb}}Dj}{{Ah{BCf}}}}{{{f{BEb}}}{{Ah{BCf}}}}{Al{{Fn{I`}}}}0{BEbAl}{{{f{BjBEb}}}Al}{fc{}}000{fDb}{c{{Ob{e}}}{}{}}0000000{{}{{Ob{c}}}{}}0000000{f{{Ob{G`BAh}}}}{fOd}0000000{AlAl}{{{f{Al}}}{{f{BGh}}}}{{{f{Al}}}{{f{BI`}}}}={{}c{}}0000000`````{{{f{BGh}}c}Af{{Cd{{Hh{I`{f{BGj}}}}}{{Cb{B`}}}}JfJh}}{{{f{BGh}}c}Af{{Cd{{Hh{I`{f{BGj}}}}}{{Cb{}}}}JfJh}}{{{f{{Dl{{BIb{I`}}}}}}c}Af{{Cd{{BIb{I`}}}{{Cb{B`}}}}JfJh}}{{{f{{Dl{{BIb{I`}}}}}}c}Af{{Cd{{BIb{I`}}}{{Cb{}}}}JfJh}}{{{f{{Dl{c}}}}e{B`{BId}}}{{AJh{c}}}{BIfBIh}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{Dl{c}}}}{f{Hf}}e{B`{BId}}}{{AJh{c}}}{BIfBIh}{{Bf{}{{Bb{{Hh{I`I`}}}}}}Hl}}{{{f{{l{c}}}}I`I`}{{l{c}}}C`}{{{f{BI`}}{f{{Dl{Fl}}}}}d}{{{f{BIj}}{f{Al}}}Af}{{BIlBIl}BIl}0`{{{f{BIn}}{f{BCf}}{f{Al}}}{{Ah{Af}}}}{{{f{BIn}}}{{Ah{{f{Bh}}}}}}```````````````````````{{fh}b}00{{{f{BjBJ`}}Hn}{{B`{b}}}}{{{f{BjBJb}}{f{Hn}}}b}0{f{{f{c}}}{}}00{{{f{Bj}}}{{f{Bjc}}}{}}00{{{f{BJ`}}}BJ`}{{{f{BJb}}}BJb}{{{f{BE`}}}BE`}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{Dl{c}}}}}Dn{{B@j{Dn}}}}{{}BE`}{Fh{{f{c}}}{}}00{Fh{{f{Bjc}}}{}}00{Fhb}00{{{f{BE`}}{f{BE`}}}d}{{f{f{c}}}d{}}00{{{f{BE`}}{f{BjGl}}}Gn}{cc{}}{{{Hh{{f{Dn}}Fh}}}BJ`}1{{{Hh{{f{Dn}}Fh}}}BJb}2{{gFh}BDd{{B@b{Bh}}}{{B@b{Dn}}}{{Bf{}{{Bb{{Fn{{Hh{ce}}}}}}}}}}{{}Fh}00{{}c{}}00{BJ`Af}{BJbAf}{{{f{Dn}}Fh}BJ`}{{{f{Dn}}Fh}BJb}{{{Fn{Hn}}}BE`}{{{f{BjBJ`}}Fh}Af}{{{f{BjBJb}}Fh}Af}{{{f{{Dl{BE`}}}}{B`{Fh}}}{{Ah{BDd}}}}0{{{f{{Dl{BE`}}}}{B`{Fh}}}{{Ah{{Fn{Dn}}}}}}{fc{}}00{c{{Ob{e}}}{}{}}00{{}{{Ob{c}}}{}}00{fOd}00==={{{f{{Dl{BCf}}}}}{{Ah{BCf}}}}{{{f{{Dl{BCf}}}}d}{{Ah{BCf}}}}`````{{IlIl}Il}{{{f{{Dl{BCf}}}}{B`{Nh}}}{{Ah{{Hh{{Fn{BAn}}Nh}}}}}}{{{f{{AKb{Kb}}}}Nh{f{Bj{Fn{Il}}}}}b}{f{{f{c}}}{}}0{{{f{Bj}}}{{f{Bjc}}}{}}0{{}BJd}{Fh{{f{c}}}{}}0{Fh{{f{Bjc}}}{}}0{Fhb}0{{{f{BJd}}}Il}{{{f{BJf}}{f{BjGl}}}Gn}{cc{}}0{{{f{BJf}}{f{Bjc}}}bABf}``{{}Fh}0{{}c{}}0{{{f{Bj{BJh{BJfce}}}}I`Il{f{BCf}}gi}b{}BJj{{Cd{}{{Cb{c}}}}}{{Cj{{f{Bjc}}}}}}{c{{Ob{e}}}{}{}}0{{}{{Ob{c}}}{}}0{fOd}0{{{f{BJl}}Nh{f{Bj{Fn{Il}}}}}{{Ah{b}}}}0{{{f{BJl}}Nh{f{Bj{Dl{Il}}}}}{{Ah{b}}}}066{{{f{BjBJd}}{f{{Dl{Dj}}}}}b}{{{f{BjBJd}}Ll}b}{{{f{BjBJd}}Kb}b}{{{f{BjBJd}}Mb}b}{{{f{BjBJd}}Il}b}````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{fh}b}00000000000{{{f{{Lf{ce}}}}}{{f{e}}}NdBJn}{{{f{{Lf{c}}}}}BK`{BKbNd}}{{{f{{Lf{ce}}}}}{}NdBJn}{{{f{{Lf{c}}}}}LlBKd}{{{f{Bh}}}{{f{BKf}}}}{{{f{Bh}}}{{f{{Dl{Dj}}}}}}{{{f{Bh}}}{{f{BKh}}}}{{{f{Bh}}}{{f{Df}}}}{{{f{{Lf{ce}}}}}{{f{c}}}NdBJn}1{{{Lf{{Dl{{BKj{c}}}}e}}}{{Lf{{Dl{c}}e}}}{}BJn}{{{Lf{{BKj{c}}e}}}{{Lf{ce}}}{}BJn}{f{{f{c}}}{}}040003000000000{{{f{Bj}}}{{f{Bjc}}}{}}0000000000000{{{f{AM`}}{f{AM`}}c}{{Ah{AM`}}}AMb}{{{f{{Lf{c}}}}}{{B`{{f{AJd}}}}}{AJdNd}}`{{{f{BKl}}{f{Af}}}{{Ah{Af}}}}{{{f{BKl}}c}{{Ah{Af}}}Ad}{{{f{Bh}}}Bh}{{{f{Of}}}Of}{{{f{BKn}}}BKn}{{{f{{Lf{ce}}}}}{{Lf{ce}}}Nd{BJnA@n}}{{{f{Nb}}}Nb}{{{f{BFj}}}BFj}{{{f{B@d}}}B@d}{{{f{N`}}}N`}{{{f{BId}}}BId}{{{f{BL`}}}BL`}{{{f{BLb}}}BLb}{{{f{BLd}}}BLd}{{f{f{Bjc}}}b{}}00000000000{fb}00000000000{{{f{Bh}}{f{Bh}}}BAd}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}BAd{BLfNd}BJn}{AOhe{}{{AL`{c}}AJ`}}0{{AOhADj}e{}{{ALb{c}}AJ`}}0{{f{f{c}}}BAd{}}0{{AKhBCj}AKh}{AKhAKh}{{{f{H`}}{f{ADj}}}{{Fb{H`}}}}``{{}b}{cbBJn}{{}Bh}{{}{{Lf{{Dl{c}}}}}{}}{{}{{Lf{c}}}BLh}{{}{{Lf{Df}}}}{{}{{Lf{BLj}}}}{{}Nb}{{}BFj}{{}B@d}{{}N`}`{Fh{{f{c}}}{}}0{{{f{Bh}}}f}111{{{f{{Lf{ce}}}}}{{f{c}}}NdBJn}222222222{Fh{{f{Bjc}}}{}}0000000000000{{{f{{Lf{c}}}}}{{f{Df}}}{AJdNd}}`{{{Lf{ADlc}}}{{Ob{{Lf{ec}}{Lf{ADlc}}}}}BJn{ADlJfJh}}{{{Lf{ADlc}}}{{Lf{ec}}}BJn{ADlJfJh}}{{{f{{Lf{ce}}}}}{{BLl{ce}}}Nd{A@nBJn}}{Fhb}000{{{f{Bj{Lf{ce}}}}}bNdBJn}1111111111{{{f{B@d}}}{{f{ADj}}}}`{{{f{Bh}}{f{c}}}d{{Kj{Df}}Nd}}{{{f{Of}}{f{Of}}}d}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BLnNd}BJn}{{{f{{Lf{BM`}}}}{f{BM`}}}d}{{{f{{Lf{H`}}}}{f{H`}}}d}{{{f{Nb}}{f{Nb}}}d}{{{f{BFj}}{f{BFj}}}d}{{{f{B@d}}{f{B@d}}}d}{{{f{N`}}{f{N`}}}d}{{{f{BId}}{f{BId}}}d}{{{f{BL`}}{f{BL`}}}d}{{{f{BLb}}{f{BLb}}}d}{{{f{BLd}}{f{BLd}}}d}{{f{f{c}}}d{}}00000000000000000000{BKn{{Hh{MbMb}}}}{{AMb{f{AOl}}{f{AOl}}}{{Ah{AOl}}}}{{{f{Bj{Lf{AD`}}}}}{{Ob{bBMb}}}}{{{f{AKh}}{f{BjGl}}}{{Ob{bAOn}}}}0{{{f{Bh}}{f{BjGl}}}{{Ob{bAOn}}}}0{{{f{Of}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{BKn}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{{Lf{ce}}}}{f{BjGl}}}{{Ob{bAOn}}}NdBJn}{{{f{{Lf{ce}}}}{f{BjGl}}}{{Ob{bAOn}}}{ADnNd}BJn}{{{f{{Lf{ce}}}}{f{BjGl}}}{{Ob{bAOn}}}{BCnNd}BJn}{{{f{Nb}}{f{BjGl}}}Gn}{{{f{BFj}}{f{BjGl}}}Gn}{{{f{B@d}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{N`}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{BId}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{BL`}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{BLb}}{f{BjGl}}}{{Ob{bAOn}}}}{{{f{BLd}}{f{BjGl}}}{{Ob{bAOn}}}}`{BMbAKh}{BMdAKh}{cc{}}{BMfAKh}{BMhAKh}2{DbBh}{{{f{Db}}}Bh}{G`Bh}{{{f{Df}}}Bh}6{MbOf}7{{{Lf{Df}}}{{Lf{{Dl{Dj}}}}}}{{{BIb{c}}}{{Lf{{Dl{c}}}}}{}}{{{f{BLj}}}{{Lf{BLj}}}}{{{f{BKf}}}{{Lf{BKf}}}}{BMj{{Lf{BKf}}}}<{BMlc{}}{{{f{BKh}}}{{Lf{BKh}}}}{G`{{Lf{Df}}}}{BMn{{Lf{BKh}}}}{{{AKj{c}}}{{Lf{c}}}{BN`Nd}}{{{Fn{ce}}}{{Lf{{Dl{c}}e}}}{}{BJnA@n}}{{{Fb{ce}}}{{Lf{ce}}}NdBJn}{Db{{Lf{Df}}}}{{{f{Df}}}{{Lf{Df}}}}{{{f{{Dl{c}}}}}{{Lf{{Dl{c}}}}}A@n}{c{{Lf{c}}}{}}{BNb{{Lf{BLj}}}}{cc{}}00000000{{c{B`{Hf}}}BNd{}}{{{BNf{Kb}}{BNf{Dj}}{B`{Hf}}}BNh}{{{BNf{Kb}}{BNf{Dj}}{B`{Hf}}}BNj}{cBh{{Hd{}{{Bb{BDb}}}}}}{cBh{{Hd{}{{Bb{Bh}}}}}}{cBh{{Hd{}{{Bb{{f{Bh}}}}}}}}{cBh{{Hd{}{{Bb{{f{BDb}}}}}}}}{cBh{{Hd{}{{Bb{{f{Df}}}}}}}}{cBh{{Hd{}{{Bb{Db}}}}}}{cBh{{Hd{}{{Bb{{Fb{Df}}}}}}}}{cBh{{Hd{}{{Bb{{AKj{Df}}}}}}}}{e{{Lf{{Dl{c}}}}}{}{{Hd{}{{Bb{c}}}}}}{{gFh}{{BNl{Kb}}}Kj{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}0{e{{BNl{Kb}}}{{Hd{}{{Bb{{B`{d}}}}}}}{{Hd{}{{Bb{{B`{c}}}}}}}}{{gADj}{{BNl{Kb}}}BIh{{Hd{}{{Bb{{B`{c}}}}}}}{{Hd{}{{Bb{{B`{e}}}}}}}}2{e{{Lf{{Dl{c}}}}}Jf{{Hj{}{{Bb{c}}}}}}{{}{{Lf{c}}}Nd}{c{{Lf{ec}}}BJnNd}{{{f{Df}}}Bh}0{{{f{Df}}}{{Ob{BNn}}}}{DbBh}{{Bhc}BO`{}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BObNd}BJn}{{{f{Bj{Lf{ce}}}}}{{B`{{f{Bjc}}}}}NdBJn}{{{f{Bj{Lf{ce}}}}}{{f{Bjc}}}NdBJn}{{{f{Fl}}Fh}Hn}3{{{f{Bh}}{f{Bjc}}}bABf}{{{f{{Lf{ce}}}}{f{Bjg}}}b{BOdNd}BJnABf}{{{f{BFj}}{f{Bjc}}}bABf}{{{f{B@d}}{f{Bjc}}}bABf}{{{f{N`}}{f{Bjc}}}bABf}{{{f{BLd}}{f{Bjc}}}bABf}{{{f{Of}}}Mb}{{}b}{cb{A@nBJn}}{{{f{{Dl{Mb}}}}}{{`{{Bf{}{{Bb{Fh}}}}}}}}{{}Fh}0000000000000`{{{f{BjBKn}}}{{f{BjIl}}}}`{{}c{}}0000000000000{{}Eh}{{{Lf{ce}}}{{B`{c}}}{}BJn}{{{Lf{ce}}}{}NdBJn}{{{Lf{ce}}}{{Hh{e}}}NdBJn}{{{Lf{BOf}}}Af}{BhDb}{{{f{BKn}}}d}{{{f{Of}}}d}`{{{f{{Lf{AD`}}}}}d}{{{f{c}}}d{}}1{{{f{BDn}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BObNd}BJn}`0{{{f{AM`}}{f{AM`}}}{{Ah{{Hh{AM`AM`}}}}}}{{E`E`}{{Ah{{Hh{E`E`}}}}}}{{{f{Bj{Lf{ce}}}}}{{f{Bjc}}}{BOhNd}{BJnA@n}}{{{f{BOj}}}L`}0{{{f{BOl}}}L`}``11`{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}d{BLnNd}BJn}{{BOnFh}{{B`{Fh}}}}{{Bhc}C@`{}}{c{{Lf{c}}}{}}{{BhADjd}B@d}{e{{Lf{c}}}{}{{Oh{{f{{BLl{c}}}}}{{Cb{c}}}}}}{{ce}{{Lf{ce}}}{}BJn}{{}{{Lf{{BKj{c}}}}}{}}{c{{Lf{{BKj{e}}c}}}BJn{}}{Fh{{Lf{{Dl{{BKj{c}}}}}}}{}}{{Fhc}{{Lf{{Dl{{BKj{e}}}}c}}}BJn{}}3210`{{}Of}{{}BKn}{{{f{Bh}}{f{Bh}}}{{B`{BAd}}}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}{{B`{BAd}}}{BObNd}BJn}{c{{C@b{{Lf{c}}}}}{}}{{ce}{{C@b{{Lf{ce}}}}}{}BJn}`````{{{f{BOj}}}L`}0{{{f{{Lf{c}}}}{f{BjC@d}}}b{AJdNd}}{{{f{{Lf{ce}}}}{f{{Lf{ce}}}}}dNdBJn}{{{f{BOl}}nN`}{{Ah{L`}}}}{{{f{Bj{Lf{AD`}}}}{f{Bj{Dl{Dj}}}}}{{Ob{FhBMb}}}}{{{f{Bj{Lf{AD`}}}}C@f}{{Ob{bBMb}}}}{{{f{Bj{Lf{AD`}}}}{f{Bj{Fn{Dj}}}}}{{Ob{FhBMb}}}}{{{f{Bj{Lf{AD`}}}}{f{BjDb}}}{{Ob{FhBMb}}}}{{{f{Bj{Lf{AD`}}}}{f{Bj{Dl{C@h}}}}}{{Ob{FhBMb}}}}`{{{f{Bj{Lf{AD`}}}}C@j}{{Ob{IlBMb}}}}`{{{f{AJl}}FhFh}AJl}0{{{f{{Lf{c}}}}}{{B`{{f{AJd}}}}}{AJdNd}}{{{f{C@l}}Dj}L`}{{MbMb}BKn}`{{{f{{Lf{ce}}}}}FhNdBJn}>>{{{f{Of}}}{{B`{Mb}}}}{fc{}}00000000000{fDb}00{AOh{{Ob{eg}}}{}{{AL`{c}}AJ`}{}}0{{AOhADj}{{Ob{eg}}}{}{{ALb{c}}AJ`}{}}0{c{{Ob{e}}}{}{}}0000{{{Lf{{Dl{c}}e}}}{{Ob{{Lf{{BIb{c}}e}}}}}{}BJn}111111111{{}{{Ob{c}}}{}}0000000000000{{BOnFh}{{Ob{FhAKh}}}}{c{{Ob{{Lf{c}}C@n}}}{}}{{ce}{{Ob{{Lf{ce}}C@n}}}{}BJn}{{}{{Ob{{Lf{{BKj{c}}}}C@n}}}{}}{c{{Ob{{Lf{{BKj{e}}c}}C@n}}}BJn{}}10{c{{Ob{{C@b{{Lf{c}}}}C@n}}}{}}{{ce}{{Ob{{C@b{{Lf{ce}}}}C@n}}}{}BJn}{f{{Ob{G`BAh}}}}00{{{Lf{ce}}}{{Ob{c{Lf{ce}}}}}{}BJn}{fOd}0000000000000{{{Lf{ce}}}cA@nBJn}`{{{f{C@l}}Dj}L`}{{}c{}}0000000000000{{{f{{Lf{ce}}}}}FhNdBJn}``{{B@d{CA`{BhBh}}}B@d}{{{f{AKh}}c}AKh{{Oh{{f{Df}}}{{Cb{Db}}}}}}{{{f{Bj{Lf{AD`}}}}{f{{Dl{Dj}}}}}{{Ob{FhBMb}}}}{{{f{BjBh}}BDb}{{Ob{bAOn}}}}{{{f{BjBh}}CAb}{{Ob{bAOn}}}}{{{f{BjBh}}{f{Df}}}{{Ob{bAOn}}}}{{{f{Bj{Lf{AD`}}}}{f{{Dl{CAd}}}}}{{Ob{FhBMb}}}}```````{{c{B`{Hf}}}BNd{}}{{{BNf{Kb}}{BNf{Dj}}{B`{Hf}}}BNh}{{{BNf{Kb}}{BNf{Dj}}{B`{Hf}}}BNj}`{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{CAf{B`{{f{ADj}}}}}{{Ob{{BNl{Kb}}AKh}}}}{cc{}}{{}Fh}{{}c{}}{{{f{CAf}}}d}{FhCAf}{{{f{CAf}}}{{f{{Dl{Kb}}}}}}{{{f{BjCAf}}{f{H`}}}b}{{{f{BjCAf}}}b}{{{f{BjCAf}}{f{{Dl{{Fb{H`}}}}}}}b}1{{{f{BjCAf}}{B`{{f{H`}}}}}b}{CAf{{CAh{Kb}}}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd};`{{fh}b}{{{f{CAj}}}{{f{ADl}}}}{{{f{BjCAj}}}{{Fb{H`}}}}{{{f{BjCAj}}}{{f{BjADl}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CAj}}}CAj}{{f{f{Bjc}}}b{}}{fb}{{}CAj}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{CAj}}}{{f{ADj}}}}{{{f{BjCAj}}Fh}b}{{{f{CAj}}{f{BjGl}}}{{Ob{bAOn}}}}{cc{}}{{}Fh}{{}c{}}{{{f{CAj}}}Fh}{FhCAj}{{{f{BjCAj}}}b}70{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{CAj}}}{{B`{{f{CAl}}}}}}8```````{{{f{AJl}}FhFh}AJl}0`{{}b}0{{}d}``{{eFhFh}{{CAn{Kb}}}{{Kj{Df}}}{{Bf{}{{Bb{c}}}}}}{{eFhFh}{{AKb{Kb}}}{{Kj{{Dl{Dj}}}}}{{Bf{}{{Bb{c}}}}}}{Ilb}`{{fh}b}{{{f{L`}}}Hn}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{L`}}}L`}{{f{f{Bjc}}}b{}}{fb}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{L`}}}{{f{Dn}}}}{{{f{L`}}{f{L`}}}d}{{{f{L`}}{f{BjGl}}}Gn}{CB`L`}{nL`}{DjL`}{cc{}}{KbL`}{LlL`}{CBbL`}{IlL`}{IjL`}{MbL`}{CBdL`}{{}Fh}{{}c{}}{{L`Bh}Eh}{{L`Bh}Af}{{{f{L`}}}d}0{{DnHn}L`}`{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}{{{f{BjL`}}Hn}b}{{{f{L`}}}{{f{Hn}}}}:{{{B`{n}}Dn}L`}``````{{{f{{CBf{c}}}}{f{{CBf{c}}}}}{{Ah{b}}}{}}{{{f{BE`}}}BDd}{{{f{BDn}}}CBh}{{{f{BDn}}}BDd}{{{f{CBh}}{f{Df}}}{{B`{Mj}}}}{{{f{BDd}}{f{Df}}}{{B`{Mj}}}}{{{f{CBh}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{BDd}}}{{`{{Jj{}{{Bb{Mj}}}}}}}}{{{f{{CBl{}{{CBj{c}}}}}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{ADnA@nBLhBLn}}{{{f{BDd}}}{{`{{Jj{}{{Bb{{Hh{{f{Bh}}{f{c}}}}}}}}}}}{}}{{{f{CBh}}AMl}BDn}{{{f{BDd}}AMl}BDn}{{{f{BjCBh}}{f{BDd}}}{{Ah{d}}}}{{{f{BjBDd}}{f{BDd}}}{{Ah{d}}}}{{{f{CBh}}{f{Df}}}{{Ah{Mj}}}}{{{f{BDd}}{f{Df}}}{{Ah{Mj}}}}`````````````````{{fh}b}0{{{f{BOf}}}n}0{{Bh{Fn{Fl}}{f{ADj}}}{{Ah{Af}}}}{{Bh{Fn{Fl}}{f{ADj}}{B`{{f{CBn}}}}}{{Ah{Af}}}}{{{f{Af}}{f{Af}}}c{}}{{Afc}e{AbKn}{}}{{{f{Af}}c}e{AbKn}{}}{{AfAf}c{}}`{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{BOf}}Ed}Ef}0{{{f{BOf}}}{{Ah{Ef}}}}0`{{{f{Af}}Fh}{{f{Fl}}}}{{{f{BOf}}}{{f{ADl}}}}{{{f{BjBOf}}}{{f{BjADl}}}}0{{{f{Af}}}E`}{{{f{BjBOf}}}{{f{Bj{l{c}}}}}C`}{{{f{BOf}}}{{f{{l{c}}}}}C`}{{{f{Af}}}{{f{BOf}}}}{{{f{BjBOf}}}{{Ah{Fh}}}}0{{{f{BjAf}}}{{Ah{Fh}}}}{{{f{Af}}}{{Ah{{f{El}}}}}}{{{f{Af}}}{{Ah{{f{AKd}}}}}}{{{f{BOf}}{f{Af}}}{{Ah{Af}}}}00000{{{f{Af}}}{{Ah{{f{Gf}}}}}}{f{{f{c}}}{}}000{{{f{Bj}}}{{f{Bjc}}}{}}000{{{f{BOf}}}{{B`{{Fb{F`}}}}}}0{{{f{BOf}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Af}}{f{Dn}}}{{Ah{Af}}}}0{{{f{Af}}{f{Dn}}Fd}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AM`}}}}}}88{{{f{Af}}{f{Af}}}{{Ah{Af}}}}{{{f{Af}}c}{{Ah{Af}}}Ad}{{{f{BOf}}}Fj}{{{f{Af}}}{{`{{Bf{}{{Bb{Fh}}}}}}}}{{{f{BOf}}}{{f{{Fn{Fl}}}}}}{{{f{BjBOf}}}{{f{Bj{Fn{Fl}}}}}}{{{f{BjAf}}}{{f{Bj{Fn{Fl}}}}}}{{{f{Af}}}Af}{{{f{Jn}}}Jn}1{{{f{BOf}}}{{Lf{BOf}}}}{{f{f{Bjc}}}b{}}0{fb}0{{{f{BjAf}}}b}{{{f{Af}}}{{Ah{{f{Jd}}}}}}{{}Af}{Fh{{f{c}}}{}}00{{{f{Af}}}{{f{c}}}{}}1{Fh{{f{Bjc}}}{}}000{{Afc}e{AbKn}{}}{{{f{Af}}{f{Af}}}c{}}{{{f{Af}}c}e{AbKn}{}}{{AfAf}c{}}{{{f{Af}}{f{Af}}}{{Ah{n}}}}{Fhb}000{{{f{BOf}}}Af}0{{{f{BOf}}}{{f{Dn}}}}0{{{f{Jn}}{f{Jn}}}d}{{{f{Af}}{f{Af}}}d}{{{f{Af}}{f{Af}}}{{Ah{Gf}}}}{{{f{Af}}{f{Df}}}{{Ah{Gf}}}}{{{f{Af}}c}{{Ah{Gf}}}B@`}{{{f{Af}}{f{Df}}}c{}}3{{{f{Af}}c}eB@`{}}55{{f{f{c}}}d{}}00{{{f{Af}}}Fh}{{{f{Af}}}{{Ah{Af}}}}{{{f{BjAf}}{f{Af}}}{{Ah{{f{BjAf}}}}}}{{{f{Af}}HnFh}{{Ah{Af}}}}{{{f{Af}}}{{Ah{{f{AKl}}}}}}{{{f{Af}}}{{Ah{{f{AKn}}}}}}{{{f{BOf}}}{{AKj{Mj}}}}0{{{f{Af}}AG`}{{Ah{Af}}}}{{{f{BOf}}{f{Gf}}}{{Ah{Af}}}}{{{f{Jn}}{f{BjGl}}}Gn}{{{f{Af}}{f{BjGl}}}Gn}0{{{f{Af}}}Db}{cc{}}00{{{l{c}}}AfC`}1{{Bh{f{{Dl{Hn}}}}d}{{Ah{Af}}}}{{Bh{f{{Dl{Hn}}}}{f{Dn}}d}{{Ah{Af}}}}{{BhFl}{{Ah{Af}}}}{{Bh{Fn{Fl}}}{{Ah{Af}}}}{{Bh{Fn{Fl}}{f{Dn}}}Af}{cAf{{Hd{}{{Bb{{B`{Mb}}}}}}}}{cAf{{Hd{}{{Bb{{f{Il}}}}}}}}{cAf{{Hd{}{{Bb{{B`{n}}}}}}}}{cAf{{Hd{}{{Bb{{f{Ij}}}}}}}}{cAf{{Hd{}{{Bb{Ij}}}}}}{cAf{{Hd{}{{Bb{Db}}}}}}{cAf{{Hd{}{{Bb{{B`{Ij}}}}}}}}{cAf{{Hd{}{{Bb{{f{Kb}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Db}}}}}}}}{cAf{{Hd{}{{Bb{Kb}}}}}}{cAf{{Hd{}{{Bb{{B`{Kb}}}}}}}}{cAf{{Hd{}{{Bb{{f{Ll}}}}}}}}{cAf{{Hd{}{{Bb{{B`{d}}}}}}}}{cAf{{Hd{}{{Bb{n}}}}}}{cAf{{Hd{}{{Bb{Mb}}}}}}{cAf{{Hd{}{{Bb{{f{n}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Ll}}}}}}}}{cAf{{Hd{}{{Bb{{f{Mb}}}}}}}}{cAf{{Hd{}{{Bb{{B`{Il}}}}}}}}{cAf{{Hd{}{{Bb{{f{Df}}}}}}}}{cAf{{Hd{}{{Bb{Il}}}}}}{cAf{{Hd{}{{Bb{{B`{{f{Df}}}}}}}}}}{cAf{{Hd{}{{Bb{{f{d}}}}}}}}{cAf{{Hd{}{{Bb{d}}}}}}{cAf{{Hd{}{{Bb{Ll}}}}}}{{Bh{Fn{Kb}}}Af}{{Bh{Fn{Mb}}}Af}{{Bh{Fn{Mf}}}Af}{{Bh{Fn{Il}}}Af}{{Bh{Fn{Ij}}}Af}{{Bh{Fn{n}}}Af}{{Bh{Fn{Ll}}}Af}{{BhFh{f{Dn}}}Af}{{{f{Af}}FhFh}Af}{{{f{BOf}}Fh}{{Ah{Hn}}}}{{{f{Af}}}Fh}{{{f{Af}}}Ib}{{{f{Af}}}Af}{{{f{BOf}}}{{B`{{Lh{F`}}}}}}0{{{f{BOf}}Fh}{{B`{{f{If}}}}}}0{{{f{BOf}}FhFh}{{B`{{f{If}}}}}}0{{{f{BOf}}Fh}Hn}0{{{f{Af}}{f{Df}}}{{Ah{Gf}}}}{{{f{Af}}{f{Af}}}{{Ah{Gf}}}}{{{f{Af}}c}{{Ah{Gf}}}B@`}0{{{f{Af}}{f{Df}}}c{}}2{{{f{BOf}}}d}{{{f{Jn}}{f{Bjc}}}bABf}{{{f{Af}}{B`{Fh}}}Af}{{{f{Af}}}{{Ah{{f{BBb}}}}}}{{{f{Af}}}{{Ah{{f{BBd}}}}}}{{{f{Af}}}{{Ah{{f{BBf}}}}}}{{{f{Af}}}{{Ah{{f{BB`}}}}}}{{{f{Af}}}{{Ah{{f{Ef}}}}}}`{{{f{Af}}}{{Ah{E`}}}}{{}Fh}000{{}c{}}000{{}Eh}{AfBCf}2{BFbAf}{AfAf}>>{{{f{Af}}}{{Ah{Gf}}}}000{{{f{BOf}}}Gf}0{{}d}00{{{f{Af}}}Jn}{{{f{Af}}}CC`}{{{f{Af}}}{{`{{Bf{}{{Bb{Af}}}}}}}}{{{f{BOf}}}Fh}{{{f{Af}}}Fh}{{{f{BOf}}Fh}Af}0{{{f{Af}}}{{Ah{{f{E`}}}}}}{{{f{Af}}c}{{Ah{Gf}}}B@`}{{{f{Af}}{f{Df}}}c{}}{{{f{Af}}{f{Af}}}{{Ah{Gf}}}}021{{{f{Af}}}{{Ah{{B`{c}}}}}Kn}{{{f{BOf}}}{{Ah{L`}}}}0{{{f{BOf}}}{{B`{n}}}}0{{{f{Af}}}L`}1122322{{{f{Af}}c}e{AbKn}{}}{{AfAf}c{}}{{Afc}e{AbKn}{}}{{{f{Af}}{f{Af}}}c{}}>>={{{f{BOf}}}{{Ah{Fh}}}}0{{{f{BOf}}}{{f{Bh}}}}{{Bhc}Af{{Kj{{Dl{{B`{Kb}}}}}}}}{{Bhc}Af{{Kj{{Dl{{f{Df}}}}}}}}{{Bhc}AfBFb}{{Bhc}Af{{Kj{{Dl{Il}}}}}}{{Bhc}Af{{Kj{{Dl{{B`{Db}}}}}}}}{{Bhc}Af{{Kj{{Dl{{f{{Dl{Dj}}}}}}}}}}{{Bhc}Af{{Kj{{Dl{Ll}}}}}}{{Bhc}Af{{Kj{{Dl{n}}}}}}{{Bhc}Af{{Kj{{Dl{Db}}}}}}{{Bhc}Af{{Kj{{Dl{{AKj{Df}}}}}}}}{{Bhc}Af{{Kj{{Dl{Kb}}}}}}{{Bhc}Af{{Kj{{Dl{{Fn{Dj}}}}}}}}{{Bhc}Af{{Kj{{Dl{{B`{{Fn{Dj}}}}}}}}}}{{Bhc}Af{{Kj{{Dl{{B`{{f{{Dl{Dj}}}}}}}}}}}}{{Bhc}Af{{Kj{{Dl{{B`{d}}}}}}}}{{Bhc}Af{{Kj{{Dl{{B`{Mb}}}}}}}}{{Bhc}Af{{Kj{{Dl{Hn}}}}}}{{Bhc}Af{{Kj{{Dl{{B`{Il}}}}}}}}{{Bhc}Af{{Kj{{Dl{{B`{Ll}}}}}}}}{{Bhc}Af{{Kj{{Dl{Mb}}}}}}{{Bhc}Af{{Kj{{Dl{Ij}}}}}}{{Bhc}Af{{Kj{{Dl{{B`{{AKj{{Dl{Dj}}}}}}}}}}}}{{Bhc}Af{{Kj{{Dl{{B`{Mf}}}}}}}}{{Bh{f{Af}}}Af}{{Bhc}Af{{Kj{{Dl{{B`{Ij}}}}}}}}{{Bhc}Af{{Kj{{Dl{Mf}}}}}}{{Bhc}Af{{Kj{{Dl{{B`{n}}}}}}}}{{Bh{Mh{Kb}}}Af}{{Bh{Mh{Ll}}}Af}{{Bh{Mh{Il}}}Af}{{Bh{Mh{Mb}}}Af}{{Bhc}Af{{Kj{{Dl{Af}}}}}}{{Bhc}Af{{Kj{{Dl{d}}}}}}{{Bhc}Af{{Kj{{Dl{{AKj{{Dl{Dj}}}}}}}}}}{{Bhc}Af{{Kj{{Dl{{B`{{AKj{Df}}}}}}}}}}{{Bhc}Af{{Kj{{Dl{{B`{Af}}}}}}}}{{Bhc}Af{{Kj{{Dl{{B`{{f{Df}}}}}}}}}}{{Bh{f{Dn}}}Af}{{{f{BOf}}FhFh}Af}{{BhFh}Af}{{{f{BjCC`}}}{{B`{c}}}{}}{{{f{Af}}{f{Df}}}{{Ah{Gf}}}}{{{f{Af}}{f{Af}}}{{Ah{Gf}}}}{{{f{Af}}c}{{Ah{Gf}}}B@`}{{{f{Af}}{f{Df}}}c{}}{{{f{Af}}c}eB@`{}}3{{{f{Af}}}{{Ah{{f{`}}}}}}{{{f{BOf}}}Fh}`{{{f{Af}}}BGd}{{{f{Af}}}{{Ah{L`}}}}{{{f{BOf}}nN`}{{Ah{L`}}}}0{{{f{BOf}}}Af}{{{f{Af}}{f{Af}}}c{}}{{Afc}e{AbKn}{}}{{{f{Af}}c}e{AbKn}{}}{{{f{BjBOf}}Bh}b}{{{f{BjAf}}Bh}{{f{BjAf}}}}{{{f{Af}}{f{{Dl{Kb}}}}}{{Ah{Af}}}}6{JnJn}{{{f{BOf}}{f{Cd}}Nb}{{Ah{Af}}}}0{{{f{Af}}ndd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fhdd{B`{Il}}}{{Ah{Af}}}}{{{f{Af}}Fh}Af}{{{f{BjAf}}Jn}b}{{{f{BOf}}Kb}Af}{{{f{BjBOf}}}b}0{{{f{BjAf}}}b}{{{f{Af}}{B`{Il}}}Af}{{{f{CC`}}}{{Hh{Fh{B`{Fh}}}}}}{{{f{BOf}}KbFh}Af}{{{f{Af}}KbFh}Af}{{{f{Af}}Ed}{{Ah{Af}}}}{{{f{BOf}}Ed}{{Ah{Af}}}}0{{{f{BOf}}Kb}{{Hh{AfAf}}}}{{{f{Af}}Kb}{{Hh{AfAf}}}}{{{f{BOf}}Dj}{{B`{n}}}}0{{{f{BOf}}Dj}{{Ah{L`}}}}0{{{f{Af}}}{{Ah{{f{D`}}}}}}{{{f{Af}}Fh}{{Ah{{AKj{Df}}}}}}{{{f{Af}}{f{Dn}}}{{Ah{Af}}}}{{Afc}e{AbKn}{}}{{{f{Af}}{f{Af}}}c{}}{{AfAf}c{}}{{{f{Af}}c}e{AbKn}{}}{{{f{Af}}}{{Ah{c}}}Kn}{{{f{BOf}}}{{Ah{L`}}}}0{{{f{Af}}}{{Ah{L`}}}}{{{f{Af}}{B`{Fh}}}Af}{{{f{BOf}}{f{Ef}}}{{Ah{Af}}}}{{{f{BOf}}{f{{Dl{I`}}}}}{{Ah{Af}}}}{{{f{BOf}}{f{{Dl{I`}}}}}Af}{{{f{BOf}}{f{Ef}}}Af}{{{f{Af}}{f{{Dl{I`}}}}}Af}{{{f{Af}}FhAMl}Fl}{{{f{Af}}}{{Ah{Af}}}}{fc{}}0{{{f{Af}}}{{AKj{Af}}}}{fDb}{{AfAf}{{Ah{Af}}}}{c{{Ob{e}}}{}{}}00{{{Hh{BhFl}}}{{Ah{Af}}}}1{{{Hh{Bh{Fn{Fl}}}}}{{Ah{Af}}}}{{{Hh{{f{B@d}}{Fn{Fl}}}}}{{Ah{Af}}}}{{{Hh{{f{B@d}}Fl}}}{{Ah{Af}}}}{{}{{Ob{c}}}{}}0006{{Bhc}{{Ob{Af}}}{}}{{{f{BjAf}}{In{c}}}dC`}8{f{{Ob{G`BAh}}}}{fOd}000{{{f{Af}}}{{Ah{{f{BAl}}}}}}{{{f{Af}}}{{Ah{{f{AOl}}}}}}{{{f{Af}}}{{Ah{{f{BAn}}}}}}{{{f{Af}}}{{Ah{{f{BAj}}}}}}{{{f{BOf}}}{{Ah{Af}}}}0{{{f{Af}}}{{Ah{Af}}}}{{{f{BOf}}}{{Ah{{f{{l{c}}}}}}}C`}{{{f{BOf}}Dj}{{B`{n}}}}0{{{f{BOf}}Dj}{{Ah{L`}}}}0{{}c{}}000{{AfBh}Af}{{{f{Af}}c}Af{AbKn}}{{{f{Af}}{f{Gf}}{f{Af}}}{{Ah{Af}}}}``{{fh}b}{{{f{Ch}}}{{f{Af}}}}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{Ch}}}Ch}{{f{f{Bjc}}}b{}}{fb}{{{f{Ch}}}Af}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{cc{}}{{}Fh}{{}c{}}{{{CCb{Af}}}Ch}{{{f{BjCh}}{f{BjFl}}}b}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}6{{{f{BjCh}}{f{BjFl}}e}c{}{{Cd{{f{Ch}}}{{Cb{c}}}}}}````{{{CCd{}{{Cb{c}}}}{f{Af}}}c{}}{{{f{CCf}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Aj}}}}{f{Af}}}{{Ah{Af}}}}0`2100210021002100``{{{f{BKl}}{f{Af}}}{{Ah{Af}}}}{{{f{{l{Ff}}}}{f{Af}}}{{Ah{Af}}}}0{{{f{BKl}}c}{{Ah{Af}}}Ad}{{{f{{l{Ff}}}}c}{{Ah{Af}}}Ad}0```{{fh}b}{f{{f{c}}}{}}{{{f{Bj}}}{{f{Bjc}}}{}}{{{f{CCh}}}CCh}{{f{f{Bjc}}}b{}}{fb}{{}CCh}{Fh{{f{c}}}{}}{Fh{{f{Bjc}}}{}}{Fhb}{{{f{CCh}}{f{CCh}}}d}{{f{f{c}}}d{}}00{{{f{CCh}}{f{BjGl}}}Gn}{cc{}}{{{f{CCh}}{f{Bjc}}}bABf}{{}Fh}{{}c{}}{fc{}}{c{{Ob{e}}}{}{}}{{}{{Ob{c}}}{}}{fOd}4````````````{{fh}b}006{{{Fn{BCf}}}{{Ah{BCf}}}}{c{{Ah{BCf}}}{{Hd{}{{Bb{BCf}}}}}}{cBCf{{Hd{}{{Bb{BCf}}}}}}{c{{B`{BCf}}}{{Hd{}{{Bb{BCf}}}}}}{{{f{{l{c}}}}{f{{l{e}}}}}{{Hh{{AKj{{l{c}}}}{AKj{{l{e}}}}}}}C`C`}{{{f{{l{c}}}}{f{{l{e}}}}{f{{l{g}}}}}{{Hh{{AKj{{l{c}}}}{AKj{{l{e}}}}{AKj{{l{g}}}}}}}C`C`C`}{{}CCj}{{{f{CCl}}}d}0{c{{Ah{Dn}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}{c{{Ah{{Hh{DnFh}}}}}{{Hd{}{{Bb{{f{Hn}}}}}}}}`{{{f{{l{c}}}}{f{{l{e}}}}}{{B`{Hf}}}C`C`}{{CCjCCj}CCj}{{{f{BjCCj}}CCj}b}10{{{f{CCj}}}Dj}021{f{{f{c}}}{}}0000{{{f{Bj}}}{{f{Bjc}}}{}}0000{{{f{CCn}}}{{`{{Bf{}{{Bb{Fh}}}}}}}}{{{f{CCj}}}CCj}{{{f{CCl}}}CCl}{{{f{{CD`{ec}}}}}{{CD`{ec}}}A@n{A@n{Bf{}{{Bb{c}}}}}}{{f{f{Bjc}}}b{}}00{fb}00{{{f{{l{c}}}}{f{{l{c}}}}}{{Hh{{AKj{{l{c}}}}{AKj{{l{c}}}}}}}C`}{{{f{Eh}}{f{Eh}}}{{Hh{EhEh}}}}{CDbe{}{{CDd{c}}}}{CDbe{}{{CDf{c}}}}{CCjCCj}{c{{Ah{BCf}}}{{Hd{}{{Bb{{f{BCf}}}}}}}}{cBCf{{Hd{}{{Bb{{f{BCf}}}}}}}}{{{f{CCj}}CCj}d}{{}CCj}{{}CCl}{Fh{{f{c}}}{}}{{{f{{CDh{c}}}}}{{f{e}}}{}{}}{{{f{{AJn{c}}}}}{{f{e}}}{}{}}2222{Fh{{f{Bjc}}}{}}{{{f{Bj{AJn{c}}}}}{{f{Bje}}}{}{}}1111{{CCjCCj}CCj}{Fhb}0000{cBDd{{Hd{}{{Bb{Dn}}}}}}{c{{Ah{Dn}}}{{Hd{}{{Bb{{f{Dn}}}}}}}}:{{{f{{CDh{Af}}}}{f{{CDh{Af}}}}}d}{{{f{CCj}}{f{CCj}}}d}{{{f{CCl}}{f{CCl}}}d}{{f{f{c}}}d{}}00000000{{{f{BjCCj}}c}b{{Hd{}{{Bb{CCj}}}}}}``{{{f{CCj}}{f{BjGl}}}Gn}0000{{{f{CCl}}{f{BjGl}}}Gn}{cc{}}000{CCjCCl}1{Dj{{B`{CCj}}}}{DjCCj}00{c{{AJn{{l{e}}}}}{{Hd{}{{Bb{}}}}}A`}{c{{AJn{Gf}}}{{Hd{}{{Bb{d}}}}}}{cCCj{{Hd{}{{Bb{CCj}}}}}}{eCDf{}{{Hd{}{{Bb{c}}}}}}23{{{f{Df}}}{{B`{CCj}}}}{c{{AJn{{l{e}}}}}{{Hj{}{{Bb{}}}}}A`}{c{{AJn{{l{e}}}}}{{Hl{}{{Bb{}}}}}A`}{c{{AJn{Gf}}}{{Hl{}{{Bb{d}}}}}}{{{f{Dn}}{f{Dn}}}{{B`{Dn}}}}{{{f{Dn}}{f{Dn}}CCl}{{B`{Dn}}}}{{{f{AMn}}{f{AMn}}}AMn}{{{f{Af}}{f{Af}}}{{Ah{b}}}}{{{f{{CDh{Af}}}}{f{Bjc}}}bABf}{{{f{CCj}}{f{Bjc}}}bABf}{{{f{CCl}}{f{Bjc}}}bABf}{{}Fh}0000{{{f{BjCCj}}CCj}b}{{CCjCCj}CCj}{{{f{CCj}}CCj}d}{{}c{}}0000{{{AJn{c}}}c{}}{CCjc{}}2{BFf{{Fn{c}}}{}}{{}{{Fn{Bh}}}}{{{f{CCj}}}d}0{{{f{CCj}}}{{ACl{CCj}}}}{{{f{CCn}}}{{`{{Bf{}{{Bb{CCn}}}}}}}}{{{f{CCj}}}{{ACn{CCj}}}}{{{f{CCn}}}Fh}{MfHn}1{c{{AJn{c}}}{}}{{eFh}{{CD`{ec}}}{}{{Bf{}{{Bb{c}}}}}}{{cFh}{{CD`{{CDl{{CDj{c}}}}c}}}A@n}{{{f{Bj{CD`{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}}}{{{f{Bj{CD`{ec}}}}}B`{}{{Bf{}{{Bb{c}}}}Gd}}{CCjCCj}{{{f{Df}}}Db}`{{{f{BjCCj}}CCj}b}{{{f{BjCCj}}CCjd}b}{{{f{{CD`{ec}}}}}{{Hh{Fh{B`{Fh}}}}}{}{{Bf{}{{Bb{c}}}}}}{{{f{CCn}}KbFh}CCn}{{{f{{Dl{c}}}}KbFh}{{f{{Dl{c}}}}}{}}{{{f{c}}Fh}{{Fn{c}}}CCn}0{{{f{CCn}}Kb}{{Hh{CCnCCn}}}}{{{f{BCf}}Fhd}{{Fn{BCf}}}}{{CCjCCj}CCj}80{fc{}}009{{CDbFh}{{CD`{CDbc}}}{}}{c{{Ob{e}}}{}{}}0000{{{f{Dn}}{f{Dn}}}{{Ah{Dn}}}}{{}{{Ob{c}}}{}}0000{fOd}00006{{}c{}}0000{{{f{Dn}}e}c{}{{Cd{{f{BjCh}}}{{Cb{c}}}}}}{{{f{{Dl{{Fn{c}}}}}}}{{Hh{Fh{Fn{Fh}}}}}{}}{{{f{BCf}}}{{`{{Bf{}{{Bb{BCf}}}}}}}}{{{f{{Dl{c}}}}}{{AJh{I`}}}{{Kj{{Dl{Of}}}}JfJh}}{{{f{{Dl{e}}}}}{{Fn{c}}}{JfJhCf}{{Kj{{Dl{c}}}}}}{{{f{Af}}}{{Fn{Af}}}}","D":"JKf","p":[[1,"unit"],[1,"bool"],[1,"reference"],[5,"Private",5755],[5,"ListType",1535],[5,"ChunkedArray",40],[1,"f64"],[10,"PolarsNumericType",1535],[10,"Num",5756],[10,"ToPrimitive",5757],[5,"Series",5034],[8,"PolarsResult",4260,5758],[10,"NumOpsDispatchInner",5479,5759],[6,"GroupsProxy",3855,5760],[5,"BooleanType",1535],[6,"Option",5761],[17,"Item"],[8,"ArrayBox",5455],[10,"Iterator",5762],[5,"PlSmallStr",4260,5763],[0,"mut"],[17,"IsNested"],[5,"FalseT",1535],[10,"PolarsDataType",1535],[17,"Output"],[10,"Fn",5764],[10,"Copy",5765],[5,"AmortSeries",5455],[10,"FnMut",5764],[5,"Float32Type",1535],[5,"Float64Type",1535],[8,"StringChunked",1535],[5,"String",5766],[5,"StringType",1535],[1,"str"],[5,"BinaryType",1535],[1,"u8"],[1,"slice"],[6,"DataType",1535,5767],[8,"ListChunked",1535],[5,"View",5768],[5,"SortOptions",1450],[8,"IdxCa",1535,5769],[6,"Column",3616],[5,"SortMultipleOptions",1450],[8,"BinaryChunked",1535],[10,"PolarsIntegerType",1535],[10,"MetadataTrait",823,5770],[5,"Box",5771],[6,"CastOptions",735],[10,"NumOpsDispatchCheckedInner",5504,5772],[1,"usize"],[8,"ChunkLenIter",40],[8,"ArrayRef",4260,5773],[5,"Vec",5774],[5,"CompactString",5775],[5,"MetadataProperties",823],[10,"DoubleEndedIterator",5776],[8,"BooleanChunked",1535],[17,"HasViews"],[17,"IsObject"],[5,"Formatter",5777],[8,"Result",5777],[10,"Array",5773],[17,"Array"],[10,"IntoIterator",5778],[5,"Bitmap",5779],[1,"tuple"],[10,"IntoParallelIterator",5780],[10,"TrustedLen",5781],[6,"AnyValue",1535,5782],[8,"IdxSize",4260,5783],[5,"MetadataFlags",823],[5,"ObjectType",1535],[10,"PolarsObjectSafe",1109],[10,"PolarsObject",1109],[1,"f32"],[1,"u64"],[5,"Metadata",823],[5,"RwLockWriteGuard",5784],[5,"Int128Type",1535],[8,"DecimalChunked",1535,5785],[10,"Send",5765],[10,"Sync",5765],[10,"ExactSizeIterator",5786],[10,"PolarsFloatType",1535],[6,"IsSorted",5034,5787],[10,"PolarsIterator",784],[1,"i64"],[5,"Iter",5788],[1,"fn"],[5,"Map",5789],[10,"AsRef",5790],[6,"ChunkedArrayLayout",40],[10,"NumCast",5757],[5,"Scalar",4971],[6,"MetadataReadGuard",823,5791],[5,"IMMetadata",823,5792],[5,"Arc",4260,5793],[5,"RwLockReadGuard",5784],[5,"Int32Type",1535],[1,"i32"],[5,"UInt64Type",1535],[5,"UInt32Type",1535],[1,"u32"],[5,"Int64Type",1535],[1,"i128"],[5,"Range",5794],[5,"Field",1535,5795],[10,"ParallelIterator",5780],[10,"IndexedParallelIterator",5780],[6,"QuantileInterpolOptions",4260,5796],[5,"RollingOptionsFixedWindow",4260,5797],[10,"Sized",5765],[17,"IsStruct"],[8,"PlRandomState",1535,5798],[5,"BytesHash",5799],[8,"ArrayView1",5800],[8,"Array2",5800],[6,"Either",5801],[6,"Result",5802],[5,"TypeId",5803],[5,"NullableIdxSize",4260,5783],[10,"FnOnce",5764],[17,"Scalar"],[17,"Out"],[17,"TrueDivOut"],[10,"ArithmeticChunked",445,5804],[10,"ChunkedBuilder",473],[5,"BinViewChunkedBuilder",473,5805],[10,"ViewType",5806],[5,"BooleanChunkedBuilder",473,5807],[5,"NullChunkedBuilder",473,5808],[5,"PrimitiveChunkedBuilder",473,5809],[10,"Clone",5810],[8,"StringChunkedBuilder",473,5805],[8,"BinaryChunkedBuilder",473,5805],[10,"NewChunkedArray",473],[5,"AnonymousListBuilder",581,5811],[5,"AnonymousOwnedListBuilder",581,5811],[5,"ListBooleanChunkedBuilder",581,5812],[5,"ListPrimitiveChunkedBuilder",581,5813],[10,"ListBuilderTrait",581],[5,"ListStringChunkedBuilder",581,5814],[5,"ListBinaryChunkedBuilder",581,5814],[5,"ListNullChunkedBuilder",581,5815],[10,"Hasher",5816],[10,"ChunkedCollectInferIterExt",764],[10,"ChunkedCollectIterExt",764],[10,"Canonical",778],[10,"ChunkedCollectParIterExt",780],[10,"FromParIterWithDtype",780],[5,"BooleanArray",5817],[5,"BoolIterNoNull",784],[5,"SomeIterator",784],[5,"MetadataEnv",823,5818],[10,"MetadataCollectable",823,5819],[5,"Iter",5820],[5,"IterNames",5820],[5,"File",5821],[5,"Mutex",5822],[6,"MetadataMerge",823],[5,"RwLock",5784],[5,"ObjectArray",1109],[6,"ArrowDataType",1535,5823],[10,"Any",5803],[10,"Debug",5777],[8,"ObjectValueIter",1109],[5,"BitmapIter",5824],[6,"ZipValidity",5825],[5,"ObjectChunkedBuilder",1186],[8,"ObjectChunked",1535],[10,"AnonymousObjectBuilder",1209],[5,"ObjectRegistry",1209],[8,"ObjectConverter",1209],[8,"BuilderConstructor",1209],[10,"ChunkAgg",1237],[17,"FuncRet"],[10,"ChunkApply",1237],[10,"ChunkApplyKernel",1237],[10,"ChunkSort",1237],[10,"ChunkUnique",1237],[10,"ChunkCast",1237],[6,"FillNullStrategy",1237],[10,"ChunkCompare",1237],[10,"ChunkExplode",1237],[5,"OffsetsBuffer",5826],[10,"ChunkFillNullValue",1237],[10,"ChunkFilter",1237],[10,"ChunkFull",1237],[10,"ChunkFullNull",1237],[10,"ChunkAnyValue",1237],[10,"IsFirstDistinct",1237],[10,"IsLastDistinct",1237],[10,"ChunkQuantile",1237],[10,"ChunkExpandAtIndex",1237],[10,"ChunkReverse",1237],[10,"ChunkRollApply",1237],[10,"ChunkSet",1237],[10,"ChunkShift",1237],[10,"ChunkShiftFill",1237],[10,"ChunkVar",1237],[10,"ChunkTake",1237],[10,"ChunkTakeUnchecked",1237],[10,"ChunkBytes",1237],[10,"ChunkZip",1237],[10,"BinaryFnMut",1363],[10,"StaticArray",1535,5827],[10,"TernaryFnMut",1363],[10,"Error",5828],[10,"UnaryFnMut",1363],[5,"PrimitiveArray",5829],[6,"SearchSortedSide",1404],[10,"SlicedArray",4260,5830],[5,"NoNull",5539],[5,"RowsEncoded",5831],[5,"BinaryArray",5832],[8,"BinaryOffsetChunked",1535],[5,"NaiveDateTime",5833],[6,"PolarsError",4260,5758],[6,"Cow",5834],[8,"Float32Chunked",1535],[8,"Float64Chunked",1535],[10,"ArrayFromIter",1535,5835],[10,"ArrayFromIterDtype",1535,5835],[10,"AsRefDataType",1535,5767],[17,"ValueT"],[17,"ZeroableValueT"],[17,"ValueIterT"],[10,"Zeroable",5836],[10,"From",5790],[5,"CategoricalChunked",2995,5837],[10,"CategoricalMergeOperation",2995,5838],[10,"LogicalType",1535,5839],[5,"Logical",1535,5839],[5,"OwnedObject",1535,5782],[6,"UnknownKind",1535,5767],[5,"CompatLevel",1535,5767],[6,"TimeUnit",1535,5840],[5,"UInt8Type",1535],[5,"UInt16Type",1535],[5,"Int8Type",1535],[5,"Int16Type",1535],[5,"DateType",1535],[5,"TimeType",1535],[5,"BinaryOffsetType",1535],[5,"DecimalType",1535],[5,"DatetimeType",1535],[5,"DurationType",1535],[5,"CategoricalType",1535],[6,"ArrowTimeUnit",1535],[10,"ArrayCollectIterExt",4260,5835],[8,"Utf8ViewArray",5806],[8,"UInt32Chunked",1535],[5,"Error",5777],[10,"NumericNative",1535],[10,"Into",5790],[5,"ArrowField",4260],[6,"PrimitiveType",5841],[6,"IntegerType",5842],[10,"Borrow",5843],[10,"NoOption",5844],[10,"GetAnyValue",1535,5782],[8,"Int128Chunked",1535],[10,"IntoScalar",1535,5845],[6,"Ordering",5846],[6,"PhysicalType",5842],[6,"ToCompactStringError",5775],[8,"UInt8Chunked",1535],[8,"UInt16Chunked",1535],[8,"UInt64Chunked",1535],[8,"Int8Chunked",1535],[8,"Int16Chunked",1535],[8,"Int32Chunked",1535],[8,"Int64Chunked",1535],[8,"PlIdHashMap",1535,5769],[5,"CategoricalChunkedBuilder",2995,5847],[5,"GlobalRevMapMerger",2995,5838],[6,"RevMapping",3137,5848],[6,"CategoricalOrdering",3137,5848],[5,"CatIter",2995,5837],[1,"u128"],[5,"DataFrame",3332],[5,"StringCacheHolder",3191,5849],[5,"ErrString",3220,5758],[6,"PolarsWarning",3220,5850],[10,"Display",5777],[6,"FloatFmt",3301],[1,"char"],[8,"Schema",5012],[10,"IntoColumn",3616],[6,"NullStrategy",3332],[6,"UniqueKeepStrategy",3332],[8,"PlHashSet",1535,5798],[8,"ArrowSchema",4260,5851],[5,"Row",4113],[5,"GroupBy",3855],[5,"RangeFull",5794],[5,"RangeToInclusive",5794],[5,"RangeTo",5794],[5,"RangeFrom",5794],[5,"RangeInclusive",5794],[5,"RecordBatchIter",3332],[5,"PhysRecordBatchIter",3332],[10,"IntoSeries",5034,5852],[10,"RangeBounds",5794],[10,"IntoVec",5539],[8,"SchemaRef",5012],[6,"IndexOrder",4260,5853],[5,"StructArray",5854],[8,"RecordBatch",5855],[5,"ScalarColumn",3616],[6,"BitRepr",5034,5787],[8,"SeriesPhysIter",5034,5856],[5,"UnpivotArgsIR",3826],[5,"GroupsIdx",3855,5760],[8,"IdxVec",5857],[6,"GroupByMethod",3855],[5,"SlicedGroups",3855,5760],[5,"GroupsProxyParIter",3855,5760],[10,"UnindexedConsumer",5858],[6,"GroupsIndicator",3855,5760],[8,"IdxItem",3855,5760],[10,"IntoGroupsProxy",3855,5859],[5,"Copied",5860],[5,"Zip",5861],[5,"GroupsProxyIter",3855,5760],[8,"GroupsSlice",3855,5760],[1,"array"],[6,"RollingFnParams",4260,5862],[10,"IsFloat",5863],[10,"NativeType",5864],[10,"AggList",4097,5865],[10,"TakeExtremum",4097],[10,"PhysicalAggExpr",4110],[6,"AnyValueBuffer",4113,5866],[6,"AnyValueBufferTrusted",4113,5866],[5,"IdHasher",4212,5867],[5,"IdxHash",4212,5867],[5,"HashMap",5868],[10,"BuildHasher",5816],[10,"VecHash",4212,5869],[10,"Allocator",5870],[5,"BorrowedFd",5871],[10,"AsFd",5871],[10,"AsRawFd",5872],[5,"Path",5873],[5,"OsStr",5874],[20,"MaybeUninit",5875],[10,"NumOpsDispatchChecked",4260,5772],[5,"ChunkId",4260,5783],[5,"RollingVarParams",4260,5862],[5,"RollingQuantileParams",4260,5862],[6,"NonExistent",4260,5876],[10,"Ord",5846],[10,"Default",5877],[5,"CStr",5878],[5,"Weak",5793],[10,"PartialEq",5846],[10,"Scalar",5879],[5,"Error",5880],[5,"Utf8Error",5881],[5,"TryReserveError",5882],[6,"Error",5883],[5,"PathBuf",5873],[1,"never"],[5,"OsString",5874],[10,"ToOwned",5834],[5,"CString",5884],[10,"FromData",4893,5885],[5,"Buffer",5886],[10,"FromDataUtf8",4893,5885],[10,"FromDataBinary",4893,5885],[5,"ListArray",5887],[6,"Ambiguous",4260,5876],[10,"NamedFromOwned",4260,5888],[10,"PartialOrd",5846],[10,"Hash",5816],[10,"SeriesTrait",5034,5787],[10,"CloneToUninit",5810],[10,"ChunkAggSeries",4260,5889],[10,"QuantileAggSeries",4260,5890],[10,"IndexToUsize",4260,5891],[10,"NamedFrom",4260,5888],[5,"Pin",5892],[5,"Request",5828],[5,"BorrowedCursor",5893],[5,"IoSliceMut",5894],[6,"SeekFrom",5894],[10,"VarAggSeries",4260,5895],[5,"AllocError",5870],[5,"BTreeMap",5896],[5,"Arguments",5777],[5,"IoSlice",5894],[5,"AnonymousBuilder",4899,5897],[5,"Offsets",5826],[5,"MutableNullArray",4922,5898],[5,"MutableBitmap",5899],[5,"Utf8Array",5900],[1,"i8"],[1,"i16"],[1,"u16"],[5,"Schema",5901],[10,"SchemaExt",5012],[17,"DataType"],[10,"SchemaNamesAndDtypes",5012],[8,"Metadata",5823],[5,"SeriesIter",5034,5856],[5,"Rc",5902],[10,"LhsNumOps",5479,5759],[10,"NumOpsDispatch",5479,5759],[6,"NullBehavior",5512],[5,"SuperTypeFlags",5539,5903],[5,"SuperTypeOptions",5539,5903],[10,"Container",5539],[5,"TrustMyLength",5539,5781],[10,"CustomIterTools",5539,5904],[10,"FromIteratorReversed",5905],[10,"FromTrustedLenIterator",5539,5904],[5,"Wrap",5539],[5,"Repeat",5906],[5,"Take",5907],[8,"FillNullLimit",1237],[10,"InitHashMaps",1535],[10,"InitHashMaps2",1535],[5,"TrueT",1535],[15,"IO",3287],[15,"Context",3287],[15,"Count",4094],[15,"Slice",4095],[10,"ListFromIter",4260],[10,"Utf8FromIter",4966],[10,"BinaryFromIter",4966]],"r":[[0,5867],[4,5849],[13,5849],[16,5849],[32,5849],[445,5804],[473,5805],[474,5805],[475,5807],[478,5808],[479,5809],[480,5805],[581,5811],[582,5811],[583,5814],[584,5812],[586,5815],[587,5813],[588,5814],[828,5792],[834,5819],[835,5818],[839,5791],[840,5770],[1156,5908],[1434,5830],[1450,5830],[1536,5782],[1538,5835],[1539,5835],[1540,5835],[1541,5823],[1543,5767],[1559,5837],[1562,5837],[1563,5847],[1564,5838],[1565,5848],[1568,5767],[1569,5767],[1570,5767],[1571,5767],[1582,5785],[1593,5795],[1594,5795],[1609,5782],[1611,5838],[1615,5769],[1616,5891],[1617,5769],[1618,5769],[1619,5798],[1620,5769],[1645,5845],[1659,5839],[1660,5839],[1678,5782],[1682,5798],[1683,5798],[1684,5769],[1685,5798],[1686,5798],[1687,5798],[1688,5763],[1694,5848],[1696,5827],[1708,5840],[1709,5767],[1736,5767],[1935,5838],[1952,5839],[2058,5767],[2583,5838],[2584,5838],[2596,5767],[2684,5837],[2723,5837],[2995,5837],[2996,5837],[2997,5847],[2998,5838],[2999,5848],[3001,5838],[3005,5848],[3022,5838],[3089,5838],[3090,5838],[3108,5837],[3112,5837],[3137,5848],[3142,5848],[3191,5849],[3197,5849],[3200,5849],[3208,5849],[3210,5848],[3215,5848],[3216,5849],[3217,5849],[3218,5849],[3219,5849],[3226,5758],[3233,5758],[3234,5758],[3235,5850],[3249,5758],[3257,5758],[3264,5850],[3269,5758],[3271,5758],[3272,5758],[3273,5758],[3274,5758],[3275,5850],[3276,5758],[3291,5909],[3292,5909],[3293,5909],[3294,4212],[3855,5760],[3861,5760],[3862,5760],[3863,5760],[3864,5760],[3865,5760],[3866,5760],[3869,5760],[3871,5859],[3883,5760],[4097,5865],[4115,5866],[4116,5866],[4211,5910],[4212,5867],[4213,5867],[4214,5867],[4215,5869],[4218,5869],[4219,5869],[4260,5876],[4261,5793],[4262,5804],[4263,5835],[4264,5773],[4266,5851],[4267,5805],[4268,5807],[4270,5837],[4271,5837],[4272,5847],[4273,5838],[4274,5848],[4275,5889],[4276,5783],[4277,40],[4278,473],[4279,764],[4280,764],[4281,3616],[4285,3332],[4292,5885],[4293,5885],[4294,5885],[4296,5838],[4299,5891],[4300,5783],[4301,5853],[4302,5891],[4303,3616],[4304,5852],[4305,5539],[4307,5911],[4308,5911],[4309,5911],[4312,5759],[4314,5814],[4315,5812],[4316,581],[4317,5912],[4318,5813],[4319,5814],[4323,5888],[4324,5888],[4326,473],[4328,5876],[4331,5783],[4332,5783],[4333,5759],[4334,5772],[4338,5763],[4339,5758],[4340,784],[4341,1109],[4342,5758],[4343,5809],[4345,5890],[4346,5796],[4349,5848],[4350,5862],[4351,5797],[4352,5862],[4353,5862],[4356,4971],[4359,5034],[4360,5787],[4362,5830],[4363,5849],[4365,5805],[4367,3332],[4368,3826],[4370,5895],[4371,5869],[4426,5838],[4477,5912],[4478,0],[4491,5912],[4523,0],[4678,5891],[4724,5912],[4726,5838],[4727,5838],[4752,5912],[4759,5758],[4760,5758],[4761,5758],[4762,5758],[4774,5837],[4776,5912],[4782,5837],[4863,5912],[4893,5885],[4894,5885],[4895,5885],[4899,5897],[4922,5898],[4953,5848],[4958,5848],[4959,5830],[4962,5849],[4963,5849],[4964,5849],[4965,5849],[4966,5913],[4967,5913],[5036,5787],[5037,1237],[5040,5852],[5041,5787],[5042,5787],[5047,5856],[5048,5856],[5049,5787],[5479,5759],[5480,5759],[5481,5759],[5487,5759],[5504,5772],[5505,5772],[5542,5904],[5543,5904],[5544,5904],[5547,5903],[5548,5903],[5549,5781],[5564,5914],[5565,5914],[5625,5915],[5626,5903],[5669,5903],[5670,5903],[5672,5916],[5700,5903],[5732,5903],[5749,5916]],"b":[[50,"impl-Add-for-ChunkedArray%3CT%3E"],[51,"impl-Add%3CN%3E-for-%26ChunkedArray%3CT%3E"],[52,"impl-Add%3CN%3E-for-ChunkedArray%3CT%3E"],[53,"impl-Add-for-%26ChunkedArray%3CT%3E"],[66,"impl-ChunkedArray%3CFloat32Type%3E"],[67,"impl-ChunkedArray%3CFloat64Type%3E"],[72,"impl-ChunkedArray%3CT%3E"],[73,"impl-ChunkedArray%3CStringType%3E"],[74,"impl-ChunkedArray%3CBinaryType%3E"],[103,"impl-Container-for-ChunkedArray%3CT%3E"],[104,"impl-ChunkedArray%3CT%3E"],[124,"impl-Div%3CN%3E-for-%26ChunkedArray%3CT%3E"],[125,"impl-Div%3CN%3E-for-ChunkedArray%3CT%3E"],[126,"impl-Div-for-%26ChunkedArray%3CT%3E"],[127,"impl-Div-for-ChunkedArray%3CT%3E"],[134,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[135,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[136,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[137,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[144,"impl-Debug-for-ChunkedArray%3CT%3E"],[145,"impl-Debug-for-ChunkedArray%3CBooleanType%3E"],[155,"impl-FromIterator%3C(Vec%3C%3CT+as+PolarsNumericType%3E::Native%3E,+Option%3CBitmap%3E)%3E-for-ChunkedArray%3CT%3E"],[156,"impl-FromIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[157,"impl-FromIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[159,"impl-FromTrustedLenIterator%3COption%3C%3CT+as+PolarsNumericType%3E::Native%3E%3E-for-ChunkedArray%3CT%3E"],[160,"impl-FromTrustedLenIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[188,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[189,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[190,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[191,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[225,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[226,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[227,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[228,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[229,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[230,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[231,"impl-ChunkedArray%3CT%3E"],[232,"impl-Container-for-ChunkedArray%3CT%3E"],[237,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[238,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[239,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[240,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[241,"impl-ChunkedArray%3CBooleanType%3E"],[242,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[244,"impl-ChunkedArray%3CBooleanType%3E"],[245,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[255,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[256,"impl-ChunkedArray%3CBooleanType%3E"],[259,"impl-ChunkedArray%3CT%3E"],[260,"impl-ChunkedArray%3CBooleanType%3E"],[261,"impl-Mul-for-ChunkedArray%3CT%3E"],[262,"impl-Mul-for-%26ChunkedArray%3CT%3E"],[263,"impl-Mul%3CN%3E-for-%26ChunkedArray%3CT%3E"],[264,"impl-Mul%3CN%3E-for-ChunkedArray%3CT%3E"],[269,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[270,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[271,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-ChunkedArray%3CStringType%3E"],[272,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[273,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[274,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[275,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-ChunkedArray%3CUInt64Type%3E"],[276,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[277,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[278,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-ChunkedArray%3CInt64Type%3E"],[279,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-ChunkedArray%3CInt128Type%3E"],[280,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[281,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-ChunkedArray%3CFloat32Type%3E"],[282,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-ChunkedArray%3CInt32Type%3E"],[283,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[284,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-ChunkedArray%3CInt64Type%3E"],[285,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[286,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[287,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-ChunkedArray%3CInt32Type%3E"],[288,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-ChunkedArray%3CUInt64Type%3E"],[289,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-ChunkedArray%3CUInt32Type%3E"],[290,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-ChunkedArray%3CBooleanType%3E"],[291,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-ChunkedArray%3CUInt32Type%3E"],[292,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-ChunkedArray%3CFloat64Type%3E"],[300,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[301,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[302,"impl-ChunkCompare%3CRhs%3E-for-ChunkedArray%3CT%3E"],[303,"impl-ChunkCompare%3C%26ChunkedArray%3CT%3E%3E-for-ChunkedArray%3CT%3E"],[307,"impl-ChunkedArray%3CStringType%3E"],[308,"impl-ChunkedArray%3CListType%3E"],[309,"impl-ChunkedArray%3CListType%3E"],[310,"impl-ChunkedArray%3CStringType%3E"],[321,"impl-Rem%3CN%3E-for-%26ChunkedArray%3CT%3E"],[322,"impl-Rem%3CN%3E-for-ChunkedArray%3CT%3E"],[323,"impl-Rem-for-%26ChunkedArray%3CT%3E"],[324,"impl-Rem-for-ChunkedArray%3CT%3E"],[343,"impl-ChunkedArray%3CT%3E"],[344,"impl-Container-for-ChunkedArray%3CT%3E"],[347,"impl-Container-for-ChunkedArray%3CT%3E"],[348,"impl-ChunkedArray%3CT%3E"],[351,"impl-Sub-for-ChunkedArray%3CT%3E"],[352,"impl-Sub%3CN%3E-for-ChunkedArray%3CT%3E"],[353,"impl-Sub-for-%26ChunkedArray%3CT%3E"],[354,"impl-Sub%3CN%3E-for-%26ChunkedArray%3CT%3E"],[356,"impl-ChunkAgg%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-ChunkedArray%3CT%3E"],[357,"impl-ChunkedArray%3CBooleanType%3E"],[360,"impl-ChunkTake%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[361,"impl-ChunkTake%3CI%3E-for-ChunkedArray%3CT%3E"],[362,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CT%3E"],[363,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CT%3E"],[369,"impl-ChunkedArray%3CT%3E"],[370,"impl-ChunkedArray%3CListType%3E"],[375,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[376,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[377,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[378,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[379,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[380,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[407,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[408,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[409,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[410,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[411,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[412,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[413,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[414,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[415,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[416,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[417,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[418,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[419,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[420,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[421,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[422,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[423,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[424,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[425,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[426,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[427,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[428,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[429,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[430,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[431,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[432,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[433,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[434,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[435,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[436,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[437,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[438,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[439,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[440,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[441,"impl-ArithmeticChunked-for-ChunkedArray%3CT%3E"],[442,"impl-ArithmeticChunked-for-%26ChunkedArray%3CT%3E"],[529,"impl-BinViewChunkedBuilder%3C%5Bu8%5D%3E"],[530,"impl-BinViewChunkedBuilder%3Cstr%3E"],[861,"impl-Flags-for-MetadataProperties"],[862,"impl-MetadataProperties"],[863,"impl-MetadataFlags"],[864,"impl-Flags-for-MetadataFlags"],[928,"impl-Metadata%3CT%3E"],[929,"impl-MetadataTrait-for-Metadata%3CT%3E"],[954,"impl-Debug-for-MetadataProperties"],[955,"impl-UpperHex-for-MetadataProperties"],[956,"impl-LowerHex-for-MetadataProperties"],[957,"impl-Octal-for-MetadataProperties"],[958,"impl-Binary-for-MetadataProperties"],[959,"impl-Binary-for-MetadataFlags"],[960,"impl-Octal-for-MetadataFlags"],[961,"impl-LowerHex-for-MetadataFlags"],[962,"impl-Debug-for-MetadataFlags"],[963,"impl-UpperHex-for-MetadataFlags"],[973,"impl-MetadataProperties"],[974,"impl-Flags-for-MetadataProperties"],[975,"impl-Flags-for-MetadataFlags"],[976,"impl-MetadataFlags"],[987,"impl-Metadata%3CT%3E"],[988,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1031,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1032,"impl-Metadata%3CT%3E"],[1036,"impl-MetadataTrait-for-Metadata%3CT%3E"],[1037,"impl-Metadata%3CT%3E"],[1115,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1116,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1151,"impl-ObjectArray%3CT%3E"],[1152,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1167,"impl-ArrayFromIter%3COption%3C%26T%3E%3E-for-ObjectArray%3CT%3E"],[1168,"impl-ArrayFromIter%3C%26T%3E-for-ObjectArray%3CT%3E"],[1178,"impl-ObjectArray%3CT%3E"],[1179,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1180,"impl-StaticArray-for-ObjectArray%3CT%3E"],[1181,"impl-ObjectArray%3CT%3E"],[1183,"impl-ObjectArray%3CT%3E"],[1184,"impl-Array-for-ObjectArray%3CT%3E"],[1187,"impl-ObjectChunkedBuilder%3CT%3E"],[1188,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1190,"impl-AnonymousObjectBuilder-for-ObjectChunkedBuilder%3CT%3E"],[1191,"impl-ObjectChunkedBuilder%3CT%3E"],[1775,"impl-Add-for-%26ChunkedArray%3CBooleanType%3E"],[1776,"impl-Add-for-ChunkedArray%3CBooleanType%3E"],[1777,"impl-Add%3C%26str%3E-for-%26ChunkedArray%3CStringType%3E"],[1778,"impl-Add-for-ChunkedArray%3CStringType%3E"],[1779,"impl-Add-for-%26ChunkedArray%3CStringType%3E"],[1780,"impl-Add-for-ChunkedArray%3CBinaryType%3E"],[1781,"impl-Add-for-%26ChunkedArray%3CBinaryType%3E"],[1782,"impl-Add%3C%26%5Bu8%5D%3E-for-%26ChunkedArray%3CBinaryType%3E"],[1858,"impl-BitAnd-for-%26ChunkedArray%3CBooleanType%3E"],[1859,"impl-BitAnd-for-ChunkedArray%3CBooleanType%3E"],[1860,"impl-BitOr-for-%26ChunkedArray%3CBooleanType%3E"],[1861,"impl-BitOr-for-ChunkedArray%3CBooleanType%3E"],[1862,"impl-BitXor-for-%26ChunkedArray%3CBooleanType%3E"],[1863,"impl-BitXor-for-ChunkedArray%3CBooleanType%3E"],[2186,"impl-PartialEq%3CArrowDataType%3E-for-DataType"],[2187,"impl-PartialEq-for-DataType"],[2196,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2197,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2198,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2199,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2202,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2203,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2204,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2205,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2243,"impl-Display-for-AnyValue%3C\'_%3E"],[2244,"impl-Debug-for-AnyValue%3C\'a%3E"],[2246,"impl-Debug-for-DataType"],[2247,"impl-Display-for-DataType"],[2250,"impl-Display-for-TimeUnit"],[2251,"impl-Debug-for-TimeUnit"],[2262,"impl-From%3CK%3E-for-AnyValue%3C\'static%3E"],[2263,"impl-From%3C%26%5Bu8%5D%3E-for-AnyValue%3C\'a%3E"],[2264,"impl-From%3COption%3CT%3E%3E-for-AnyValue%3C\'a%3E"],[2265,"impl-From%3Cbool%3E-for-AnyValue%3C\'static%3E"],[2266,"impl-From%3C%26str%3E-for-AnyValue%3C\'a%3E"],[2269,"impl-From%3C%26ArrowDataType%3E-for-DataType"],[2270,"impl-From%3CAnyValue%3C\'_%3E%3E-for-DataType"],[2271,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-DataType"],[2274,"impl-From%3C%26Field%3E-for-Field"],[2276,"impl-From%3C%26AnyValue%3C\'a%3E%3E-for-Field"],[2300,"impl-From%3CPrimitiveType%3E-for-ArrowDataType"],[2301,"impl-From%3CIntegerType%3E-for-ArrowDataType"],[2304,"impl-FromIterator%3COption%3CBox%3Cdyn+Array%3E%3E%3E-for-ChunkedArray%3CListType%3E"],[2305,"impl-FromIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2306,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2308,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2309,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2310,"impl-FromIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2311,"impl-FromIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2317,"impl-FromTrustedLenIterator%3COption%3CSeries%3E%3E-for-ChunkedArray%3CListType%3E"],[2318,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CListType%3E"],[2320,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2321,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2322,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2323,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2324,"impl-FromTrustedLenIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2325,"impl-FromTrustedLenIterator%3CPtr%3E-for-ChunkedArray%3CBinaryOffsetType%3E"],[2332,"impl-FromParallelIterator%3COption%3Cbool%3E%3E-for-ChunkedArray%3CBooleanType%3E"],[2333,"impl-FromParallelIterator%3Cbool%3E-for-ChunkedArray%3CBooleanType%3E"],[2334,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CStringType%3E"],[2335,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CStringType%3E"],[2336,"impl-FromParallelIterator%3COption%3CPtr%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2337,"impl-FromParallelIterator%3CPtr%3E-for-ChunkedArray%3CBinaryType%3E"],[2426,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2427,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2428,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2429,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2432,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2433,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2434,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2435,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2573,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2574,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2575,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2576,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2579,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2580,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2581,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2582,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2618,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-ChunkedArray%3CStringType%3E"],[2619,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2620,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2621,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-ChunkedArray%3CStringType%3E"],[2622,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2623,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2624,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2625,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2626,"impl-NamedFrom%3CS,+%5BOption%3CT%3E%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2627,"impl-NamedFrom%3C%26%5BT%5D,+%26%5BT%5D%3E-for-ChunkedArray%3CObjectType%3CT%3E%3E"],[2640,"impl-Not-for-ChunkedArray%3CBooleanType%3E"],[2641,"impl-Not-for-%26ChunkedArray%3CBooleanType%3E"],[2644,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2645,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2646,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2647,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2650,"impl-ChunkCompare%3C%26str%3E-for-ChunkedArray%3CStringType%3E"],[2651,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-ChunkedArray%3CStringType%3E"],[2652,"impl-ChunkCompare%3C%26%5Bu8%5D%3E-for-ChunkedArray%3CBinaryType%3E"],[2653,"impl-ChunkCompare%3C%26ChunkedArray%3CBinaryType%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2736,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CStringType%3E"],[2737,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CStringType%3E"],[2738,"impl-ChunkTakeUnchecked%3CChunkedArray%3CUInt32Type%3E%3E-for-ChunkedArray%3CBinaryType%3E"],[2739,"impl-ChunkTakeUnchecked%3CI%3E-for-ChunkedArray%3CBinaryType%3E"],[3042,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3043,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3044,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3045,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3046,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3047,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3062,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3063,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3064,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3065,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3066,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3067,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3083,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3084,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3085,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3086,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3087,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3088,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3099,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3100,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3101,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3102,"impl-ChunkCompare%3C%26str%3E-for-CategoricalChunked"],[3103,"impl-ChunkCompare%3C%26ChunkedArray%3CStringType%3E%3E-for-CategoricalChunked"],[3104,"impl-ChunkCompare%3C%26CategoricalChunked%3E-for-CategoricalChunked"],[3259,"impl-Display-for-ErrString"],[3260,"impl-Debug-for-ErrString"],[3357,"impl-Add%3C%26DataFrame%3E-for-%26DataFrame"],[3358,"impl-Add%3C%26Series%3E-for-%26DataFrame"],[3359,"impl-Add%3C%26Series%3E-for-DataFrame"],[3401,"impl-Div%3C%26Series%3E-for-DataFrame"],[3402,"impl-Div%3C%26DataFrame%3E-for-%26DataFrame"],[3403,"impl-Div%3C%26Series%3E-for-%26DataFrame"],[3435,"impl-Debug-for-DataFrame"],[3436,"impl-Display-for-DataFrame"],[3442,"impl-FromIterator%3CSeries%3E-for-DataFrame"],[3443,"impl-FromIterator%3CColumn%3E-for-DataFrame"],[3469,"impl-Index%3Cusize%3E-for-DataFrame"],[3470,"impl-Index%3C%26str%3E-for-DataFrame"],[3471,"impl-Index%3CRangeFull%3E-for-DataFrame"],[3472,"impl-Index%3CRangeToInclusive%3Cusize%3E%3E-for-DataFrame"],[3473,"impl-Index%3CRangeTo%3Cusize%3E%3E-for-DataFrame"],[3474,"impl-Index%3CRangeFrom%3Cusize%3E%3E-for-DataFrame"],[3475,"impl-Index%3CRangeInclusive%3Cusize%3E%3E-for-DataFrame"],[3476,"impl-Index%3CRange%3Cusize%3E%3E-for-DataFrame"],[3494,"impl-Container-for-DataFrame"],[3495,"impl-DataFrame"],[3502,"impl-Mul%3C%26Series%3E-for-%26DataFrame"],[3503,"impl-Mul%3C%26Series%3E-for-DataFrame"],[3504,"impl-Mul%3C%26DataFrame%3E-for-%26DataFrame"],[3505,"impl-DataFrame"],[3506,"impl-Container-for-DataFrame"],[3523,"impl-Rem%3C%26Series%3E-for-%26DataFrame"],[3524,"impl-Rem%3C%26DataFrame%3E-for-%26DataFrame"],[3525,"impl-Rem%3C%26Series%3E-for-DataFrame"],[3552,"impl-Container-for-DataFrame"],[3553,"impl-DataFrame"],[3557,"impl-DataFrame"],[3558,"impl-Container-for-DataFrame"],[3561,"impl-Sub%3C%26Series%3E-for-%26DataFrame"],[3562,"impl-Sub%3C%26DataFrame%3E-for-%26DataFrame"],[3563,"impl-Sub%3C%26Series%3E-for-DataFrame"],[3583,"impl-TryFrom%3CStructArray%3E-for-DataFrame"],[3584,"impl-TryFrom%3C(RecordBatchT%3CBox%3Cdyn+Array%3E%3E,+%26Schema%3CField%3E)%3E-for-DataFrame"],[3623,"impl-Add%3CT%3E-for-Column"],[3624,"impl-Add-for-Column"],[3625,"impl-Add-for-%26Column"],[3626,"impl-Add%3CT%3E-for-%26Column"],[3648,"impl-BitAnd-for-Column"],[3649,"impl-BitAnd-for-%26Column"],[3650,"impl-Column"],[3651,"impl-BitOr-for-Column"],[3652,"impl-BitOr-for-%26Column"],[3653,"impl-BitXor-for-Column"],[3654,"impl-BitXor-for-%26Column"],[3680,"impl-Div%3CT%3E-for-%26Column"],[3681,"impl-Div%3CT%3E-for-Column"],[3682,"impl-Div-for-Column"],[3683,"impl-Div-for-%26Column"],[3705,"impl-From%3CScalarColumn%3E-for-Column"],[3706,"impl-From%3CSeries%3E-for-Column"],[3753,"impl-Mul%3CT%3E-for-%26Column"],[3754,"impl-Mul%3CT%3E-for-Column"],[3755,"impl-Mul-for-%26Column"],[3756,"impl-Mul-for-Column"],[3771,"impl-Rem%3CT%3E-for-Column"],[3772,"impl-Rem%3CT%3E-for-%26Column"],[3773,"impl-Rem-for-%26Column"],[3774,"impl-Rem-for-Column"],[3791,"impl-Sub%3CT%3E-for-Column"],[3792,"impl-Sub%3CT%3E-for-%26Column"],[3793,"impl-Sub-for-Column"],[3794,"impl-Sub-for-%26Column"],[3971,"impl-Debug-for-GroupByMethod"],[3972,"impl-Display-for-GroupByMethod"],[3978,"impl-From%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E-for-GroupsIdx"],[3979,"impl-From%3CVec%3C(Vec%3Cu32%3E,+Vec%3CUnitVec%3Cu32%3E%3E)%3E%3E-for-GroupsIdx"],[3980,"impl-From%3CVec%3CVec%3C(u32,+UnitVec%3Cu32%3E)%3E%3E%3E-for-GroupsIdx"],[4014,"impl-IntoIterator-for-%26GroupsIdx"],[4015,"impl-IntoIterator-for-GroupsIdx"],[4017,"impl-IntoParallelIterator-for-GroupsIdx"],[4018,"impl-IntoParallelIterator-for-%26GroupsIdx"],[4388,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[4389,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[4390,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[4391,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[4394,"impl-Arc%3C%5BMaybeUninit%3CT%3E%5D,+A%3E"],[4395,"impl-Arc%3CMaybeUninit%3CT%3E,+A%3E"],[4483,"impl-Default-for-Arc%3C%5BT%5D%3E"],[4484,"impl-Default-for-Arc%3CT%3E"],[4485,"impl-Default-for-Arc%3Cstr%3E"],[4486,"impl-Default-for-Arc%3CCStr%3E"],[4546,"impl-PartialEq-for-Arc%3CT,+A%3E"],[4547,"impl-PartialEq%3Cdyn+Scalar%3E-for-Arc%3Cdyn+Scalar%3E"],[4548,"impl-PartialEq%3Cdyn+Array%3E-for-Arc%3Cdyn+Array%3E"],[4581,"impl-Display-for-PolarsError"],[4582,"impl-Debug-for-PolarsError"],[4583,"impl-Display-for-PlSmallStr"],[4584,"impl-Debug-for-PlSmallStr"],[4587,"impl-Pointer-for-Arc%3CT,+A%3E"],[4588,"impl-Debug-for-Arc%3CT,+A%3E"],[4589,"impl-Display-for-Arc%3CT,+A%3E"],[4599,"impl-From%3CError%3E-for-PolarsError"],[4600,"impl-From%3CUtf8Error%3E-for-PolarsError"],[4602,"impl-From%3CTryReserveError%3E-for-PolarsError"],[4603,"impl-From%3CError%3E-for-PolarsError"],[4605,"impl-From%3CString%3E-for-PlSmallStr"],[4606,"impl-From%3C%26String%3E-for-PlSmallStr"],[4607,"impl-From%3CCompactString%3E-for-PlSmallStr"],[4608,"impl-From%3C%26str%3E-for-PlSmallStr"],[4612,"impl-From%3CArc%3Cstr%3E%3E-for-Arc%3C%5Bu8%5D%3E"],[4613,"impl-From%3C%5BT;+N%5D%3E-for-Arc%3C%5BT%5D%3E"],[4614,"impl-From%3C%26CStr%3E-for-Arc%3CCStr%3E"],[4615,"impl-From%3C%26Path%3E-for-Arc%3CPath%3E"],[4616,"impl-From%3CPathBuf%3E-for-Arc%3CPath%3E"],[4619,"impl-From%3C%26OsStr%3E-for-Arc%3COsStr%3E"],[4620,"impl-From%3CCompactString%3E-for-Arc%3Cstr%3E"],[4621,"impl-From%3COsString%3E-for-Arc%3COsStr%3E"],[4622,"impl-From%3CCow%3C\'a,+B%3E%3E-for-Arc%3CB%3E"],[4623,"impl-From%3CVec%3CT,+A%3E%3E-for-Arc%3C%5BT%5D,+A%3E"],[4624,"impl-From%3CBox%3CT,+A%3E%3E-for-Arc%3CT,+A%3E"],[4625,"impl-From%3CString%3E-for-Arc%3Cstr%3E"],[4626,"impl-From%3C%26str%3E-for-Arc%3Cstr%3E"],[4627,"impl-From%3C%26%5BT%5D%3E-for-Arc%3C%5BT%5D%3E"],[4628,"impl-From%3CT%3E-for-Arc%3CT%3E"],[4629,"impl-From%3CCString%3E-for-Arc%3CCStr%3E"],[4642,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[4643,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"],[4644,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[4645,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[4646,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[4647,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[4648,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[4649,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[4985,"impl-From%3Ci8%3E-for-Scalar"],[4986,"impl-From%3Cf64%3E-for-Scalar"],[4987,"impl-From%3Cu8%3E-for-Scalar"],[4989,"impl-From%3Ci64%3E-for-Scalar"],[4990,"impl-From%3Ci32%3E-for-Scalar"],[4991,"impl-From%3Ci16%3E-for-Scalar"],[4992,"impl-From%3Cu64%3E-for-Scalar"],[4993,"impl-From%3Cf32%3E-for-Scalar"],[4994,"impl-From%3Cu32%3E-for-Scalar"],[4995,"impl-From%3Cu16%3E-for-Scalar"],[5057,"impl-Add-for-%26Series"],[5058,"impl-Add%3CT%3E-for-Series"],[5059,"impl-Add%3CT%3E-for-%26Series"],[5060,"impl-Add-for-Series"],[5132,"impl-Div%3CT%3E-for-Series"],[5133,"impl-Div-for-%26Series"],[5134,"impl-Div%3CT%3E-for-%26Series"],[5135,"impl-Div-for-Series"],[5147,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5148,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5149,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5150,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5151,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5152,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5169,"impl-Debug-for-Series"],[5170,"impl-Display-for-Series"],[5182,"impl-FromIterator%3COption%3Cu32%3E%3E-for-Series"],[5183,"impl-FromIterator%3C%26u64%3E-for-Series"],[5184,"impl-FromIterator%3COption%3Cf64%3E%3E-for-Series"],[5185,"impl-FromIterator%3C%26f32%3E-for-Series"],[5186,"impl-FromIterator%3Cf32%3E-for-Series"],[5187,"impl-FromIterator%3CString%3E-for-Series"],[5188,"impl-FromIterator%3COption%3Cf32%3E%3E-for-Series"],[5189,"impl-FromIterator%3C%26i64%3E-for-Series"],[5190,"impl-FromIterator%3COption%3CString%3E%3E-for-Series"],[5191,"impl-FromIterator%3Ci64%3E-for-Series"],[5192,"impl-FromIterator%3COption%3Ci64%3E%3E-for-Series"],[5193,"impl-FromIterator%3C%26i32%3E-for-Series"],[5194,"impl-FromIterator%3COption%3Cbool%3E%3E-for-Series"],[5195,"impl-FromIterator%3Cf64%3E-for-Series"],[5196,"impl-FromIterator%3Cu32%3E-for-Series"],[5197,"impl-FromIterator%3C%26f64%3E-for-Series"],[5198,"impl-FromIterator%3COption%3Ci32%3E%3E-for-Series"],[5199,"impl-FromIterator%3C%26u32%3E-for-Series"],[5200,"impl-FromIterator%3COption%3Cu64%3E%3E-for-Series"],[5201,"impl-FromIterator%3C%26str%3E-for-Series"],[5202,"impl-FromIterator%3Cu64%3E-for-Series"],[5203,"impl-FromIterator%3COption%3C%26str%3E%3E-for-Series"],[5204,"impl-FromIterator%3C%26bool%3E-for-Series"],[5205,"impl-FromIterator%3Cbool%3E-for-Series"],[5206,"impl-FromIterator%3Ci32%3E-for-Series"],[5207,"impl-NamedFromOwned%3CVec%3Ci64%3E%3E-for-Series"],[5208,"impl-NamedFromOwned%3CVec%3Cu32%3E%3E-for-Series"],[5209,"impl-NamedFromOwned%3CVec%3Ci128%3E%3E-for-Series"],[5210,"impl-NamedFromOwned%3CVec%3Cu64%3E%3E-for-Series"],[5211,"impl-NamedFromOwned%3CVec%3Cf32%3E%3E-for-Series"],[5212,"impl-NamedFromOwned%3CVec%3Cf64%3E%3E-for-Series"],[5213,"impl-NamedFromOwned%3CVec%3Ci32%3E%3E-for-Series"],[5228,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5229,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5230,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5231,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5232,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5233,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5276,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5277,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5278,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5279,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5280,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5281,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5295,"impl-Mul%3CT%3E-for-%26Series"],[5296,"impl-Mul-for-Series"],[5297,"impl-Mul%3CT%3E-for-Series"],[5298,"impl-Mul-for-%26Series"],[5305,"impl-NamedFrom%3CT,+%5BOption%3Ci64%3E%5D%3E-for-Series"],[5306,"impl-NamedFrom%3CT,+%5B%26str%5D%3E-for-Series"],[5307,"impl-NamedFrom%3CT,+T%3E-for-Series"],[5308,"impl-NamedFrom%3CT,+%5Bu64%5D%3E-for-Series"],[5309,"impl-NamedFrom%3CT,+%5BOption%3CString%3E%5D%3E-for-Series"],[5310,"impl-NamedFrom%3CT,+%5B%26%5Bu8%5D%5D%3E-for-Series"],[5311,"impl-NamedFrom%3CT,+%5Bi32%5D%3E-for-Series"],[5312,"impl-NamedFrom%3CT,+%5Bf64%5D%3E-for-Series"],[5313,"impl-NamedFrom%3CT,+%5BString%5D%3E-for-Series"],[5314,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+str%3E%5D%3E-for-Series"],[5315,"impl-NamedFrom%3CT,+%5Bi64%5D%3E-for-Series"],[5316,"impl-NamedFrom%3CT,+%5BVec%3Cu8%3E%5D%3E-for-Series"],[5317,"impl-NamedFrom%3CT,+%5BOption%3CVec%3Cu8%3E%3E%5D%3E-for-Series"],[5318,"impl-NamedFrom%3CT,+%5BOption%3C%26%5Bu8%5D%3E%5D%3E-for-Series"],[5319,"impl-NamedFrom%3CT,+%5BOption%3Cbool%3E%5D%3E-for-Series"],[5320,"impl-NamedFrom%3CT,+%5BOption%3Cu32%3E%5D%3E-for-Series"],[5321,"impl-NamedFrom%3CT,+%5BAnyValue%3C\'a%3E%5D%3E-for-Series"],[5322,"impl-NamedFrom%3CT,+%5BOption%3Cu64%3E%5D%3E-for-Series"],[5323,"impl-NamedFrom%3CT,+%5BOption%3Ci32%3E%5D%3E-for-Series"],[5324,"impl-NamedFrom%3CT,+%5Bu32%5D%3E-for-Series"],[5325,"impl-NamedFrom%3CT,+%5Bf32%5D%3E-for-Series"],[5326,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+%5Bu8%5D%3E%3E%5D%3E-for-Series"],[5327,"impl-NamedFrom%3CT,+%5BOption%3Ci128%3E%5D%3E-for-Series"],[5328,"impl-NamedFrom%3C%26Series,+str%3E-for-Series"],[5329,"impl-NamedFrom%3CT,+%5BOption%3Cf32%3E%5D%3E-for-Series"],[5330,"impl-NamedFrom%3CT,+%5Bi128%5D%3E-for-Series"],[5331,"impl-NamedFrom%3CT,+%5BOption%3Cf64%3E%5D%3E-for-Series"],[5332,"impl-NamedFrom%3CRange%3Ci64%3E,+Int64Type%3E-for-Series"],[5333,"impl-NamedFrom%3CRange%3Ci32%3E,+Int32Type%3E-for-Series"],[5334,"impl-NamedFrom%3CRange%3Cu64%3E,+UInt64Type%3E-for-Series"],[5335,"impl-NamedFrom%3CRange%3Cu32%3E,+UInt32Type%3E-for-Series"],[5336,"impl-NamedFrom%3CT,+ListType%3E-for-Series"],[5337,"impl-NamedFrom%3CT,+%5Bbool%5D%3E-for-Series"],[5338,"impl-NamedFrom%3CT,+%5BCow%3C\'a,+%5Bu8%5D%3E%5D%3E-for-Series"],[5339,"impl-NamedFrom%3CT,+%5BOption%3CCow%3C\'a,+str%3E%3E%5D%3E-for-Series"],[5340,"impl-NamedFrom%3CT,+%5BOption%3CSeries%3E%5D%3E-for-Series"],[5341,"impl-NamedFrom%3CT,+%5BOption%3C%26str%3E%5D%3E-for-Series"],[5346,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5347,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5348,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5349,"impl-ChunkCompare%3C%26str%3E-for-Series"],[5350,"impl-ChunkCompare%3CRhs%3E-for-Series"],[5351,"impl-ChunkCompare%3C%26Series%3E-for-Series"],[5360,"impl-Rem-for-%26Series"],[5361,"impl-Rem%3CT%3E-for-Series"],[5362,"impl-Rem%3CT%3E-for-%26Series"],[5394,"impl-Sub%3CT%3E-for-Series"],[5395,"impl-Sub-for-%26Series"],[5396,"impl-Sub-for-Series"],[5397,"impl-Sub%3CT%3E-for-%26Series"],[5418,"impl-TryFrom%3C(PlSmallStr,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5420,"impl-TryFrom%3C(PlSmallStr,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5421,"impl-TryFrom%3C(%26Field,+Vec%3CBox%3Cdyn+Array%3E%3E)%3E-for-Series"],[5422,"impl-TryFrom%3C(%26Field,+Box%3Cdyn+Array%3E)%3E-for-Series"],[5572,"impl-Flags-for-SuperTypeFlags"],[5573,"impl-SuperTypeFlags"],[5643,"impl-UpperHex-for-SuperTypeFlags"],[5644,"impl-LowerHex-for-SuperTypeFlags"],[5645,"impl-Octal-for-SuperTypeFlags"],[5646,"impl-Binary-for-SuperTypeFlags"],[5647,"impl-Debug-for-SuperTypeFlags"],[5656,"impl-Flags-for-SuperTypeFlags"],[5657,"impl-SuperTypeFlags"],[5659,"impl-FromIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5660,"impl-FromIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5663,"impl-FromTrustedLenIterator%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"],[5664,"impl-FromTrustedLenIterator%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5667,"impl-FromIteratorReversed%3C%3CT+as+PolarsNumericType%3E::Native%3E-for-NoNull%3CChunkedArray%3CT%3E%3E"],[5668,"impl-FromIteratorReversed%3Cbool%3E-for-NoNull%3CChunkedArray%3CBooleanType%3E%3E"]],"c":"OjAAAAEAAAAAAAwAEAAAADQPfw+7D74Pvw/AD8EPwg/HD8oPzw/QD/YP","e":"OzAAAAEAACARLQIAAAQABgACAAsAAAANAAAAEgACABcAAAAcAAIAIgAHACsADQBAAAAAQwABAEYABQBOAAEAUQAAAFMAAABVAAoAYQAAAGQABABsAAMAcQACAHgADQCHAAMAjAACAJAABQCYAAEAnAAFAKQAAwCqAAMArwAFALYAAQC7AAUAwwACAMoABQDRAAMA2AACAN0AAgDhAAYA6QAAAO4ADAAAAQMABgEGAA4BGwAtAQMAMgEAADQBBAA6AQEAQAEAAEIBBABIAQAATQEFAFUBAQBZAQMAXgEJAG4BAQB0AQAAeAEIAIIBCACMAQAAjgEFAJYBAACYASMAvQEpAOsBAgDxAScAHwIFACkCAAArAiYAVAJMAKgCDAC8AiQA5AIOAPQCAQD3AhkAFAMJACADAQAkAwEAJwMVAD4DCQBJAwoAXgMAAGEDAABmAw0AdQMQAIoDEgCfAwAAoQMJAK0DAwCzAwEAtwMNAM8DAQDYAwcA4QMHAPYDAQD6AwAA/QMDAAUEBQAMBAQAGAQLACsEBAAyBA0AQgQGAEwECABWBAEAWgQXAHMEBwB8BAAAfgQAAIEEAgCHBBAAmQQAAJwEAwChBAIApQQCAKkEBwCyBAAAtAQFALwEAQC/BAAAwQQBAMQEAwDJBAMAzgQCANIEAwDYBAAA2wQAAOMEAADoBAAA6wQBAPAEAQDzBAAA9gQAAAAFAQAKBQIAEAUGABkFAgAeBQEAIQUAACMFAQApBQEALAUBADMFAQA5BQAAPAUAAD8FAABBBQAAQwUAAEUFAABKBQQAUQUBAFQFBwBdBQEAYAUAAGQFAABmBQMAawUBAG4FBQB6BRYAkgUBAJYFBACcBQMAowUHAK4FEQDCBQwA0AUAANIFAwDiBQkA+AUNAAgGAgAMBgUAFAYAABYGDgAoBgAAKgYAAC8GAQAyBgAANAYDADkGAAA7BgAAPgYAAEEGAABDBgEARgYAAEgGAgBMBgwAWgYAAFwGAQBfBgAAYQYBAGQGAABmBgEAaQYAAGsGAQBuBgMAdQYAAHkGAQB9BgAAgAYAAIIGAACEBgMAiQYAAIwGCACWBgIAmwYEAKEGAQClBgAApwYAAKwGAgCwBgEAswYAALUGAQC4BgAAugYBAL0GAAC/BgEAwgYAAMQGAQDHBgAAyQYAAMwGPAAPBwQAFgcJACEHBAAnBwMALAcEADIHAAA0B18AlQdtAAQIfwCFCAAAiAhHANcIBADeCAIA4wgAAOUIAADnCAAA/QgBAAAJFwAcCSMAQgkGAEsJHgBwCUEAtAkAANgJCwDmCQAA6AkCAOwJAQDvCQAA9AkHAP0JAAAACgIABQoDAAoKAAAMCh0AKwoKADcKDQBGCh4AZgoHAG8KGwCMChYApAoNALcKAAC5CgAAvgodAN4KBADkClEANwstAGYLTAC0CwQAugsBAL0LAgDBCwQAxwskAPMLAgD3CwkABQwEAAsMFwAlDAEAKAwEAC4MDQA9DAUARAwAAEYMFwBfDAEAZQwCAGoMAQBuDAkAeQwEAH8MAQCEDAAAhgwCAIoMAQCNDAAAjwwBAJUMBACbDAQAoQwQALMMCgC/DAAAwQwCAMYMBQDNDCUA9AwFAPsMCQAIDQAACw0LABkNAwAeDQIAJg0VAD4NEwBbDQEAXw0CAGMNAABlDQAAag0DAHwNAACDDQAAhg0BAI4NDAChDQEApw0AAKoNAQCvDQIAsw0AALkNAQC8DQAAxA0CAMwNAADPDQAA1g0AAN8NAgDjDQAA5w0FAPQNBAD8DQYABQ4KABEOAAAWDgQAIw4AACUOBgA3DgEAOw4BAD4OEABRDhoAbg4NAH8OBgCJDgkAlQ4DAJoOCwCoDg0AuA4JAMMOEgDYDgAA2w4CAN8OEwD0Dg4ABA8CAAgPCgAUDwEAFw8DABwPAwAhDwkALA8HADUPAQA4DxwAVg8oAIAPBgCLDwIAkA8AAJMPAgCYDwAAnQ8HAK0PDQC8DwEAww8DAMgPAQDMDwIA0Q8AANMPIAD3DwwABhAFAA0QBwAWEBYALxAOAD8QDgBPEAAAURAAAFMQAwBaEAYAZBAOAHUQAQB4EBEAjBAEAJQQBQCcEAkApxACAKwQBwC1EA0AxBADAMkQFwDiEA0A8RABAPQQFgANERMAIhEAACQRBgAtER8ATxEDAFQRIAB2EQcAfxEBAIMRAACIESQAsBEDALURCQDBEQEAxBEyAPgRAQD7EQEA/hEDAAMSAAALEgAADRIAACASAAAjEgcAMRIAADQSAwA8EgAAPhIGAEcSEQBnEgAAaxIDAHASAwB1EgAAdxIBAJESAwCYEgQAnxIAAKISBwCsEgAArhIBALMSMQDtEgIA8RINAAATAAACEw0AFBMNACQTBgAsEwAALhMdAE0TAABPEwsAXBMAAF4TAQBnExUAfhMHAIgTFwChEwAAoxMCAKcTAACpEwAAqxMFALITBAC4EwUAwhMEAMwTAADSEwIA2hMFAOETCwDwEwMA9RMAAPkTAgD9EwMAAxQSABoUAQAdFAIAIRQAACQUAgAxFAMAOBQAADwUAQA/FCAAYxQAAGUUAQBtFAAAbxQCAHQUAAB6FAEAfRQDAIUUBACSFAMAlxQAAJkUAACdFAEAoRQBAKgUAACwFAMAthQAALoUDwDLFBMA4RQCAOUUAgDrFAEA8RQCAPYUAAD4FAAA/BQCAAMVAQAGFQAACBUBAAsVAAARFQAAExUDACMVAQAmFQ8ANxUFAEQVAABJFQMAThUAAFEVCwBeFQAAYBUAAGIVBABoFRoAhhUCAIsVDwCcFQEAnxUEAKYVAwCsFQgAtxUAALsVAQC/FQEAxRUAAMkVEwDeFQIA5RUOAPUVBAD9FQsAChYHABYWAAAZFgAAHBYBAB8WAgAjFgMAKBYJADoWBABCFgAARBYDAEoWAQBNFgEAURYCAFYWAABbFgIAYBYEAGYWCQBxFgQAdxYEAA=="}],["polars_io",{"t":"KFFKKKNNECNNNNNNNNNNCCNNNNNNNNNONNNNNNNNCMMNNNNNNCONNNNCCCOCMMMOCCCCCCONNNNNNNNONNCNNMGFFGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFIFNNNNNNNOHNNNNNNNNNNNNNNNNNONNNNNNNNNNHNNNNNNNNNNNHCONONNNNNNNNNNNNNNNNPPPGPPPPGPPPPPPPPFGPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCPPFGGFFFPPPGFPPNNNNNNNNNNNNNNNNNNNNNNNNCONNNNNNNNNNNNNNNOOHHONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNONNNNNOEONNNNNNNNNNNNNNNNNONOOONNNNNNOOOOOOOOOOCOONNNNNOONNNNNONNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPFPPFPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNOOOFNNNNNNNNNNHNNNNHHNNNNNNNNNPFFFPPPGFNNNONNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNONONNNNNNNNNNOONNOOOONNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNJJFNNNNNNHNHNNNNNNNNNFGFFFFFFFFFPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFPGPFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPKPGNNNNNNNNNNNNNNNNNCHFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCCCFIFNNNNNNNNNOONNNNHONNNNNNNNNNNNNOOOOOOONONNNNNNNNONNPFPPGFFFPPNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNPPPGNNHNNNNNNNHNHNNNNFPFPFPPGFFIPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOONOONNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHJHHHHHHKFNNNNNNNNHNNMNNNNHNNHFFKKNNHNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNMNNNNNNNMNNNNNNNNNNNNNNNKKEMMMMNNNEJJJJSCCHHHCKPGGPFPPFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNMNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPGPPNNNNNNNNNHNNNNPPPGNNNNNNNNNHNNNNN","n":["ArrowReader","HiveOptions","RowIndex","SerReader","SerWriter","WriteDataFrameToFile","__clone_box","","async_glob","avro","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","cloud","csv","default","deref","","deref_mut","","deserialize","","drop","","enabled","eq","","equivalent","","","","","","file_cache","finish","","fmt","","from","","hash","","hive","hive_start_idx","init","","into","","ipc","json","mmap","name","ndjson","new","","next_record_batch","offset","parquet","partition","path_utils","pl_async","predicates","prelude","schema","serialize","","to_owned","","try_from","","try_into","","try_parse_dates","type_id","","utils","vzip","","write_df_to_file","AvroCompression","AvroReader","AvroWriter","Compression","Deflate","","Snappy","","__clone_box","arrow_schema","borrow","","","borrow_mut","","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","drop","","","eq","equivalent","","","finish","","fmt","from","","","hash","init","","","into","","","new","","schema","set_rechunk","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","with_columns","with_compression","with_n_rows","with_name","with_projection","CloudLocation","CloudWriter","ObjectStorePath","PolarsObjectStore","__clone_box","borrow","","","borrow_mut","","","bucket","build_object_store","clone","clone_into","clone_to_uninit","default","deref","","","deref_mut","","","download","drop","","","","eq","execute","expansion","flush","fmt","","from","","","from_url","get","get_range","get_ranges","glob","head","init","","","into","","","new","","","new_with_object_store","object_path_from_str","options","prefix","queue","scheme","sync_update","to_owned","try_from","","","try_into","","","type_id","","","vzip","","","write","write_varint","AccessKey","AccessKeyId","AccountName","AmazonS3ConfigKey","ApplicationCredentials","AuthorityId","Aws","Azure","AzureConfigKey","Bucket","","Checksum","Client","","","ClientId","ClientSecret","CloudOptions","CloudType","ConditionalPut","ContainerCredentialsRelativeUri","ContainerName","CopyIfNotExists","DefaultRegion","DisableTagging","","Encryption","Endpoint","","FederatedTokenFile","File","Gcp","GoogleConfigKey","Hf","Http","ImdsV1Fallback","MetadataEndpoint","MsiEndpoint","MsiResourceId","ObjectId","Region","S3Express","SasKey","SecretAccessKey","ServiceAccount","ServiceAccountKey","SkipSignature","","Token","","UnsignedPayload","UseAzureCli","UseEmulator","UseFabricEndpoint","VirtualHostedStyleRequest","__clone_box","","","","as_ref","","","borrow","","","","","borrow_mut","","","","","build_aws","build_azure","build_gcp","build_http","clone","","","","clone_into","","","","clone_to_uninit","","","","default","deref","","","","","deref_mut","","","","","deserialize","","","","drop","","","","","eq","","","","","equivalent","","","","","","","","","","","","file_cache_ttl","fmt","","","","from","","","","","from_str","","","","from_untyped_config","hash","","","","init","","","","","into","","","","","max_retries","serialize","","","","to_owned","","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_aws","with_azure","with_gcp","with_max_retries","read","write","AllColumns","AllColumnsSingle","BatchedCsvReader","CommentPrefix","CsvEncoding","CsvParseOptions","CsvReadOptions","CsvReader","LossyUtf8","Multi","Named","NullValues","OwnedBatchedCsvReader","Single","Utf8","__clone_box","","","","","_with_predicate","batched","batched_borrowed","borrow","","","","","","","","borrow_mut","","","","","","","","buffer","chunk_size","clone","","","","","clone_into","","","","","clone_to_uninit","","","","","columns","comment_prefix","count_rows","count_rows_from_slice","decimal_comma","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","drop","","","","","","","","dtype_overwrite","encoding","eol_char","eq","","","","","equivalent","","","","","","","","","","","","","","","fields_to_cast","finish","fmt","","","","","from","","","","","","","","","get_parse_options","has_header","hash","","","","","ignore_errors","infer_file_schema","infer_schema_length","init","","","","","","","","into","","","","","","","","into_reader_with_file_handle","low_memory","map_parse_options","missing_is_null","n_rows","n_threads","new","new_from_str","new_multi","new_single","next_batches","","null_values","parse_options","path","projection","quote_char","raise_if_empty","rechunk","row_index","sample_size","schema","schema_inference","schema_overwrite","separator","serialize","","","","","skip_rows","skip_rows_after_header","to_owned","","","","","truncate_ragged_lines","try_from","","","","","","","","try_into","","","","","","","","try_into_reader_with_file_path","try_parse_dates","type_id","","","","","","","","update_with_inference_result","vzip","","","","","","","","with_chunk_size","with_columns","with_comment_prefix","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_has_header","with_ignore_errors","with_infer_schema_length","with_low_memory","with_missing_is_null","with_n_rows","with_n_threads","with_null_values","with_parse_options","with_path","with_projection","with_quote_char","with_raise_if_empty","with_rechunk","with_row_index","with_sample_size","with_schema","with_schema_overwrite","with_separator","with_skip_rows","with_skip_rows_after_header","with_truncate_ragged_lines","with_try_parse_dates","Boolean","Buffer","Categorical","CategoricalField","Date","Datetime","DatetimeField","DecimalFloat32","DecimalFloat64","Float32","Float64","Int16","Int32","Int64","Int8","UInt16","UInt32","UInt64","UInt8","Utf8","Utf8Field","add","add_null","borrow","","","","borrow_mut","","","","deref","","","","deref_mut","","","","drop","","","","dtype","from","","","","init","","","","init_buffers","into","","","","into_series","try_from","","","","try_into","","","","type_id","","","","vzip","","","","buf","time_unit","time_zone","SchemaInferenceResult","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","finish_infer_field_schema","fmt","from","get_estimated_n_rows","get_inferred_schema","infer_field_schema","infer_file_schema","init","into","to_owned","try_from","try_from_reader_bytes_and_options","try_into","type_id","vzip","with_inferred_schema","Always","BatchedWriter","CsvWriter","CsvWriterOptions","Necessary","Never","NonNumeric","QuoteStyle","SerializeOptions","__clone_box","","","batch_size","batched","borrow","","","","","borrow_mut","","","","","clone","","","clone_into","","","clone_to_uninit","","","date_format","datetime_format","default","","","deref","","","","","deref_mut","","","","","deserialize","","","drop","","","","","eq","","","equivalent","","","","","","","","","finish","","float_precision","float_scientific","fmt","","","from","","","","","hash","","","include_bom","","include_header","","init","","","","","into","","","","","line_terminator","maintain_order","n_threads","new","null","quote_char","quote_style","separator","serialize","","","serialize_options","time_format","to_owned","","","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_date_format","with_datetime_format","with_float_precision","with_float_scientific","with_line_terminator","with_null_value","with_quote_char","with_quote_style","with_separator","with_time_format","write_batch","FILE_CACHE","FILE_CACHE_PREFIX","FileCacheEntry","borrow","borrow_mut","deref","deref_mut","drop","from","get_env_file_cache_ttl","init","init_entries_from_uri_list","into","try_from","try_into","try_open_assume_latest","try_open_check_latest","type_id","update_ttl","uri","vzip","BatchedWriter","IpcCompression","IpcReadOptions","IpcReader","IpcReaderAsync","IpcScanOptions","IpcStreamReader","IpcStreamWriter","IpcStreamWriterOption","IpcWriter","IpcWriterOptions","LZ4","ZSTD","__clone_box","","","","arrow_schema","batched","batched_async","borrow","","","","","","","","","","","borrow_mut","","","","","","","","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","compression","count_rows","data","default","","","","deref","","","","","","","","","","","deref_mut","","","","","","","","","","","deserialize","","","drop","","","","","","","","","","","eq","","","equivalent","","","","","","finish","","","","","finish_with_scan_ops","fmt","","","from","","","","","","","","","","","from_uri","hash","","","init","","","","","","","","","","","into","","","","","","","","","","","maintain_order","memory_mapped","metadata","new","","","","","new_async","schema","","serialize","","","set_rechunk","","to_owned","","","","to_writer","try_from","","","","","","","","","","","try_into","","","","","","","","","","","type_id","","","","","","","","","","","vzip","","","","","","","","","","","with_columns","","with_compat_level","","with_compression","","","with_extension","with_hive_partition_columns","with_include_file_path","with_n_rows","","with_predicate","with_projection","","","with_row_index","","","with_row_limit","write_batch","write_df_to_file","BatchedWriter","Json","JsonFormat","JsonLines","JsonReader","JsonWriter","JsonWriterOptions","__clone_box","borrow","","","","","borrow_mut","","","","","clone","clone_into","clone_to_uninit","default","deref","","","","","deref_mut","","","","","deserialize","drop","","","","","eq","equivalent","","","finish","","fmt","from","","","","","hash","infer_schema_len","init","","","","","into","","","","","maintain_order","new","","","remove_bom","serialize","set_rechunk","to_owned","try_from","","","","","try_into","","","","","type_id","","","","","vzip","","","","","with_batch_size","with_ignore_errors","with_json_format","","with_projection","with_schema","with_schema_overwrite","write_batch","Borrowed","Mapped","MmapBytesReader","Owned","ReaderBytes","borrow","borrow_mut","deref","","deref_mut","drop","from","","init","into","into_mem_slice","to_bytes","to_file","try_from","try_into","type_id","vzip","core","infer_schema","JsonLineReader","StructArray","__clone_box","_split_at_unchecked","arced","arr_from_iter","","arr_from_iter_with_dtype","","as_any","as_any_mut","borrow","","borrow_mut","","boxed","check_bound","clone","clone_into","clone_to_uninit","count","deref","","deref_mut","","drop","","dtype","eq","","fields","finish","fmt","from","","","","from_path","full_null","get_fields","infer_schema_len","init","","into","","into_data","into_iter","iter","len","low_memory","new","","new_empty","new_null","propagate_nulls","set_validity","slice","","slice_typed","slice_typed_unchecked","slice_unchecked","","sliced","sliced_unchecked","split_at_boxed","split_at_boxed_unchecked","take_validity","to_boxed","to_owned","tot_eq_kernel","tot_eq_kernel_broadcast","tot_ne_kernel","tot_ne_kernel_broadcast","try_arr_from_iter","","try_arr_from_iter_with_dtype","","try_from","","try_into","","try_new","type_id","","validity","","values","values_iter","vzip","","with_chunk_size","with_ignore_errors","with_n_rows","with_n_threads","with_path","with_predicate","with_projection","with_rechunk","with_row_index","with_schema","with_schema_overwrite","with_validity","","with_validity_typed","metadata","read","write","FileMetadata","FileMetadataRef","ParquetStatistics","__clone_box","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","column_order","column_orders","created_by","deref","","deref_mut","","deserialize","distinct_count","drop","","eq","fmt","","from","","","init","","into","","key_value_metadata","","max_row_group_height","max_value","min_value","null_count","num_rows","row_groups","schema","schema_descr","to_owned","try_from","","try_from_thrift","try_into","","type_id","","version","vzip","","Auto","BatchedParquetReader","Columns","None","ParallelStrategy","ParquetAsyncReader","ParquetOptions","ParquetReader","Prefiltered","RowGroups","__clone_box","","_internal","batched","","borrow","","","","","borrow_mut","","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","deref_mut","","","","","deserialize","","drop","","","","","eq","","equivalent","","","","","","finish","","finishes_this_batch","fmt","","from","","","","","from_uri","get_metadata","","hash","","init","","","","","into","","","","","is_finished","iter","low_memory","materialize_empty_df","new","","next_batches","num_rows","","parallel","read_parallel","","schema","","","serialize","","set_low_memory","set_metadata","set_rechunk","","to_owned","","try_from","","","","","try_into","","","","","type_id","","","","","use_statistics","","","vzip","","","","","with_arrow_schema_projection","","with_columns","with_hive_partition_columns","","with_include_file_path","","with_predicate","","with_projection","","with_row_index","","with_slice","","Auto","Post","Pre","PrefilterMaskSetting","borrow","borrow_mut","calc_prefilter_cost","deref","deref_mut","drop","from","init","init_from_env","into","read_this_row_group","should_prefilter","to_deserializer","try_from","try_into","type_id","vzip","BatchedWriter","Brotli","BrotliLevel","Gzip","GzipLevel","Lz4Raw","Lzo","ParquetCompression","ParquetWriteOptions","ParquetWriter","RowGroupIterColumns","Snappy","StatisticsOptions","Uncompressed","Zstd","ZstdLevel","__clone_box","","","","","","batched","borrow","","","","","","","","borrow_mut","","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","compression","data_page_size","default","","","deref","","","","","","","","deref_mut","","","","","","","","deserialize","","","","","","distinct_count","drop","","","","","","","","empty","encode_and_compress","eq","","","","","","equivalent","","","","","","","","","","","","","","","","","","finish","","fmt","","","","","","from","","","","","","","","full","get_writer","hash","","","","","","init","","","","","","","","into","","","","","","","","is_empty","is_full","maintain_order","max_value","min_value","new","null_count","row_group_size","serialize","","","","","","set_parallel","statistics","to_owned","","","","","","to_writer","try_from","","","","","","","","try_into","","","","","","","","try_new","","","type_id","","","","","","","","vzip","","","","","","","","with_compression","with_data_page_size","with_row_group_size","with_statistics","write_batch","write_df_to_file","write_row_groups","write_partitioned_dataset","POLARS_TEMP_DIR_BASE_PATH","expand_paths","expand_paths_hive","expanded_from_single_directory","get_glob_start_idx","is_cloud_url","resolve_homedir","GetSize","RuntimeManager","block_on","block_on_potential_spawn","borrow","borrow_mut","deref","deref_mut","drop","from","get_runtime","init","into","size","spawn","spawn_blocking","try_from","try_into","tune_with_concurrency_budget","type_id","vzip","with_concurrency_budget","BatchStats","ColumnStats","PhysicalIoExpr","StatsEvaluator","__clone_box","","apply_predicate","as_stats_evaluator","borrow","","borrow_mut","","clone","","clone_into","","clone_to_uninit","","column_stats","deref","","deref_mut","","deserialize","","drop","","dtype","evaluate_io","field_name","fmt","","from","","from_column_literal","from_field","get_max_state","get_min_state","get_null_count_state","get_stats","init","","into","","live_variables","new","","null_count","num_rows","schema","serialize","","should_read","take_indices","to_max","to_min","to_min_max","to_owned","","try_from","","try_into","","type_id","","vzip","","with_schema","SerReader","SerWriter","cloud","finish","","new","","set_rechunk","","","write_partitioned_dataset","BOOLEAN_RE","FLOAT_RE","FLOAT_RE_DECIMAL","INTEGER_RE","URL_ENCODE_CHAR_SET","byte_source","compression","get_reader_bytes","materialize_projection","overwrite_schema","slice","ByteSource","Cloud","DynByteSource","DynByteSourceBuilder","MemSlice","MemSliceByteSource","Mmap","ObjectStore","ObjectStoreByteSource","__clone_box","borrow","","","","borrow_mut","","","","clone","clone_into","clone_to_uninit","default","deref","","","","deref_mut","","","","drop","","","","fmt","from","","","","","","","get_range","","","","get_ranges","","","","get_size","","","","init","","","","into","","","","to_owned","try_build_from_path","try_from","","","","try_into","","","","type_id","","","","variant_name","vzip","","","","GZIP","SupportedCompression","ZLIB","ZSTD","borrow","borrow_mut","check","deref","deref_mut","drop","from","init","into","maybe_decompress_bytes","try_from","try_into","type_id","vzip","After","Before","Overlapping","SplitSlicePosition","borrow","borrow_mut","deref","deref_mut","drop","fmt","from","init","into","split_slice_at_file","","try_from","try_into","type_id","vzip"],"q":[[0,"polars_io"],[86,"polars_io::avro"],[153,"polars_io::cloud"],[227,"polars_io::cloud::options"],[414,"polars_io::csv"],[416,"polars_io::csv::read"],[677,"polars_io::csv::read::buffer"],[751,"polars_io::csv::read::buffer::Buffer"],[754,"polars_io::csv::read::schema_inference"],[781,"polars_io::csv::write"],[926,"polars_io::file_cache"],[947,"polars_io::ipc"],[1186,"polars_io::json"],[1284,"polars_io::mmap"],[1306,"polars_io::ndjson"],[1308,"polars_io::ndjson::core"],[1412,"polars_io::parquet"],[1415,"polars_io::parquet::metadata"],[1468,"polars_io::parquet::read"],[1611,"polars_io::parquet::read::_internal"],[1632,"polars_io::parquet::write"],[1856,"polars_io::partition"],[1857,"polars_io::path_utils"],[1864,"polars_io::pl_async"],[1886,"polars_io::predicates"],[1954,"polars_io::prelude"],[1965,"polars_io::utils"],[1976,"polars_io::utils::byte_source"],[2057,"polars_io::utils::compression"],[2075,"polars_io::utils::slice"],[2094,"dyn_clone::sealed"],[2095,"polars_io::options"],[2096,"core::result"],[2097,"serde::de"],[2098,"polars_io::shared"],[2099,"polars_core::frame"],[2100,"polars_error"],[2101,"core::fmt"],[2102,"core::hash"],[2103,"std::io"],[2104,"polars_arrow::record_batch"],[2105,"core::option"],[2106,"serde::ser"],[2107,"core::any"],[2108,"polars_io::avro::read"],[2109,"polars_arrow::datatypes::schema"],[2110,"polars_io::avro::write"],[2111,"polars_core::schema"],[2112,"alloc::string"],[2113,"alloc::vec"],[2114,"polars_io::cloud::glob"],[2115,"object_store"],[2116,"alloc::sync"],[2117,"polars_io::cloud::polars_object_store"],[2118,"object_store::path"],[2119,"tokio::io::async_write"],[2120,"core::marker"],[2121,"polars_io::cloud::adaptors"],[2122,"std::io::error"],[2123,"crossterm::command"],[2124,"url"],[2125,"bytes::bytes"],[2126,"core::ops::range"],[2127,"core::ops::function"],[2128,"parquet_format_safe::thrift::varint::decode"],[2129,"object_store::aws::builder"],[2130,"object_store::azure::builder"],[2131,"object_store::gcp::builder"],[2132,"core::convert"],[2133,"core::iter::traits::collect"],[2134,"polars_io::csv::read::reader"],[2135,"alloc::boxed"],[2136,"polars_io::csv::read::read_impl::batched"],[2137,"polars_io::csv::read::options"],[2138,"std::path"],[2139,"polars_utils::pl_str"],[2140,"std::fs"],[2141,"polars_core::datatypes::dtype"],[2142,"polars_core::series"],[2143,"polars_utils::aliases"],[2144,"polars_io::csv::write::writer"],[2145,"polars_io::csv::write::options"],[2146,"core::num::nonzero"],[2147,"polars_io::file_cache::entry"],[2148,"polars_io::ipc::ipc_stream"],[2149,"polars_io::ipc::write"],[2150,"futures_io::if_std"],[2151,"polars_io::ipc::ipc_file"],[2152,"polars_io::ipc::ipc_reader_async"],[2153,"polars_arrow::io::ipc::read::file"],[2154,"polars_utils::mmap::private"],[2155,"polars_arrow::array::struct_"],[2156,"polars_arrow::array"],[2157,"polars_arrow::datatypes"],[2158,"polars_arrow::datatypes::field"],[2159,"polars_arrow::array::growable::structure"],[2160,"polars_arrow::array::struct_::mutable"],[2161,"polars_arrow::bitmap::immutable"],[2162,"polars_arrow::scalar"],[2163,"polars_arrow::array::struct_::iterator"],[2164,"polars_arrow::bitmap::utils::iterator"],[2165,"polars_arrow::bitmap::utils::zip_validity"],[2166,"polars_parquet::parquet::metadata::file_metadata"],[2167,"polars_parquet::parquet::metadata::column_order"],[2168,"polars_parquet::parquet::metadata::column_chunk_metadata"],[2169,"core::iter::traits::exact_size"],[2170,"polars_parquet::arrow::read::statistics"],[2171,"parquet_format_safe::parquet_format"],[2172,"polars_parquet::parquet::metadata::schema_descriptor"],[2173,"polars_parquet::parquet::error"],[2174,"polars_io::parquet::read::reader"],[2175,"polars_io::parquet::read::read_impl"],[2176,"polars_io::parquet::read::options"],[2177,"polars_parquet::parquet::metadata::row_metadata"],[2178,"polars_parquet::arrow::read::deserialize::utils::filter"],[2179,"polars_io::parquet::write::writer"],[2180,"polars_io::parquet::write::batched_writer"],[2181,"polars_io::parquet::write::options"],[2182,"polars_parquet::arrow::write"],[2183,"polars_parquet::parquet::write"],[2184,"core::iter::traits::iterator"],[2185,"polars_parquet::arrow::write::file"],[2186,"std::sync::mutex"],[2187,"core::future::future"],[2188,"tokio::runtime::task::join"],[2189,"polars_core::datatypes::field"],[2190,"avro_schema::file"],[2191,"polars_io::cloud::object_store_setup"],[2192,"polars_io::csv::read::parser"],[2193,"polars_io::file_cache::cache"],[2194,"polars_io::file_cache::utils"],[2195,"polars_io::parquet::read::utils"],[2196,"polars_io::parquet::read::predicates"],[2197,"polars_io::parquet::read::mmap"],[2198,"polars_io::utils::other"]],"i":"``````jl``1010101010``010101010010111000`AfAl323232`23232```3`10Bh4``````343434343343`43Cb````Cj0000Cd0Cl2102222102102102222210210221021021011210210210210210101````EbEjDj21020`2220102102211020101021020222`21021021021``0101210210210210211GfGd1`Gh2Gj0`21223133``2232223223300`00223332232112323233322Dh4234230142301420000304230423042030142301423042301423014233300044422203042301423142030423014230142030423042301423014230142301420000``Ij0``````IfIh2``01IbId324Hd00I`Hn24365710243657`443657436574365743``34361024365710243657436571024365743343657444333666555777424365710243655744436574`410243657102436574443442555103444344444`43436574443657310243657102436574310243657410243657443343344443443444344444434433Jj`0`00`0000000000000`00AGdAGfAGh32103210321032103321032103`210332103210321032103AGj00`Jf000000000`0000``000000000Kj```000``KfKh21Kb0Kd324103243243243242232410324103243241032432433322244410223241032432413131032410324231122223243232410324103241032410324111111111110```L`00000`0`000000000```````````Mb0LlLnM`3LbLd0MlMd3MnMj4Lf987:4362150987:987:987:987:733187:4362150987:4362150987:97:4362150987:97:777:::46250497:4362150987:397:4362150987:4362150987:7434621554697:46987:74362150987:4362150987:4362150987:4362150987:4625215144468468468807`Nl`0```Nd1NfNjNh342103333342103421033421033333203421033042103421033210`3034210342103421034210300200001K`0`0`00000000000Hh01111````Ob00000000Oj10111111001010111110101110110010111110011111111111111111111111111010110111110100000000000111``````A@nAAb1011111110101`0010010010101111000111110110101101ABj`00````00ABh1`ABbABfABd213402134343434402134021343402134343334442103402134121340213402134003`020213210213422213402134021340213421302134212212121212121AC`00`00`0000000`0`0000`ACl`0`00````0`00`ACj1ACnAD`ADbADdACfACh16754320167543267543267543267543266672016754320167543267543220167543220675432666777555444333222016754320167543220675432016754320167543222622126675432166754326016754320167543254301675432016754321111060``````````AEd0000000`00AEh1111`11`````AEnAF``Hf21212121211212121212022121222221212102121121AEl233332323232322```AfAl10111`````````````AFh``0`AFf0`0AFlAFj321032222310321032103221033332AFn21402140214214321433321432143214342143AG``00000000000`0000AGb00`000000000`00000","f":"``````{{bd}f}0``{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{j}}}j}{{{b{l}}}l}{{b{b{hc}}}f{}}0{bf}0``{{}l}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{j}}}Ab}{c{{A`{l}}}Ab}{nf}0`{{{b{j}}{b{j}}}Ad}{{{b{l}}{b{l}}}Ad}{{b{b{c}}}Ad{}}00000`{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{{{b{j}}{b{hAn}}}B`}{{{b{l}}{b{hAn}}}B`}{cc{}}0{{{b{j}}{b{hc}}}fBb}{{{b{l}}{b{hc}}}fBb}``{{}n}0{{}c{}}0`````{cAfBd}{cAlBf}{{{b{hBh}}}{{Aj{{Bl{Bj}}}}}}````````{{{b{j}}c}A`Bn}{{{b{l}}c}A`Bn}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0`{bC`}0`99{{{b{Cb}}Ahc}{{Aj{f}}}Bf}````````{{bd}f}{{{b{h{Cd{c}}}}}{{Aj{Cf}}}{BdCh}}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00{{{b{Cj}}}Cj}{{b{b{hc}}}f{}}{bf}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{nf}00{{{b{Cj}}{b{Cj}}}Ad}{{b{b{c}}}Ad{}}00{{{Cd{c}}}{{Aj{Ah}}}{BdCh}}{{{b{h{Cl{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{Cj}}{b{hAn}}}{{A`{fCn}}}}{cc{}}00{{{b{Cj}}{b{hc}}}fBb}{{}n}00{{}c{}}00{c{{Cd{c}}}{BdCh}}{c{{Cl{c}}}Bf}{{{b{h{Cd{c}}}}}{{Aj{D`}}}{BdCh}}{{{Cd{c}}Ad}{{Cd{c}}}{BdCh}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00888{{{Cd{c}}{Bl{{Dd{Db}}}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}{Bl{Cj}}}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{n}}}{{Cd{c}}}{BdCh}}{{{Cl{c}}Db}{{Cl{c}}}Bf}{{{Cd{c}}{Bl{{Dd{n}}}}}{{Cd{c}}}{BdCh}}````{{bd}f}{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Df}}{Bl{{b{Dh}}}}Ad}{{Aj{{E`{Dj{Dn{Dl}}}}}}}}{{{b{Eb}}}Eb}{{b{b{hc}}}f{}}{bf}{{}Dj}{n{{b{c}}}{}}00{n{{b{hc}}}{}}00{{{b{Eb}}{b{Ed}}{b{hc}}}{{Aj{f}}}{EfEh}}{{{b{hEj}}}f}{nf}00{{{b{Dj}}{b{Dj}}}Ad}{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{hEj}}}{{F`{f}}}}{{{b{Dj}}{b{hAn}}}B`}{{{b{Eb}}{b{hAn}}}B`}{cc{}}00{{{b{Fb}}Ad}{{Aj{Dj}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{Ff{n}}}{{Aj{Fd}}}}{{{b{Eb}}{b{Ed}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Fd}}}}}}{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{{Dd{Db}}}}}}{{{b{Eb}}{b{Ed}}}{{Aj{Fj}}}}{{}n}00{{}c{}}00{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Ej}}}}{{{b{Df}}Ad}{{Aj{Dj}}}}{{{Dn{Dl}}}Eb}{{{Dn{Dl}}Ed}{{Aj{Ej}}}}{{{b{Df}}}{{Aj{Ed}}}}``{{{b{h}}c}{{A`{{b{he}}El}}}En{}}`{{{b{h}}g}{{A`{eEl}}}{}{}{{Fn{{b{hc}}}{{Fl{e}}}}}}{bc{}}{c{{A`{e}}}{}{}}00{{}{{A`{c}}}{}}00{bC`}00;;;{{{b{hEj}}{b{{Fh{G`}}}}}{{F`{n}}}}{{{b{h}}c}{{A`{nEl}}}Gb}```````````````````````````````````````````````````````{{bd}f}000{{{b{Gd}}}{{b{Df}}}}{{{b{Gf}}}{{b{Df}}}}{{{b{Gh}}}{{b{Df}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Dh}}{b{Df}}}{{Aj{{`{Dl}}}}}}000{{{b{Gd}}}Gd}{{{b{Dh}}}Dh}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{b{b{hc}}}f{}}000{bf}000{{}Dh}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Gd}}}Ab}{c{{A`{Dh}}}Ab}{c{{A`{Gf}}}Ab}{c{{A`{Gh}}}Ab}{nf}0000{{{b{Gd}}{b{Gd}}}Ad}{{{b{Dh}}{b{Dh}}}Ad}{{{b{Gj}}{b{Gj}}}Ad}{{{b{Gf}}{b{Gf}}}Ad}{{{b{Gh}}{b{Gh}}}Ad}{{b{b{c}}}Ad{}}00000000000`{{{b{Gd}}{b{hAn}}}{{A`{fCn}}}}{{{b{Dh}}{b{hAn}}}B`}{{{b{Gf}}{b{hAn}}}{{A`{fCn}}}}{{{b{Gh}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000{{{b{Df}}}{{A`{Gd}}}}{{{b{Df}}}{{A`{Gjc}}}{}}{{{b{Df}}}{{A`{Gf}}}}{{{b{Df}}}{{A`{Gh}}}}{{{b{Df}}g}{{Aj{Dh}}}{{Gl{Df}}}{{Gn{Db}}}{{Hb{}{{H`{{E`{ce}}}}}}}}{{{b{Gd}}{b{hc}}}fBb}{{{b{Dh}}{b{hc}}}fBb}{{{b{Gf}}{b{hc}}}fBb}{{{b{Gh}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000`{{{b{Gd}}c}A`Bn}{{{b{Dh}}c}A`Bn}{{{b{Gf}}c}A`Bn}{{{b{Gh}}c}A`Bn}{bc{}}000{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000088888{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gdc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Gfc}}}}}}}}{{Dhe}Dh{{Gn{Db}}}{{Hb{}{{H`{{E`{Ghc}}}}}}}}{{Dhn}Dh}`````````````````{{bd}f}0000{{{Hd{c}}{Bl{{Dn{Hf}}}}}{{Hd{c}}}Hh}{{{Hd{{Hj{Hh}}}}{Bl{Hl}}}{{Aj{Hn}}}}{{{b{h{Hd{c}}}}}{{Aj{I`}}}Hh}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000``{{{b{Ib}}}Ib}{{{b{Id}}}Id}{{{b{If}}}If}{{{b{Ih}}}Ih}{{{b{Ij}}}Ij}{{b{b{hc}}}f{}}0000{bf}0000``{{{b{Il}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}{{{b{{Fh{G`}}}}G`{Bl{G`}}{Bl{{b{Ih}}}}G`Ad}{{Aj{n}}}}`{{}Ib}{{}Id}{{}If}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{Ib}}}Ab}{c{{A`{Id}}}Ab}{c{{A`{If}}}Ab}{c{{A`{Ih}}}Ab}{c{{A`{Ij}}}Ab}{nf}0000000```{{{b{Ib}}{b{Ib}}}Ad}{{{b{Id}}{b{Id}}}Ad}{{{b{If}}{b{If}}}Ad}{{{b{Ih}}{b{Ih}}}Ad}{{{b{Ij}}{b{Ij}}}Ad}{{b{b{c}}}Ad{}}00000000000000`{{{Hd{c}}}{{Aj{Ah}}}Hh}{{{b{Ib}}{b{hAn}}}B`}{{{b{Id}}{b{hAn}}}B`}{{{b{If}}{b{hAn}}}B`}{{{b{Ih}}{b{hAn}}}B`}{{{b{Ij}}{b{hAn}}}B`}{cc{}}000000{{{b{Df}}}Ih}1{{{b{Ib}}}{{Dn{Id}}}}`{{{b{Ib}}{b{hc}}}fBb}{{{b{Id}}{b{hc}}}fBb}{{{b{If}}{b{hc}}}fBb}{{{b{Ih}}{b{hc}}}fBb}{{{b{Ij}}{b{hc}}}fBb}```{{}n}0000000{{}c{}}0000000{{Ibc}{{Hd{c}}}Hh}`{{Ibc}Ib{{In{Id}{{Fl{Id}}}}}}```{c{{Hd{c}}}Hh};{J`Ih}{G`Ih}{{{b{hI`}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{hHn}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}`````````````{{{b{Ib}}c}A`Bn}{{{b{Id}}c}A`Bn}{{{b{If}}c}A`Bn}{{{b{Ih}}c}A`Bn}{{{b{Ij}}c}A`Bn}``{bc{}}0000`{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{{Ib{Bl{Jb}}}{{Aj{{Hd{Jd}}}}}}`{bC`}0000000{{{b{hIb}}{b{Jf}}}f}{{}c{}}0000000{{Ibn}Ib}{{Ib{Bl{{Dn{{Fh{J`}}}}}}}Ib}{{Id{Bl{c}}}Id{{Gn{Ih}}}}{{IdAd}Id}{{Ib{Bl{{Dn{{Dd{Jh}}}}}}}Ib}{{IdIf}Id}{{IdG`}Id}{{IbAd}Ib}0{{Ib{Bl{n}}}Ib}1500{{Id{Bl{Ij}}}Id}{{IbId}Ib}{{Ib{Bl{c}}}Ib{{Gn{Jb}}}}{{Ib{Bl{{Dn{{Dd{n}}}}}}}Ib}{{Id{Bl{G`}}}Id}66{{Ib{Bl{j}}}Ib}>{{Ib{Bl{Hl}}}Ib}09??<<`````````````````````{{{b{hJj}}{b{{Fh{G`}}}}AdAdAd}{{Aj{f}}}}{{{b{hJj}}Ad}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{Jj}}}Jh}{cc{}}000{{}n}000{{{b{{Fh{n}}}}n{b{D`}}{Bl{G`}}IfAd}{{Aj{{Dd{Jj}}}}}}{{}c{}}000{Jj{{Aj{Jl}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}0004444````{{bd}f}>={{{b{Jf}}}Jf}{{b{b{hc}}}f{}}{bf}{{}Jf}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{{{b{{Jn{Jh}}}}}Jh}{{{b{Jf}}{b{hAn}}}B`}{cc{}}{{{b{Jf}}}n}{{{b{Jf}}}Hl}{{{b{Df}}AdAd}Jh}{{{b{K`}}G`{Bl{n}}Ad{Bl{{b{D`}}}}nn{Bl{{b{Ih}}}}{Bl{G`}}G`{Bl{{b{Ij}}}}AdAd{b{h{Bl{n}}}}Ad}{{Aj{{E`{D`nn}}}}}}{{}n}{{}c{}}{bc{}}{c{{A`{e}}}{}{}}{{{b{K`}}{b{Ib}}}{{Aj{Jf}}}}{{}{{A`{c}}}{}}{bC`}5{{JfHl}Jf}`````````{{bd}f}00`{{{Kb{c}}{b{D`}}}{{Aj{{Kd{c}}}}}Bf}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Kf}}}Kf}{{{b{Kh}}}Kh}{{{b{Kj}}}Kj}{{b{b{hc}}}f{}}00{bf}00``{{}Kf}{{}Kh}{{}Kj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Kf}}}Ab}{c{{A`{Kh}}}Ab}{c{{A`{Kj}}}Ab}{nf}0000{{{b{Kf}}{b{Kf}}}Ad}{{{b{Kh}}{b{Kh}}}Ad}{{{b{Kj}}{b{Kj}}}Ad}{{b{b{c}}}Ad{}}00000000{{{b{h{Kb{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Kd{c}}}}}{{Aj{f}}}Bf}``{{{b{Kf}}{b{hAn}}}B`}{{{b{Kh}}{b{hAn}}}B`}{{{b{Kj}}{b{hAn}}}B`}{cc{}}0000{{{b{Kf}}{b{hc}}}fBb}{{{b{Kh}}{b{hc}}}fBb}{{{b{Kj}}{b{hc}}}fBb}{{{Kb{c}}Ad}{{Kb{c}}}Bf}`0`{{}n}0000{{}c{}}0000``{{{Kb{c}}n}{{Kb{c}}}Bf}{c{{Kb{c}}}Bf}````{{{b{Kf}}c}A`Bn}{{{b{Kh}}c}A`Bn}{{{b{Kj}}c}A`Bn}``{bc{}}00{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000099999{{{Kb{c}}Kl}{{Kb{c}}}Bf}{{{Kb{c}}{Bl{Db}}}{{Kb{c}}}Bf}0{{{Kb{c}}{Bl{n}}}{{Kb{c}}}Bf}{{{Kb{c}}{Bl{Ad}}}{{Kb{c}}}Bf}{{{Kb{c}}Db}{{Kb{c}}}Bf}0{{{Kb{c}}G`}{{Kb{c}}}Bf}{{{Kb{c}}Kj}{{Kb{c}}}Bf}15{{{b{h{Kd{c}}}}{b{Ah}}}{{Aj{f}}}Bf}```{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}Kn}{{}n}{{{b{{Fh{{Dn{Df}}}}}}{Bl{{b{Dh}}}}}{{Aj{{Dd{{Dn{L`}}}}}}}}{{}c{}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{{b{L`}}}{{Aj{Jd}}}}0{bC`}{{{b{L`}}Kn}f}{{{b{L`}}}{{b{{Dn{Df}}}}}}6`````````````{{bd}f}000{{{b{h{Lb{c}}}}}{{Aj{Cf}}}Bd}{{{Ld{c}}{b{D`}}}{{Aj{{Lf{c}}}}}Bf}{{{Ld{c}}{b{D`}}}{{Aj{{`{c}}}}}{LhEhLj}}{b{{b{c}}}{}}0000000000{{{b{h}}}{{b{hc}}}{}}0000000000{{{b{Ll}}}Ll}{{{b{Ln}}}Ln}{{{b{M`}}}M`}{{{b{Mb}}}Mb}{{b{b{hc}}}f{}}000{bf}000`{{{b{Md}}{Bl{{b{Mf}}}}}{{Aj{Mh}}}}{{{b{Md}}{Bl{{b{Mf}}}}LnAd}{{Aj{Ah}}}}{{}Mj}{{}Ln}{{}M`}{{}Mb}{n{{b{c}}}{}}0000000000{n{{b{hc}}}{}}0000000000{c{{A`{Ll}}}Ab}{c{{A`{M`}}}Ab}{c{{A`{Mb}}}Ab}{nf}0000000000{{{b{Ll}}{b{Ll}}}Ad}{{{b{M`}}{b{M`}}}Ad}{{{b{Mb}}{b{Mb}}}Ad}{{b{b{c}}}Ad{}}00000{{{Ml{c}}}{{Aj{Ah}}}Hh}{{{Lb{c}}}{{Aj{Ah}}}Bd}{{{b{h{Mn{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Ld{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{b{h{Lf{c}}}}}{{Aj{f}}}Bf}{{{Ml{c}}{Bl{{Dn{Hf}}}}Ad}{{Aj{Ah}}}Hh}{{{b{Ll}}{b{hAn}}}B`}{{{b{M`}}{b{hAn}}}B`}{{{b{Mb}}{b{hAn}}}B`}{cc{}}0000000000{{{b{Df}}{Bl{{b{Dh}}}}}{{Aj{Md}}}}{{{b{Ll}}{b{hc}}}fBb}{{{b{M`}}{b{hc}}}fBb}{{{b{Mb}}{b{hc}}}fBb}{{}n}0000000000{{}c{}}0000000000`{{{Ml{c}}{Bl{Jb}}}{{Ml{c}}}Hh}{{{b{Md}}}{{Aj{Mf}}}}{c{{Ml{c}}}Hh}{c{{Lb{c}}}Bd}{c{{Mn{c}}}Bf}{{}Mj}{c{{Ld{c}}}Bf}{c{{Ld{c}}}{LhEhLj}}{{{b{h{Ml{c}}}}}{{Aj{N`}}}Hh}{{{b{h{Lb{c}}}}}{{Aj{D`}}}Bd}{{{b{Ll}}c}A`Bn}{{{b{M`}}c}A`Bn}{{{b{Mb}}c}A`Bn}{{{Ml{c}}Ad}{{Ml{c}}}Hh}{{{Lb{c}}Ad}{{Lb{c}}}Bd}{bc{}}000{{{b{M`}}c}{{Ld{c}}}Bf}{c{{A`{e}}}{}{}}0000000000{{}{{A`{c}}}{}}0000000000{bC`}0000000000{{}c{}}0000000000{{{Ml{c}}{Bl{{Dd{Db}}}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{{Dd{Db}}}}}{{Lb{c}}}Bd}{{{Mn{c}}Nb}{{Mn{c}}}{}}{{{Ld{c}}Nb}{{Ld{c}}}Bf}{{{Mn{c}}{Bl{Mb}}}{{Mn{c}}}{}}{{Mj{Bl{Mb}}}Mj}{{{Ld{c}}{Bl{Mb}}}{{Ld{c}}}Bf}{{MjJb}Mj}{{{Ml{c}}{Bl{{Dd{Jl}}}}}{{Ml{c}}}Hh}{{{Ml{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{Ml{c}}}Hh}{{{Ml{c}}{Bl{n}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{n}}}{{Lb{c}}}Bd}{{Lnc}Ln{{Gn{{Bl{{Dn{Hf}}}}}}}}{{{Ml{c}}{Bl{{Dd{n}}}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{{Dd{n}}}}}{{Lb{c}}}Bd}{{Ln{Bl{{Dn{{Fh{J`}}}}}}}Ln}{{{Ml{c}}{Bl{j}}}{{Ml{c}}}Hh}{{{Lb{c}}{Bl{j}}}{{Lb{c}}}Bd}{{Lnc}Ln{{Gn{{Bl{j}}}}}}{{Lnc}Ln{{Gn{{Bl{n}}}}}}{{{b{h{Lf{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{M`}}Ahc}{{Aj{f}}}Bf}```````{{bd}f}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{Nd}}}Nd}{{b{b{hc}}}f{}}{bf}{{}Nd}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{Nd}}}Ab}{nf}0000{{{b{Nd}}{b{Nd}}}Ad}{{b{b{c}}}Ad{}}00{{{b{h{Nf{c}}}}{b{hAh}}}{{Aj{f}}}Bf}{{{Nh{c}}}{{Aj{Ah}}}Hh}{{{b{Nd}}{b{hAn}}}B`}{cc{}}0000{{{b{Nd}}{b{hc}}}fBb}{{{Nh{c}}{Bl{Kl}}}{{Nh{c}}}Hh}{{}n}0000{{}c{}}0000`{c{{Nf{c}}}Bf}{c{{Nj{c}}}Bf}{c{{Nh{c}}}Hh}{{{b{{Fh{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}}{{{b{Nd}}c}A`Bn}{{{Nh{c}}Ad}{{Nh{c}}}Hh}{bc{}}{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}0000:::::{{{Nh{c}}Kl}{{Nh{c}}}Hh}5{{{Nf{c}}Nl}{{Nf{c}}}Bf}{{{Nh{c}}Nl}{{Nh{c}}}Hh}{{{Nh{c}}{Bl{{Dd{J`}}}}}{{Nh{c}}}Hh}{{{Nh{c}}Hl}{{Nh{c}}}Hh}{{{Nh{c}}{b{D`}}}{{Nh{c}}}Hh}{{{b{h{Nj{c}}}}{b{Ah}}}{{Aj{f}}}Bf}`````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{K`}}}{{b{{Fh{G`}}}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{{b{hc}}}K`Hh}{{}n}{{}c{}}{K`Nn}{{{b{Hh}}}{{Bl{{b{{Fh{G`}}}}}}}}{{{b{Hh}}}{{Bl{{b{Jd}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6`{{{b{hc}}{Bl{Kl}}}{{Aj{D`}}}O`}``{{bd}f}{{{b{Ob}}n}{{E`{ObOb}}}}{Ob{{Dn{Od}}}}{cOb{{Hb{}{{H`{{Bl{f}}}}}}}}{cOb{{Hb{}{{H`{f}}}}}}{{Ofc}Ob{{Hb{}{{H`{{Bl{f}}}}}}}}{{Ofc}Ob{{Hb{}{{H`{f}}}}}}{{{b{Ob}}}{{b{Oh}}}}{{{b{hOb}}}{{b{hOh}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{Ob{{Hj{Od}}}}{{{b{Ob}}n}Ad}{{{b{Ob}}}Ob}{{b{b{hc}}}f{}}{bf}{{{Oj{c}}}{{Aj{n}}}Hh}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{nf}0{{{b{Ob}}}{{b{Of}}}}{{{b{Ob}}{b{{b{Od}}}}}Ad}{{{b{Ob}}{b{Ob}}}Ad}{{{b{Ob}}}{{b{{Fh{Ol}}}}}}{{{Oj{c}}}{{Aj{Ah}}}Hh}{{{b{Ob}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{OnOb}{A@`Ob}2{c{{Aj{{Oj{Jd}}}}}{{Gn{Jb}}}}{{nOf}Ob}{{{b{Of}}}{{b{{Fh{Ol}}}}}}{{{Oj{c}}{Bl{Kl}}}{{Oj{c}}}Hh}{{}n}0{{}c{}}0{Ob{{E`{{Dd{Ol}}{Dd{{Hj{Od}}}}{Bl{A@b}}}}}}{{{b{Ob}}}}{{{b{Ob}}}{{A@j{{Dd{{Hj{A@d}}}}A@fA@h}}}}{{{b{Ob}}}n}{{{Oj{c}}Ad}{{Oj{c}}}Hh}{c{{Oj{c}}}Hh}{{Of{Dd{{Hj{Od}}}}{Bl{A@b}}}Ob}{OfOb}{{Ofn}Ob}{{{b{Ob}}}Ob}{{{b{hOb}}{Bl{A@b}}}f}{{{b{hOb}}nn}f}0{{bnn}c{}}011{{Obnn}Ob}0{{{b{Ob}}n}{{E`{{Hj{Od}}{Hj{Od}}}}}}0{{{b{hOb}}}{{Bl{A@b}}}}{{{b{Ob}}}{{Hj{Od}}}}{bc{}}{{{b{Ob}}{b{Ob}}}A@b}{{{b{Ob}}b}A@b}10{e{{A`{Obc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{e{{A`{Obc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{{Ofe}{{A`{Obc}}}{}{{Hb{}{{H`{{A`{{Bl{f}}c}}}}}}}}{{Ofe}{{A`{Obc}}}{}{{Hb{}{{H`{{A`{fc}}}}}}}}{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{{Of{Dd{{Hj{Od}}}}{Bl{A@b}}}{{A`{ObA@l}}}}{bC`}0{{{b{Ob}}}{{Bl{{b{A@b}}}}}}0{{{b{Ob}}}{{b{{Fh{{Hj{Od}}}}}}}}{{{b{Ob}}}A@f}{{}c{}}0{{{Oj{c}}{Bl{Kl}}}{{Oj{c}}}Hh}{{{Oj{c}}Ad}{{Oj{c}}}Hh}{{{Oj{c}}{Bl{n}}}{{Oj{c}}}Hh}0{{{Oj{c}}{Bl{e}}}{{Oj{c}}}Hh{{Gn{Jb}}}}{{{Oj{c}}{Bl{{Dn{Hf}}}}}{{Oj{c}}}Hh}{{{Oj{c}}{Bl{{Dn{{Fh{J`}}}}}}}{{Oj{c}}}Hh}4{{{Oj{c}}{Bl{{b{hj}}}}}{{Oj{c}}}Hh}{{{Oj{c}}Hl}{{Oj{c}}}Hh}{{{Oj{c}}{b{D`}}}{{Oj{c}}}Hh}{{Ob{Bl{A@b}}}Ob}{{{b{Ob}}{Bl{A@b}}}{{Hj{Od}}}}1``````{{bd}f}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{A@n}}}A@n}{{b{b{hc}}}f{}}{bf}{{{b{A@n}}n}AA`}``{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{{{b{Ol}}c}{{A`{AAbA@l}}}{{AAf{}{{H`{{b{AAd}}}}}}}}`{nf}0{{{b{AAb}}{b{AAb}}}Ad}{{{b{AAb}}{b{hAn}}}{{A`{fCn}}}}{{{b{A@n}}{b{hAn}}}{{A`{fCn}}}}{cc{}}{AAhAAb}1{{}n}0{{}c{}}0{{{b{A@n}}}{{b{{Bl{{Dd{AAj}}}}}}}}```````{{{b{A@n}}}{{b{AAl}}}}`{bc{}}{c{{A`{e}}}{}{}}0{AAn{{A`{A@nAB`}}}}{{}{{A`{c}}}{}}0{bC`}0`77``````````{{bd}f}0`{{{ABb{c}}n}{{Aj{ABd}}}Hh}{{ABfn}{{Aj{ABd}}}}{b{{b{c}}}{}}0000{{{b{h}}}{{b{hc}}}{}}0000{{{b{ABh}}}ABh}{{{b{ABj}}}ABj}{{b{b{hc}}}f{}}0{bf}0{{}ABj}{n{{b{c}}}{}}0000{n{{b{hc}}}{}}0000{c{{A`{ABh}}}Ab}{c{{A`{ABj}}}Ab}{nf}0000{{{b{ABh}}{b{ABh}}}Ad}{{{b{ABj}}{b{ABj}}}Ad}{{b{b{c}}}Ad{}}00000{{{ABb{c}}}{{Aj{Ah}}}Hh}{ABf{{Aj{Ah}}}}{{{b{ABd}}n}Ad}{{{b{ABh}}{b{hAn}}}B`}{{{b{ABj}}{b{hAn}}}B`}{cc{}}0000{{{b{Df}}{Bl{{b{Dh}}}}{Bl{ABl}}}{{Aj{ABf}}}}{{{b{h{ABb{c}}}}}{{Aj{{b{ABl}}}}}Hh}{{{b{hABf}}}{{Aj{{b{ABl}}}}}}{{{b{ABh}}{b{hc}}}fBb}{{{b{ABj}}{b{hc}}}fBb}{{}n}0000{{}c{}}0000{{{b{ABd}}}Ad}``{{{Bl{{b{{Fh{n}}}}}}{b{Cf}}{Bl{{b{{Fh{Jl}}}}}}{Bl{{b{j}}}}}Ah}`{c{{ABb{c}}}Hh}{{{b{hABd}}n}{{Aj{{Bl{{Dd{Ah}}}}}}}}{{{b{h{ABb{c}}}}}{{Aj{n}}}Hh}{{{b{hABf}}}{{Aj{n}}}}`{{{ABb{c}}ABj}{{ABb{c}}}Hh}{{ABfABj}ABf}{{{b{ABd}}}{{b{N`}}}}{{{b{h{ABb{c}}}}}{{Aj{N`}}}Hh}{{{b{hABf}}}{{Aj{N`}}}}{{{b{ABh}}c}A`Bn}{{{b{ABj}}c}A`Bn}{{{ABb{c}}Ad}{{ABb{c}}}Hh}{{{b{h{ABb{c}}}}ABl}fHh}1{{ABfAd}ABf}{bc{}}0{c{{A`{e}}}{}{}}0000{{}{{A`{c}}}{}}0000{bC`}000064`{{}c{}}0000{{{ABb{c}}{b{Cf}}{Bl{{b{Cf}}}}}{{Aj{{ABb{c}}}}}Hh}{{ABf{b{Cf}}{Bl{{b{Cf}}}}}{{Aj{ABf}}}}{{{ABb{c}}{Bl{{Dd{Db}}}}}{{ABb{c}}}Hh}{{{ABb{c}}{Bl{{Dd{Jl}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dd{Jl}}}}}ABf}{{{ABb{c}}{Bl{{E`{J`{Dn{Df}}}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{E`{J`{Dn{Df}}}}}}}ABf}{{{ABb{c}}{Bl{{Dn{Hf}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dn{Hf}}}}}ABf}{{{ABb{c}}{Bl{{Dd{n}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{Dd{n}}}}}ABf}{{{ABb{c}}{Bl{j}}}{{ABb{c}}}Hh}{{ABf{Bl{j}}}ABf}{{{ABb{c}}{Bl{{E`{nn}}}}}{{ABb{c}}}Hh}{{ABf{Bl{{E`{nn}}}}}ABf}````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{A@b}}}ABn}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}n}{{}AC`}{{}c{}}{{{Bl{{b{Hf}}}}{b{ACb}}{b{Cf}}}{{Aj{Ad}}}}{{{b{AC`}}ABn{b{Of}}}Ad}{{{Dd{{E`{{b{AAd}}Nn}}}}Ol{Bl{ACd}}}{{Aj{{Hj{Od}}}}}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}6````````````````{{bd}f}00000{{{ACf{c}}{b{D`}}}{{Aj{{ACh{c}}}}}Bf}{b{{b{c}}}{}}0000000{{{b{h}}}{{b{hc}}}{}}0000000{{{b{ACj}}}ACj}{{{b{ACl}}}ACl}{{{b{ACn}}}ACn}{{{b{AD`}}}AD`}{{{b{ADb}}}ADb}{{{b{ADd}}}ADd}{{b{b{hc}}}f{}}00000{bf}00000``{{}ACj}{{}ACl}{{}ADd}{n{{b{c}}}{}}0000000{n{{b{hc}}}{}}0000000{c{{A`{ACj}}}Ab}{c{{A`{ACl}}}Ab}{c{{A`{ACn}}}Ab}{c{{A`{AD`}}}Ab}{c{{A`{ADb}}}Ab}{c{{A`{ADd}}}Ab}`{nf}00000009{{{b{{ACh{c}}}}{b{Ah}}}{{`{{ADh{}{{H`{{Aj{{ADf{A@l}}}}}}}}}}}Bf}{{{b{ACj}}{b{ACj}}}Ad}{{{b{ACl}}{b{ACl}}}Ad}{{{b{ACn}}{b{ACn}}}Ad}{{{b{AD`}}{b{AD`}}}Ad}{{{b{ADb}}{b{ADb}}}Ad}{{{b{ADd}}{b{ADd}}}Ad}{{b{b{c}}}Ad{}}00000000000000000{{{b{{ACh{c}}}}}{{Aj{Kn}}}Bf}{{{ACf{c}}{b{hAh}}}{{Aj{Kn}}}Bf}{{{b{ACj}}{b{hAn}}}B`}{{{b{ACl}}{b{hAn}}}B`}{{{b{ACn}}{b{hAn}}}B`}{{{b{AD`}}{b{hAn}}}B`}{{{b{ADb}}{b{hAn}}}B`}{{{b{ADd}}{b{hAn}}}{{A`{fCn}}}}{cc{}}0000000{{}ADd}{{{b{{ACh{c}}}}}{{b{{ADl{{ADj{c}}}}}}}Bf}{{{b{ACj}}{b{hc}}}fBb}{{{b{ACl}}{b{hc}}}fBb}{{{b{ACn}}{b{hc}}}fBb}{{{b{AD`}}{b{hc}}}fBb}{{{b{ADb}}{b{hc}}}fBb}{{{b{ADd}}{b{hc}}}fBb}{{}n}0000000{{}c{}}0000000{{{b{ADd}}}Ad}0```{c{{ACf{c}}}{BfBf}}``{{{b{ACj}}c}A`Bn}{{{b{ACl}}c}A`Bn}{{{b{ACn}}c}A`Bn}{{{b{AD`}}c}A`Bn}{{{b{ADb}}c}A`Bn}{{{b{ADd}}c}A`Bn}{{{ACf{c}}Ad}{{ACf{c}}}Bf}`{bc{}}00000{{{b{ACj}}c}{{ACf{c}}}Bf}{c{{A`{e}}}{}{}}0000000{{}{{A`{c}}}{}}0000000{G`{{Aj{ACn}}}}{ADn{{Aj{AD`}}}}{AE`{{Aj{ADb}}}}{bC`}0000000{{}c{}}0000000{{{ACf{c}}ACl}{{ACf{c}}}Bf}{{{ACf{c}}{Bl{n}}}{{ACf{c}}}Bf}0{{{ACf{c}}ADd}{{ACf{c}}}Bf}{{{b{h{ACh{c}}}}{b{Ah}}}{{Aj{f}}}Bf}{{{b{ACj}}Ahc}{{Aj{f}}}Bf}{{{b{{ACh{c}}}}{Dd{{ADf{A@l}}}}}{{Aj{f}}}Bf}{{{b{hAh}}{b{Il}}e{b{g}}n}{{Aj{f}}}{{Gn{J`}}}{{Hb{}{{H`{c}}}}}{CbLjAEb}}`{{{b{{Fh{Jb}}}}Ad{Bl{{b{Dh}}}}}{{Aj{{Dn{{Fh{Jb}}}}}}}}{{{b{{Fh{Jb}}}}Ad{Bl{{b{Dh}}}}Ad}{{Aj{{E`{{Dn{{Fh{Jb}}}}n}}}}}}{{{b{{Fh{c}}}}{b{{Fh{c}}}}}Ad{{Gl{Il}}}}{{{b{{Fh{G`}}}}}{{Bl{n}}}}{cAd{{Gl{Il}}}}{{{b{Il}}}Jb}``{{{b{AEd}}c}{}AEf}{{{b{AEd}}c}{}{AEfLj}}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}{{}{{b{AEd}}}}{{}n}{{}c{}}{{{b{AEh}}}Kn}{{{b{AEd}}c}AEj{AEfLj}}{{{b{AEd}}e}{{AEj{c}}}Lj{{Fn{}{{Fl{c}}}}Lj}}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{{ADne}{}AEf{{Fn{}{{Fl{c}}}}}}{bC`}71````{{bd}f}0{{{b{hAh}}{Bl{{b{Hf}}}}Ad}{{Aj{f}}}}{{{b{Hf}}}{{Bl{{b{AEl}}}}}}{b{{b{c}}}{}}0{{{b{h}}}{{b{hc}}}{}}0{{{b{AEn}}}AEn}{{{b{AF`}}}AF`}{{b{b{hc}}}f{}}0{bf}0{{{b{AF`}}}{{b{{Fh{AEn}}}}}}{n{{b{c}}}{}}0{n{{b{hc}}}{}}0{c{{A`{AEn}}}Ab}{c{{A`{AF`}}}Ab}{nf}0{{{b{AEn}}}{{b{Jh}}}}{{{b{Hf}}{b{Ah}}}{{Aj{Jl}}}}{{{b{AEn}}}{{b{J`}}}}{{{b{AEn}}{b{hAn}}}B`}{{{b{AF`}}{b{hAn}}}B`}{cc{}}0{JlAEn}{AFbAEn}{{{b{AEn}}}{{Bl{{b{Jl}}}}}}00{{{b{AF`}}{b{Df}}}{{Aj{{b{AEn}}}}}}{{}n}0{{}c{}}0{{{b{Hf}}}{{Bl{{Dd{J`}}}}}}{{AFb{Bl{Jl}}{Bl{Jl}}{Bl{Jl}}}AEn}{{Hl{Dd{AEn}}{Bl{n}}}AF`}{{{b{AEn}}}{{Bl{n}}}}{{{b{AF`}}}{{Bl{n}}}}{{{b{AF`}}}{{b{Hl}}}}{{{b{AEn}}c}A`Bn}{{{b{AF`}}c}A`Bn}{{{b{AEl}}{b{AF`}}}{{Aj{Ad}}}}{{{b{hAF`}}{b{{Fh{n}}}}}f}=={{{b{AEn}}}{{Bl{Jl}}}}{bc{}}0{c{{A`{e}}}{}{}}0{{}{{A`{c}}}{}}0{bC`}0??{{{b{hAF`}}Hl}f}```{Af{{Aj{Ah}}}}{{{b{hAl}}{b{hAh}}}{{Aj{f}}}}{cAfBd}{cAlBf}{{AfAd}Af}00````````{{{b{hc}}}{{Aj{K`}}}{BdHhAFd}}{{{Bl{{b{{Fh{J`}}}}}}{b{D`}}{Bl{{b{{Fh{Jl}}}}}}Ad}{{Bl{{Dd{n}}}}}}{{{b{hD`}}{b{D`}}}{{Aj{f}}}}``````````{{bd}f}{b{{b{c}}}{}}000{{{b{h}}}{{b{hc}}}{}}000{{{b{AFf}}}AFf}{{b{b{hc}}}f{}}{bf}{{}AFh}{n{{b{c}}}{}}000{n{{b{hc}}}{}}000{nf}000{{{b{AFf}}{b{hAn}}}B`}{cc{}}0{AFjAFh}1{AFlAFh}{NnAFh}3{{{b{AFn}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFl}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFj}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFh}}{Ff{n}}}{{Aj{Nn}}}}{{{b{AFn}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFl}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFj}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFh}}{b{{Fh{{Ff{n}}}}}}}{{Aj{{Dd{Nn}}}}}}{{{b{AFn}}}{{Aj{n}}}}{{{b{AFl}}}{{Aj{n}}}}{{{b{AFj}}}{{Aj{n}}}}{{{b{AFh}}}{{Aj{n}}}}{{}n}000{{}c{}}000{bc{}}{{{b{AFf}}{b{Df}}{Bl{{b{Dh}}}}}{{Aj{AFh}}}}{c{{A`{e}}}{}{}}000{{}{{A`{c}}}{}}000{bC`}000{{{b{AFh}}}{{b{Df}}}}6666````{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{{Fh{G`}}}}}{{Bl{AG`}}}}{n{{b{c}}}{}}{n{{b{hc}}}{}}{nf}{cc{}}>={{{b{{Fh{G`}}}}{b{h{Dd{G`}}}}}{{Aj{{b{{Fh{G`}}}}}}}};:9>````76432{{{b{AGb}}{b{hAn}}}B`}2{{}n}{{}c{}}{{{b{hn}}nnn}{{E`{nn}}}}{{nn{Ff{n}}}AGb}{c{{A`{e}}}{}{}}{{}{{A`{c}}}{}}{bC`}5","D":"COn","p":[[1,"reference"],[5,"Private",2094],[1,"unit"],[0,"mut"],[5,"RowIndex",0,2095],[5,"HiveOptions",0,2095],[1,"usize"],[6,"Result",2096],[10,"Deserializer",2097],[1,"bool"],[10,"SerReader",1954,2098],[5,"DataFrame",2099],[8,"PolarsResult",2100],[10,"SerWriter",1954,2098],[5,"Formatter",2101],[8,"Result",2101],[10,"Hasher",2102],[10,"Read",2103],[10,"Write",2103],[10,"ArrowReader",0,2098],[8,"RecordBatch",2104],[6,"Option",2105],[10,"Serializer",2106],[5,"TypeId",2107],[10,"WriteDataFrameToFile",0,2098],[5,"AvroReader",86,2108],[8,"ArrowSchema",2109],[10,"Seek",2103],[6,"AvroCompression",86],[5,"AvroWriter",86,2110],[5,"Error",2101],[8,"Schema",2111],[5,"String",2112],[5,"Vec",2113],[1,"str"],[5,"CloudOptions",227],[5,"CloudLocation",153,2114],[10,"ObjectStore",2115],[5,"Arc",2116],[1,"tuple"],[5,"PolarsObjectStore",153,2117],[5,"Path",2118],[10,"AsyncWrite",2119],[10,"Unpin",2120],[5,"CloudWriter",153,2121],[5,"Error",2122],[10,"Command",2123],[8,"Result",2122],[5,"Url",2124],[5,"Bytes",2125],[5,"Range",2126],[1,"slice"],[5,"ObjectMeta",2115],[17,"Output"],[10,"FnOnce",2127],[1,"u8"],[10,"VarInt",2128],[6,"AmazonS3ConfigKey",227,2129],[6,"AzureConfigKey",227,2130],[6,"GoogleConfigKey",227,2131],[6,"CloudType",227],[10,"AsRef",2132],[10,"Into",2132],[17,"Item"],[10,"IntoIterator",2133],[5,"CsvReader",416,2134],[10,"PhysicalIoExpr",1886],[10,"MmapBytesReader",1284],[5,"Box",2135],[8,"SchemaRef",2111],[5,"OwnedBatchedCsvReader",416,2136],[5,"BatchedCsvReader",416,2136],[5,"CsvReadOptions",416,2137],[5,"CsvParseOptions",416,2137],[6,"CsvEncoding",416,2137],[6,"CommentPrefix",416,2137],[6,"NullValues",416,2137],[5,"Path",2138],[10,"Fn",2127],[5,"PlSmallStr",2139],[5,"PathBuf",2138],[5,"File",2140],[5,"SchemaInferenceResult",754],[6,"DataType",2141],[6,"Buffer",677],[5,"Series",2142],[8,"PlHashSet",2143],[6,"ReaderBytes",1284],[5,"CsvWriter",781,2144],[5,"BatchedWriter",781,2144],[5,"CsvWriterOptions",781,2145],[5,"SerializeOptions",781,2145],[6,"QuoteStyle",781,2145],[8,"NonZeroUsize",2146],[1,"u64"],[5,"FileCacheEntry",926,2147],[5,"IpcStreamReader",947,2148],[5,"IpcWriter",947,2149],[5,"BatchedWriter",947,2149],[10,"AsyncWrite",2150],[10,"Send",2120],[5,"IpcScanOptions",947,2151],[5,"IpcReadOptions",947,2152],[5,"IpcWriterOptions",947,2149],[6,"IpcCompression",947,2149],[5,"IpcReaderAsync",947,2152],[5,"FileMetadata",2153],[1,"i64"],[5,"IpcStreamWriterOption",947,2148],[5,"IpcReader",947,2151],[5,"IpcStreamWriter",947,2148],[8,"ArrowSchemaRef",2109],[5,"CompatLevel",2141],[5,"JsonWriterOptions",1186],[5,"JsonWriter",1186],[5,"JsonReader",1186],[5,"BatchedWriter",1186],[6,"JsonFormat",1186],[5,"MemSlice",2154],[10,"BufRead",2103],[5,"StructArray",1308,2155],[10,"Array",2156],[6,"ArrowDataType",2157],[10,"Any",2107],[5,"JsonLineReader",1308],[5,"Field",2158],[5,"GrowableStruct",2159],[5,"MutableStructArray",2160],[5,"Bitmap",2161],[10,"Scalar",2162],[5,"StructValueIter",2163],[5,"BitmapIter",2164],[6,"ZipValidity",2165],[6,"PolarsError",2100],[5,"FileMetadata",1415,2166],[6,"ColumnOrder",2167],[5,"ParquetStatistics",1415],[5,"ColumnChunkMetadata",2168],[10,"ExactSizeIterator",2169],[5,"MutableStatistics",2170],[5,"KeyValue",2171],[5,"SchemaDescriptor",2172],[5,"FileMetaData",2171],[6,"ParquetError",2173],[5,"ParquetReader",1468,2174],[5,"BatchedParquetReader",1468,2175],[5,"ParquetAsyncReader",1468,2174],[5,"ParquetOptions",1468,2176],[6,"ParallelStrategy",1468,2176],[8,"FileMetadataRef",1415],[1,"f64"],[6,"PrefilterMaskSetting",1611,2175],[5,"RowGroupMetadata",2177],[6,"Filter",2178],[5,"ParquetWriter",1632,2179],[5,"BatchedWriter",1632,2180],[5,"ParquetWriteOptions",1632,2181],[6,"ParquetCompression",1632,2181],[5,"GzipLevel",1632,2181],[5,"BrotliLevel",1632,2181],[5,"ZstdLevel",1632,2181],[5,"StatisticsOptions",1632,2182],[8,"RowGroupIterColumns",1632,2183],[10,"Iterator",2184],[5,"FileWriter",2185],[5,"Mutex",2186],[1,"u32"],[1,"i32"],[10,"Sync",2120],[5,"RuntimeManager",1864],[10,"Future",2187],[10,"GetSize",1864],[5,"JoinHandle",2188],[10,"StatsEvaluator",1886],[5,"ColumnStats",1886],[5,"BatchStats",1886],[5,"Field",2189],[10,"Sized",2120],[6,"DynByteSourceBuilder",1976],[6,"DynByteSource",1976],[5,"ObjectStoreByteSource",1976],[5,"MemSliceByteSource",1976],[10,"ByteSource",1976],[6,"SupportedCompression",2057],[6,"SplitSlicePosition",2075],[5,"Utf8Field",677],[5,"CategoricalField",677],[5,"DatetimeField",677],[15,"Datetime",751]],"r":[[0,2098],[1,2095],[2,2095],[3,2098],[4,2098],[5,2098],[87,2108],[88,2110],[89,2190],[153,2114],[154,2121],[155,2117],[156,2117],[165,2191],[194,2114],[206,2191],[230,2129],[235,2130],[259,2131],[418,2136],[419,2137],[420,2137],[421,2137],[422,2137],[423,2134],[427,2137],[428,2136],[474,2192],[475,2192],[556,754],[782,2144],[783,2144],[784,2145],[788,2145],[789,2145],[926,2193],[927,2194],[928,2147],[935,2193],[937,2194],[947,2149],[948,2149],[949,2152],[950,2151],[951,2152],[952,2151],[953,2148],[954,2148],[955,2148],[956,2149],[957,2149],[1309,2155],[1415,2166],[1433,2170],[1469,2175],[1472,2176],[1473,2174],[1474,2176],[1475,2174],[1553,2195],[1614,2175],[1617,2175],[1625,2196],[1627,2197],[1632,2180],[1634,2181],[1636,2181],[1639,2181],[1640,2181],[1641,2179],[1642,2183],[1644,2182],[1647,2181],[1954,2098],[1955,2098],[1956,0],[1964,1856],[1965,2198],[1966,2198],[1967,2198],[1968,2198],[1972,2198],[1973,2198],[1974,2198]],"b":[[1313,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1314,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1315,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1316,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1336,"impl-PartialEq%3C%26dyn+Array%3E-for-StructArray"],[1337,"impl-PartialEq-for-StructArray"],[1342,"impl-From%3CGrowableStruct%3C\'a%3E%3E-for-StructArray"],[1343,"impl-From%3CMutableStructArray%3E-for-StructArray"],[1364,"impl-StructArray"],[1365,"impl-Array-for-StructArray"],[1368,"impl-StructArray"],[1369,"impl-Array-for-StructArray"],[1381,"impl-ArrayFromIter%3C()%3E-for-StructArray"],[1382,"impl-ArrayFromIter%3COption%3C()%3E%3E-for-StructArray"],[1383,"impl-ArrayFromIterDtype%3COption%3C()%3E%3E-for-StructArray"],[1384,"impl-ArrayFromIterDtype%3C()%3E-for-StructArray"],[1392,"impl-Array-for-StructArray"],[1393,"impl-StructArray"],[1409,"impl-StructArray"],[1410,"impl-Array-for-StructArray"],[2013,"impl-From%3CObjectStoreByteSource%3E-for-DynByteSource"],[2015,"impl-From%3CMemSliceByteSource%3E-for-DynByteSource"],[2016,"impl-From%3CMemSlice%3E-for-DynByteSource"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC8GugAAAAEAAwARABcACAAhAAgAKwACADAABQA4AAAAOgACAD4AAgBDABMAXwAAAGEAGAB9AAMAhAABAIcADQCYAAAAnAAAAJ4ABgCnAA8AuQACAL8AAwDFAAIAzQAAANAAAADVAA4A6gABAPYAAAACAQEABQEBABsBEAAvATYAawEDAHABCAB+ARwAowEEAKwBAQCwASoA3QE4ABcCBAAjAgAAJQIRAEACAABCAgIASQIrAHYCCACAAgcAmAIAAKYCEgC6AhcA1gIEAN8CIAABAwEABQMAAAcDBgAPAwAAFwMXADEDIQBUAwAAVgMCAF4DAgBiAwAAZAMFAHADAgB3AwMAfAMWAJ8DBwCoAwIArAMBALADBAC2AwAAuQMAALwDAAC+AwAAwQMDAMYDIwDrAzYAIwQDADIEDgBOBAYAVwQ1AI8EAQCVBAEAmQQAAJwEAACfBAEAogQBAKkEJADPBAAA1QQAANcEBADjBBkA/wQBAAUFAQAIBQcAEQUBABQFCQAfBQEAIgUJAC0FDQA8BQEAPwUBAEMFAABFBQIASwUAAE0FAABWBQIAWgUAAF0FAQBgBQ0AbwUCAHUFAQB5BQgAgwUBAIkFAACLBQcAlgUDAJwFBACiBQAApAUBALIFAgC2BQMAuwUBAL4FAADBBQAAwwUAAMcFMwAABgkADwYAABEGAgAVBgAAFwYBABoGAQAdBgIAIQYTADcGBQA+BgAAQAYFAEcGAABJBgEATAYJAFcGAQBaBggAZAYAAGYGAQBpBgAAawYBAG4GAQBxBigAnAY7ANoGBQDoBg8AAAcBAAMHAQAGBwAACAcFABAHKQA/BwEAQgcAAEkHAgBNBwQAUwcBAFYHAABYBwYAYQcEAGcHCQByBwcAfAcCAIcHAQCRBwMAmAcNAKcHAACpBwAArQcNALwHAQC/BwAAwQcaAN4HAADgBwEA5AcOAPcHEwAMCAMAEQgCABUIAAAYCA0AJwgAACoIBAA="}],["polars_lazy",{"t":"CQCCCPPPGPPPPPPPPPPPPPFPPPPPPPPKPGPPPPGFPPPFFPPPKPKPPPPPPPPPPPPPPPPPPFPPPPPPPPPFPPPPPPPPPGPPPPGKFPPPPPPPFIPPPPPPPPPGKPPPPPIPPPPPPPPPPPPPPKPPPPPPPPPPPPPPPFPPPPPPPPPPPFKPPPPPPPPPPPPPPFPPPPPPPPPPPPPPPPPPGPPPPPPGPPPPPPPPPPGPPPPPPPPPPPKPPPPPPPPPPFPPPPPPPPGPPPPPPPPPPPFPPPPPPPGPPPPPPFPGFPPPPPPPGPFPPPPPPPPPPPPPPPPPPPKPPFPPFPPPPFPPGGPPPPPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNHOONNNNHNNHNNNHNHNNNNNNNNNNNNNNHNHNONNNHHNCNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOMNMMNHNNCNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHHNNNNNNNNHNHNNNHNNNNHHHHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNHHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHOOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOCNCNNNNNNNNMMNNMNNNNNNNNNNNNNNNNNNNNNNNNNNOONOHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNHNHNNNNNNNNNHNNHNNNHNNNNNNNNNHNNNNNNNNNNHNNHNNNNNNHNNNHHNNHHNNNNOOOHNNNHOOONONNNNNONNONNNNNNNNNNNNHNHNOONNNNNNNNNHNNNNNNCNNHNNNHNNNHNNNNNONNNNNNHHNNNNNNNNNNNNNNNNNNNNNNOONNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNONCNNNNNHNNNHNNNNNNHNNHOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNCNNNNNNNNNNNONNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOHNNONNNNNNNNNNNNNNNNNNNNNNNNNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOFNNNNNNNNNNNNNNNNNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPPPGPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPPGPPPPPPPGPPPPGPPPPPPPPPPPPPPPPPPPPPPPPPPPPPCCCCCOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOGPPPGPPPPPGPPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPGPPPNNNNNNNNNNNNNNNNNNNNNNNNNPPPPPPPPPPPPPPPGNNNNNNNNNNNNNNNNNNNNNNNNNNNNFFHHOHHHHHHHHHHHHHHHHHHHHHHHHHHOOHHHHHOOHHHHHHHHHOOOHOOOOHHHHHHHOOHHHHOOOOOJJFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFOOOOOITTTTTTFKFFKFFFTFTTTTTTFFFTNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNOONOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNOONONNNNNNNMNNOOOONNNNNNNNNNNOCNNMNNOONNNNNMNNOOONNNNNNNONNNNNNNNNNNNNNNONNNMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNMNNNNNNNNNNNNNMNNNMNNNNNNNNNNNNNNMNNNNNNNHHKFFPPPPPPPFPPPPPPGFPFPPPPPPPPPPPPPPPPPFPFGGFPKGPPPPPSFPPPPPFKPPGFPFPPPPPPPPPPPPPPPFNNNNNNNNNNNNNNNNNNNNNNMONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOONONOONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNONMNNNNNNNNNNNNNNNOOOOOONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNOOMNNNOOOONONNNONNNNNNNOOOONONOOOHOMOMNONNNNNNNNNNNNNNNNONOOOONONNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNNNNNNNNNNONNNOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOOO","n":["dsl","fallible","frame","physical_plan","prelude","Abs","Add","Agg","AggExpr","AggGroups","Alias","All","AllHorizontal","And","AnonymousFunction","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","Array","ArrayExpr","ArrayNameSpace","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","","BinaryUdfOutputField","Boolean","BooleanFunction","Business","Cast","CastTimeUnit","Categorical","CategoricalFunction","CategoricalNameSpace","Cbrt","Ceil","Century","ChainedThen","ChainedWhen","Clip","Coalesce","Column","ColumnBinaryUdf","Columns","ColumnsUdf","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","Count","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeArgs","DatetimeFunction","Day","Diff","Divide","DropNans","DropNulls","Dtype","DtypeColumn","Duration","DurationArgs","EndsWith","Entropy","Eq","EqValidity","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exclude","Excluded","ExclusiveOr","Exp","Explode","","Expr","ExprEvalExtension","ExprNameNameSpace","ExtendConstant","Extract","ExtractAll","ExtractGroups","Field","FieldByIndex","FieldByName","FieldsMapper","FieldsNameMapper","FillNull","FillNullWithStrategy","Filter","Find","First","Floor","FloorDivide","ForwardFill","Function","FunctionExpr","FunctionOutputField","Fused","Gather","GatherEvery","Generic","GetCategories","GetOutput","GroupsToRows","Gt","GtEq","Hash","Head","HexDecode","HexEncode","Hist","Hour","Implode","IndexColumn","InterSect","Interpolate","InterpolateBy","IntoListNameSpace","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","Join","JoinOptions","JsonDecode","JsonEncode","JsonPathMatch","KeepName","Kurtosis","Last","Len","LenBytes","LenChars","List","ListExpr","ListNameSpace","ListNameSpaceExtension","Literal","Log","Log1p","LogicalAnd","LogicalOr","LowerBound","Lowercase","Lt","LtEq","Max","MaxHorizontal","Mean","MeanHorizontal","Median","MetaNameSpace","Microsecond","Millennium","Millisecond","Min","MinHorizontal","Minus","Minute","Mode","Modulus","Month","MonthEnd","MonthStart","MultipleFields","Multiply","NUnique","Name","Nanosecond","Negate","NestedType","Not","NotEq","NotEqValidity","Nth","NullCount","OffsetBy","Operator","Or","OrdinalDay","Over","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Plus","Pow","PowFunction","PrefixFields","QCut","Quantile","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameAlias","RenameAliasFn","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","Rolling","RollingCovOptions","RollingExpr","RollingExprBy","Root","Round","","RoundSF","SearchSorted","Second","Selector","","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","","Sort","SortBy","SpecialEq","Split","SplitExact","SplitN","Sqrt","StartsWith","Std","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StrptimeOptions","StructExpr","StructFunction","StructNameSpace","Sub","SubPlan","SuffixFields","Sum","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Ternary","Then","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","TrueDivide","Truncate","UdfSchema","Unique","UniqueCounts","UnpivotArgsDSL","UpperBound","Uppercase","UserDefinedFunction","ValueCounts","Var","Week","WeekDay","When","Wildcard","Window","WindowMapping","WindowType","WithFields","WithTimeUnit","Xor","Year","ZFill","__clone_box","","","","","","","","","","","","","","","","","","","","","","","","","","","_into_selector","_rename_fields_impl","_selector_add","_selector_and","_selector_sub","_selector_xor","abs","add","","agg_groups","alias","all","","","","all_horizontal","allow_parallel","ambiguous","and","any","","","any_horizontal","append","apply","apply_binary","apply_children","apply_many","apply_many_private","apply_multiple","approx_n_unique","arange","arccos","arccosh","arcsin","arcsinh","arctan","arctan2","arctanh","arg_max","","","arg_min","","","arg_sort","arg_sort_by","arg_unique","arg_where","args","","arr","as_any","as_ref","as_struct","avg","backward_fill","binary","","binary_expr","bitand","bitxor","borrow","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","bottom_k","bottom_k_by","business_day_count","cache","call","","call_udf","","call_unchecked","cast","","cast_with_options","cat","","cbrt","ceil","clip","clip_max","clip_min","clone","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","","","","","","","","","","","","coalesce","col","cols","concat_expr","concat_list","concat_str","contains","","cos","cosh","cot","count","count_matches","","cov","cum_count","cum_fold_exprs","cum_max","cum_min","cum_prod","cum_reduce_exprs","cum_sum","cumulative_eval","","cut","date_ranges","datetime","datetime_range","datetime_ranges","day","days","ddof","default","","","","","","","","","","","degrees","deref","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","deserialize","","","","","","","","","","","","","","","","","","","","","","","","diff","","div","dot","drop","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","drop_nans","drop_nulls","","dt","","dtype_col","dtype_cols","duration","entropy","eq","","","","","","","","","","","","","","","","","","","","","","eq_missing","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","eval","","ewm_mean","ewm_mean_by","ewm_std","ewm_var","exact","exclude","exclude_dtype","exp","explode","extend_constant","field_by_index","field_by_name","field_by_names","fill_nan","fill_null","fill_null_with_strategy","filter","first","","","flatten","float_type","floor","floor_div","fmt","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","fold_exprs","force_parallel","format","format_str","forward_fill","from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","from_type","fun","function_expr","function_with_options","functions","gather","","gather_every","","get","","","get_categories","get_field","","get_fields_lens","get_output","get_schema","gt","gt_eq","has_multiple_outputs","hash","","","","","","","","","","","","","","","","","","","","head","","hist","hour","hours","implode","index","index_cols","init","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","input_fields","int_range","int_ranges","interpolate","interpolate_by","into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","into_iter","into_list_name_space","","into_tree_formatter","is_arithmetic","is_between","is_column","is_column_selection","is_comparison","is_duplicated","is_finite","is_first_distinct","is_in","is_infinite","is_last_distinct","is_nan","is_not_nan","is_not_null","","is_null","","is_regex_projection","is_simple_projection","is_unique","join","","json_encode","keep","kurtosis","last","","","len","","","list","lit","log","log1p","logical_and","logical_or","lower_bound","lt","lt_eq","map","","map_binary","map_children","map_datetime_dtype_timezone","map_dtype","","map_dtypes","map_expr","map_field","map_fields","","map_list","map_list_multiple","map_many","map_many_private","map_multiple","map_numeric_to_float_dtype","map_python","map_to_float_dtype","map_to_list_and_array_inner_dtype","map_to_list_supertype","map_to_supertype","max","","","","max_horizontal","mean","","","mean_horizontal","median","","","","meta","microsecond","microseconds","milliseconds","min","","","","min_horizontal","min_periods","minute","minutes","mode","month","mul","n_unique","","","name","","nan_max","nan_min","nanoseconds","neg","neq","neq_missing","nested_sum_type","new","","","","","","nodes","nodes_owned","not","","nth","null_count","on","options","or","otherwise","","output_name","over","over_with_options","pct_change","peak_max","peak_min","pearson_corr","pi","pop","pow","prefix","prefix_fields","product","python_udf","qcut","qcut_uniform","quantile","","radians","rank","reduce_exprs","reinterpret","rem","rename_fields","repeat","repeat_by","replace","replace_dtype","replace_strict","reshape","return_type","reverse","","","rle","rle_id","rolling","rolling_corr","rolling_cov","rolling_map","rolling_map_float","rolling_max","rolling_max_by","rolling_mean","rolling_mean_by","rolling_median","rolling_median_by","rolling_min","rolling_min_by","rolling_quantile","rolling_quantile_by","rolling_skew","rolling_std","rolling_std_by","rolling_sum","rolling_sum_by","rolling_var","rolling_var_by","root_names","round","round_sig_figs","rows_left","rows_right","same_type","sample_frac","sample_fraction","sample_n","","search_sorted","second","seconds","serialize","","","","","","","","","","","","","","","","","","","","","","","","set_difference","set_intersection","set_sorted_flag","set_symmetric_difference","shift","","","shift_and_fill","shrink_dtype","shuffle","sign","sin","sinh","skew","slice","","sort","","","sort_by","spearman_rank_corr","sqrt","std","","","str","strict","strict_cast","string","struct_","sub","","suffix","suffix_fields","sum","","","","sum_horizontal","super_type","swap_operands","tail","","tan","tanh","ternary_expr","then","","time_ranges","time_unit","","time_zone","to_array","to_field","to_list","to_lowercase","to_owned","","","","","","","","","","","","","","","","","","","","","","","","","","","to_physical","to_physical_type","to_string","","","","","","","","","to_struct","","to_uppercase","top_k","top_k_by","try_from","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","try_map_dtype","try_map_dtypes","try_map_expr","try_map_field","try_serialize","","","try_to_compact_string","","","","","","","","","type_id","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","udf","undo_aliases","union","unique","","","unique_counts","unique_stable","","","upper_bound","value_counts","value_name","var","","","variable_name","vzip","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","weeks","when","","","window_size","with_ambiguous","with_day","with_days","with_dtype","with_fields","with_fractional_seconds","with_hms","","with_hour","with_hours","with_microsecond","with_microseconds","with_milliseconds","with_minute","with_minutes","with_month","with_nanoseconds","with_opt_dtype","with_same_dtype","with_second","with_seconds","with_time_unit","with_time_zone","with_weeks","with_year","xor","year","expr","input","","interpol","propagate_nans","","quantile","closed","ignore_nulls","","by","","dtype","expr","","","","","falsy","function","","","","idx","input","","","","left","length","offset","op","options","","","","","order_by","output_type","partition_by","predicate","returns_scalar","right","sort_options","truthy","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","BinaryNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains_literal","deref","deref_mut","drop","ends_with","from","hex_decode","hex_encode","init","into","size_bytes","starts_with","try_from","try_into","type_id","vzip","CategoricalNameSpace","DateLikeNameSpace","add_business_days","base_utc_offset","borrow","borrow_mut","cast_time_unit","century","combine","convert_time_zone","date","datetime","day","deref","deref_mut","drop","dst_offset","from","hour","init","into","is_leap_year","iso_year","microsecond","millennium","millisecond","minute","month","month_end","month_start","nanosecond","offset_by","ordinal_day","quarter","replace_time_zone","round","second","strftime","time","timestamp","to_string","total_days","total_hours","total_microseconds","total_milliseconds","total_minutes","total_nanoseconds","total_seconds","truncate","try_from","try_into","type_id","vzip","week","weekday","with_time_unit","year","Abs","All","AllHorizontal","Any","AnyHorizontal","ApproxNUnique","ArgUnique","ArgWhere","ArrayExpr","AsStruct","Atan2","BackwardFill","Base64Decode","Base64Encode","BaseUtcOffset","BinaryExpr","Boolean","BooleanFunction","Business","CastTimeUnit","Categorical","CategoricalFunction","Cbrt","Ceil","Century","Clip","Coalesce","Combine","ConcatExpr","ConcatHorizontal","ConcatVertical","Contains","ConvertTimeZone","Correlation","CountMatches","CumCount","CumMax","CumMin","CumProd","CumSum","Cut","DSTOffset","Date","Datetime","DatetimeFunction","Day","Diff","DropNans","DropNulls","Duration","EndsWith","Entropy","EwmMean","EwmMeanBy","EwmStd","EwmVar","Exp","ExtendConstant","Extract","ExtractAll","ExtractGroups","FieldByIndex","FieldByName","FillNull","FillNullWithStrategy","Find","Floor","ForwardFill","FunctionExpr","Fused","GatherEvery","Generic","GetCategories","Hash","Head","HexDecode","HexEncode","Hist","Hour","Interpolate","InterpolateBy","IsBetween","IsDuplicated","IsFinite","IsFirstDistinct","IsIn","IsInfinite","IsLastDistinct","IsLeapYear","IsNan","IsNotNan","IsNotNull","IsNull","IsUnique","IsoYear","JsonDecode","JsonEncode","JsonPathMatch","Kurtosis","LenBytes","LenChars","ListExpr","Log","Log1p","LowerBound","Lowercase","MaxHorizontal","MeanHorizontal","Microsecond","Millennium","Millisecond","MinHorizontal","Minute","Mode","Month","MonthEnd","MonthStart","MultipleFields","Nanosecond","Negate","Not","NullCount","OffsetBy","OrdinalDay","PadEnd","PadStart","PctChange","PeakMax","PeakMin","Pow","PowFunction","PrefixFields","QCut","Quarter","RLE","RLEID","Random","Range","Rank","Reinterpret","RenameFields","RepeatBy","Replace","","ReplaceStrict","ReplaceTimeZone","Reshape","Reverse","","RollingExpr","RollingExprBy","Round","","RoundSF","SearchSorted","Second","SetSortedFlag","Shift","ShiftAndFill","ShrinkType","Sign","Skew","Slice","Split","SplitExact","SplitN","Sqrt","StartsWith","StringExpr","StringFunction","StripChars","StripCharsEnd","StripCharsStart","StripPrefix","StripSuffix","Strptime","StructExpr","StructFunction","SuffixFields","SumHorizontal","Tail","TemporalExpr","TemporalFunction","Time","TimeStamp","Titlecase","ToDecimal","ToInteger","ToPhysical","ToString","TopK","TopKBy","TotalDays","TotalHours","TotalMicroseconds","TotalMilliseconds","TotalMinutes","TotalNanoseconds","TotalSeconds","Trigonometry","Truncate","Unique","UniqueCounts","UpperBound","Uppercase","ValueCounts","Week","WeekDay","WithFields","WithTimeUnit","Year","ZFill","cat","pow","rolling","rolling_by","trigonometry","closed","ignore_nulls","","allow_duplicates","base","","bin_count","breaks","ddof","decimals","descending","","digits","half_life","has_max","has_min","include_breakpoint","include_breaks","","include_category","labels","","left_closed","","limit","","method","","n","name","normalize","","offset","options","","","","parallel","probs","return_dtype","reverse","","","","","seed","","sort","delimiter","","dtype","","fill_char","","ignore_nulls","","inclusive","infer_schema_len","length","","literal","","","n","","pat","strict","","time_unit","time_zone","CategoricalFunction","GetCategories","Cbrt","Generic","PowFunction","Sqrt","Max","Mean","Min","Quantile","RollingFunction","Skew","Std","Sum","Var","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","MaxBy","MeanBy","MinBy","QuantileBy","RollingFunctionBy","StdBy","SumBy","VarBy","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","ArcCos","ArcCosh","ArcSin","ArcSinh","ArcTan","ArcTanh","Cos","Cosh","Cot","Degrees","Radians","Sin","Sinh","Tan","Tanh","TrigonometricFunction","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","hash","init","into","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","vzip","DatetimeArgs","DurationArgs","all","all_horizontal","ambiguous","any_horizontal","apply_binary","arange","arg_sort_by","arg_where","as_struct","avg","cast","coalesce","col","collect_all","cols","concat","concat_expr","concat_lf_diagonal","concat_lf_horizontal","concat_list","concat_str","cov","cum_fold_exprs","cum_reduce_exprs","date_range","date_ranges","datetime","datetime_range","datetime_ranges","day","days","dtype_col","dtype_cols","duration","fold_exprs","format_str","hour","hours","index_cols","int_range","int_ranges","is_not_null","is_null","map_binary","max","mean","median","microsecond","microseconds","milliseconds","min","minute","minutes","month","nanoseconds","not","pearson_corr","quantile","reduce_exprs","repeat","rolling_corr","rolling_cov","second","seconds","spearman_rank_corr","sum","time_range","time_ranges","time_unit","","time_zone","weeks","year","CALL_COLUMNS_UDF_PYTHON","CALL_DF_UDF_PYTHON","PythonFunction","PythonGetOutput","PythonUdfExpression","__clone_box","borrow","","","borrow_mut","","","call_udf","","clone","clone_into","clone_to_uninit","deref","","","deref_mut","","","deserialize","drop","","","eq","equivalent","","","fmt","from","","","","get_field","get_output","init","","","into","","","new","","serialize","to_owned","try_from","","","try_into","","","try_serialize","","type_id","","","vzip","","","StringNameSpace","base64_decode","base64_encode","borrow","borrow_mut","contains","contains_literal","count_matches","deref","deref_mut","drop","ends_with","extract","extract_all","extract_groups","find","find_literal","from","head","hex_decode","hex_encode","init","into","join","json_decode","json_path_match","len_bytes","len_chars","pad_end","pad_start","replace","replace_all","replace_n","reverse","slice","split","split_exact","split_exact_inclusive","split_inclusive","splitn","starts_with","strip_chars","strip_chars_end","strip_chars_start","strip_prefix","strip_suffix","strptime","tail","to_date","to_datetime","to_decimal","to_integer","to_lowercase","to_time","to_titlecase","to_uppercase","try_from","try_into","type_id","vzip","zfill","UserDefinedFunction","fun","input_fields","name","options","return_type","AllowedOptimizations","CLUSTER_WITH_COLUMNS","COMM_SUBEXPR_ELIM","COMM_SUBPLAN_ELIM","EAGER","FAST_PROJECTION","FILE_CACHING","InProcessQuery","IntoLazy","JoinBuilder","LazyCsvReader","LazyFileListReader","LazyFrame","LazyGroupBy","LazyJsonLineReader","NEW_STREAMING","OptFlags","PREDICATE_PUSHDOWN","PROJECTION_PUSHDOWN","ROW_ESTIMATE","SIMPLIFY_EXPR","SLICE_PUSHDOWN","STREAMING","ScanArgsAnonymous","ScanArgsIpc","ScanArgsParquet","TYPE_COERCION","__clone_box","","","","","","","","","_collect_post_opt","_with_eager","agg","all","allow_parallel","anonymous_scan","anti_join","apply","bitand","bitand_assign","bitor","bitor_assign","bits","","bitxor","bitxor_assign","borrow","","","","","","","","","","borrow_mut","","","","","","","","","","bottom_k","cache","","","cancel","cast","cast_all","clone","","","","","","","","","clone_into","","","","","","","","","clone_to_uninit","","","","","","","","","cloud_options","","","","","","coalesce","collect","collect_concurrently","collect_schema","complement","concat_impl","","","contains","count","cross_join","default","","","","","deref","","","","","","","","","","deref_mut","","","","","","","","","","describe_optimized_plan","describe_optimized_plan_tree","describe_plan","describe_plan_tree","difference","drop","","","","","","","","","","","","drop_no_validate","drop_nulls","empty","explain","explode","extend","fetch","","fetch_blocking","fill_nan","fill_null","filter","finish","","","","","finish_no_glob","","","first","fmt","","","","","force_parallel","from","","","","","","","","","","","","from_bits","from_bits_retain","","from_bits_truncate","from_iter","from_name","full_join","get_current_optimizations","glob","","","","group_by","group_by_dynamic","group_by_stable","head","hive_options","","how","include_file_paths","","infer_schema_length","init","","","","","","","","","","inner_join","insert","intersection","intersects","into","","","","","","","","","","into_iter","is_all","is_empty","iter","iter_names","join","join_builder","join_nulls","join_where","last","lazy","","left_join","left_on","limit","logical_plan","","low_memory","","map","map_python","max","mean","median","merge_sorted","min","n_rows","","","","","","name","new","","","new_paths","","new_with_sources","","not","null_count","on","optimize","parallel","pivot","profile","quantile","rechunk","","","","","remove","rename","reverse","right_on","rolling","row_index","","","","","","scan_from_python_function","scan_ipc","scan_ipc_files","scan_ipc_sources","scan_parquet","scan_parquet_files","scan_parquet_sources","schema","schema_only","schema_with_arenas","select","select_seq","semi_join","set","set_cached_arena","shift","shift_and_fill","sink_csv","sink_ipc","sink_ipc_cloud","sink_json","sink_parquet","sink_parquet_cloud","skip_rows","slice","sort","sort_by_exprs","sources","","","std","sub","sub_assign","suffix","sum","symmetric_difference","tail","","to_alp","to_alp_optimized","to_dot","to_owned","","","","","","","","","toggle","top_k","try_from","","","","","","","","","","try_into","","","","","","","","","","type_id","","","","","","","","","","union","unique","unique_generic","unique_stable","unique_stable_generic","unnest","unpivot","use_statistics","validate","var","vzip","","","","","","","","","","with","with_batch_size","with_cache","with_cloud_options","","with_cluster_with_columns","with_column","with_columns","with_columns_seq","with_comm_subexpr_elim","with_comm_subplan_elim","with_comment_prefix","with_context","with_decimal_comma","with_dtype_overwrite","with_encoding","with_eol_char","with_glob","with_has_header","with_ignore_errors","","with_include_file_paths","","with_infer_schema_length","","with_low_memory","with_missing_is_null","with_n_rows","","","","","with_new_streaming","with_null_values","with_optimizations","with_paths","","with_predicate_pushdown","with_projection_pushdown","with_quote_char","with_raise_if_empty","with_rechunk","","","with_row_estimate","with_row_index","","","","","","with_schema","","with_schema_modify","with_schema_overwrite","with_separator","with_simplify_expr","with_skip_rows","with_skip_rows_after_header","with_slice_pushdown","with_sources","","","with_streaming","with_truncate_ragged_lines","with_try_parse_dates","with_type_coercion","without_optimizations","pivot","pivot_stable","AnonymousScan","AnonymousScanArgs","AnonymousScanOptions","Anti","AsOf","Average","Binary","Boolean","Cache","Cross","CsvWriterOptions","DataFrameScan","Date","DateTime","Decimal","Dense","Distinct","DslPlan","Duration","","DynamicGroupOptions","ExtContext","Filter","Float","Float32","Float64","Full","GroupBy","HConcat","HStack","IEJoin","IR","Inner","Int","Int16","Int32","Int64","Int8","IpcWriterOptions","Join","JoinArgs","JoinType","JoinValidation","JsonWriterOptions","Left","Literal","LiteralValue","ManyToMany","ManyToOne","MapFunction","Max","Min","NULL","Null","","OneToMany","OneToOne","Ordinal","OtherScalar","ParquetWriteOptions","PolarsTemporalGroupby","PythonScan","Range","RankMethod","RankOptions","Right","RollingGroupOptions","Scan","Select","Semi","Series","Sink","Slice","Sort","StrCat","String","Time","UInt16","UInt32","UInt64","UInt8","Union","UnionArgs","__clone_box","","","","","","","","","","","","","","","","add_ms","add_ns","add_us","allows_predicate_pushdown","allows_projection_pushdown","allows_slice_pushdown","as_any","batch_size","borrow","","","","","","","","","","","","","","","","","","borrow_mut","","","","","","","","","","","","","","","","","","clone","","","","","","","","","","","","","","","","clone_into","","","","","","","","","","","","","","","","clone_to_uninit","","","","","","","","","","","","","","","","closed_window","","cmp","coalesce","compare","compression","","compute_schema","data_page_size","days","days_only","default","","","","","","","","","","","","deref","","","","","","","","","","","","","","","","","","deref_mut","","","","","","","","","","","","","","","","","","descending","describe","describe_tree_format","deserialize","","","","","","","","","","","","","","","","diagonal","display","drop","","","","","","","","","","","","","","","","","","eq","","","","","","","","","","","","","","","equivalent","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","every","fmt","","","","","","","","","","","","","","","","","","","fmt_str","from","","","","","","","","","","","","","","","","","","","from_partitioned_ds","get_datatype","group_by_dynamic","hash","","","","","","","","","","","","","","","how","include_bom","include_boundaries","include_header","index_column","","init","","","","","","","","","","","","","","","","","","into","","","","","","","","","","","","","","","","","","into_iter","is_asof","is_constant_duration","is_full_days","is_scalar","is_valid_join","is_zero","join_nulls","label","lit","","","","maintain_order","","","","materialize","method","months","months_only","mul","n_rows","nanoseconds","needs_checks","neg","negative","new","","next_batch","offset","","output_schema","parallel","parse","parsed_int","partial_cmp","period","","predicate","prepare_cloud_plan","rechunk","rolling","row_group_size","scan","schema","","serialize","","","","","","","","","","","","","","","","serialize_options","should_coalesce","skip_rows","slice","start_by","statistics","suffix","","to_alp","to_any_value","to_owned","","","","","","","","","","","","","","","","to_string","","","to_supertypes","to_writer","","truncate_impl","truncate_ms","truncate_ns","truncate_us","try_from","","","","","","","","","","","","","","","","","","","try_into","","","","","","","","","","","","","","","","","","try_to_compact_string","","","type_id","","","","","","","","","","","","","","","","","","validation","vzip","","","","","","","","","","","","","","","","","","weeks","weeks_only","with_coalesce","with_columns","with_suffix","write_df_to_file","","aggs","apply","args","by_column","cached_ir","contexts","df","dsl","expr","exprs","file_info","file_options","function","id","input","","","","","","","","","","","input_left","input_right","inputs","","keys","left_on","len","maintain_order","node","offset","options","","","","","","","payload","predicate","predicates","right_on","scan_type","schema","slice","sort_options","sources","version","dtype","high","low"],"q":[[0,"polars_lazy"],[5,"polars_lazy::dsl"],[1621,"polars_lazy::dsl::AggExpr"],[1628,"polars_lazy::dsl::BooleanFunction"],[1631,"polars_lazy::dsl::Expr"],[1666,"polars_lazy::dsl::FunctionExpr"],[1711,"polars_lazy::dsl::StringFunction"],[1731,"polars_lazy::dsl::TemporalFunction"],[1733,"polars_lazy::dsl::binary"],[1754,"polars_lazy::dsl::cat"],[1755,"polars_lazy::dsl::dt"],[1811,"polars_lazy::dsl::function_expr"],[2028,"polars_lazy::dsl::function_expr::BooleanFunction"],[2031,"polars_lazy::dsl::function_expr::FunctionExpr"],[2076,"polars_lazy::dsl::function_expr::StringFunction"],[2096,"polars_lazy::dsl::function_expr::TemporalFunction"],[2098,"polars_lazy::dsl::function_expr::cat"],[2100,"polars_lazy::dsl::function_expr::pow"],[2104,"polars_lazy::dsl::function_expr::rolling"],[2138,"polars_lazy::dsl::function_expr::rolling_by"],[2171,"polars_lazy::dsl::function_expr::trigonometry"],[2215,"polars_lazy::dsl::functions"],[2290,"polars_lazy::dsl::python_udf"],[2352,"polars_lazy::dsl::string"],[2413,"polars_lazy::dsl::udf"],[2419,"polars_lazy::frame"],[2903,"polars_lazy::frame::pivot"],[2905,"polars_lazy::prelude"],[3528,"polars_lazy::prelude::DslPlan"],[3580,"polars_lazy::prelude::LiteralValue"],[3583,"dyn_clone::sealed"],[3584,"polars_plan::dsl::meta"],[3585,"polars_plan::dsl::expr"],[3586,"polars_plan::dsl::struct_"],[3587,"polars_utils::pl_str"],[3588,"alloc::sync"],[3589,"polars_error"],[3590,"core::result"],[3591,"polars_plan::dsl::selector"],[3592,"core::convert"],[3593,"polars_plan::dsl::array"],[3594,"polars_plan::dsl::list"],[3595,"polars_plan::dsl::expr_dyn_fn"],[3596,"polars_core::frame::column"],[3597,"core::option"],[3598,"core::ops::function"],[3599,"core::marker"],[3600,"polars_plan::plans::visitor"],[3601,"polars_plan::dsl::function_expr"],[3602,"polars_core::datatypes::dtype"],[3603,"polars_core::chunked_array::ops::sort::options"],[3604,"polars_plan::dsl::function_expr::schema"],[3605,"polars_core::datatypes::field"],[3606,"core::any"],[3607,"alloc::vec"],[3608,"polars_plan::dsl::binary"],[3609,"core::clone"],[3610,"polars_plan::dsl::udf"],[3611,"polars_core::chunked_array::cast"],[3612,"polars_plan::dsl::cat"],[3613,"polars_plan::dsl::arity"],[3614,"polars_plan::dsl::function_expr::boolean"],[3615,"polars_plan::dsl::function_expr::cat"],[3616,"polars_plan::dsl::function_expr::datetime"],[3617,"polars_plan::dsl::function_expr::pow"],[3618,"polars_plan::dsl::function_expr::strings"],[3619,"polars_plan::dsl::function_expr::struct_"],[3620,"polars_plan::dsl::functions::temporal"],[3621,"polars_plan::dsl::options"],[3622,"core::iter::traits::collect"],[3623,"polars_lazy::dsl::eval"],[3624,"polars_core::utils"],[3625,"polars_time::windows::duration"],[3626,"polars_time::windows::group_by"],[3627,"polars_core::datatypes::time_unit"],[3628,"serde::de"],[3629,"polars_plan::plans"],[3630,"polars_core::series"],[3631,"polars_core::series::ops"],[3632,"polars_plan::dsl::dt"],[3633,"polars_lazy::dsl::list"],[3634,"polars_arrow::legacy::kernels::ewm"],[3635,"polars_core::chunked_array::ops"],[3636,"core::fmt"],[3637,"polars_plan::plans::apply"],[3638,"polars_ops::frame::join::iejoin"],[3639,"polars_plan::dsl::function_expr::array"],[3640,"polars_plan::dsl::function_expr::range"],[3641,"polars_plan::dsl::function_expr::list"],[3642,"polars_plan::dsl::function_expr::business"],[3643,"polars_plan::dsl::function_expr::binary"],[3644,"alloc::string"],[3645,"polars_plan::plans::options"],[3646,"polars_schema::schema"],[3647,"core::hash"],[3648,"polars_ops::series::ops::interpolation::interpolate"],[3649,"polars_ops::series::ops::is_between"],[3650,"polars_plan::dsl::name"],[3651,"polars_plan::plans::lit"],[3652,"polars_core::utils::supertype"],[3653,"polars_plan::dsl::python_udf"],[3654,"polars_utils::idx_vec"],[3655,"polars_arrow::legacy::kernels::rolling::no_nulls"],[3656,"polars_ops::series::ops::rank"],[3657,"polars_time::group_by::dynamic"],[3658,"polars_core::chunked_array::ops::rolling_window"],[3659,"polars_core::datatypes"],[3660,"polars_core::chunked_array"],[3661,"polars_time::chunkedarray::rolling_window"],[3662,"polars_core::chunked_array::ops::search_sorted"],[3663,"serde::ser"],[3664,"polars_core::series::series_trait"],[3665,"polars_plan::dsl::string"],[3666,"polars_ops::chunked_array::list::to_struct"],[3667,"compact_str"],[3668,"polars_ops::series::ops::business"],[3669,"polars_arrow::legacy::kernels::time"],[3670,"polars_plan::dsl::function_expr::rolling"],[3671,"polars_plan::dsl::function_expr::rolling_by"],[3672,"polars_plan::dsl::function_expr::trigonometry"],[3673,"polars_core::frame"],[3674,"rayon::iter"],[3675,"pyo3::types::any"],[3676,"pyo3::instance"],[3677,"polars_utils::arena"],[3678,"polars_plan::plans::ir"],[3679,"polars_plan::plans::aexpr"],[3680,"polars_plan::frame::opt_state"],[3681,"polars_plan::plans::anonymous_scan"],[3682,"polars_lazy::scan::anonymous_scan"],[3683,"polars_core::schema"],[3684,"polars_utils::index"],[3685,"polars_lazy::frame::exitable"],[3686,"polars_utils::aliases"],[3687,"polars_lazy::scan::csv"],[3688,"polars_lazy::scan::ipc"],[3689,"polars_lazy::scan::ndjson"],[3690,"polars_lazy::scan::parquet"],[3691,"polars_lazy::scan::file_list_reader"],[3692,"polars_io::cloud::options"],[3693,"polars_ops::frame::join::args"],[3694,"bitflags::iter"],[3695,"std::path"],[3696,"polars_plan::plans::ir::scan_sources"],[3697,"polars_io::options"],[3698,"polars_io::csv::write::options"],[3699,"polars_io::ipc::write"],[3700,"polars_io::json"],[3701,"polars_io::parquet::write::options"],[3702,"core::num::nonzero"],[3703,"polars_io::csv::read::options"],[3704,"chrono_tz::timezones"],[3705,"core::cmp"],[3706,"polars_core::frame::group_by::proxy"],[3707,"polars_core::datatypes::any_value"],[3708,"std::io"],[3709,"polars_io::parquet::write::writer"],[3710,"chrono::naive::datetime"],[3711,"polars_plan::dsl::functions::selectors"],[3712,"polars_plan::dsl::functions::horizontal"],[3713,"polars_plan::dsl::functions::arity"],[3714,"polars_plan::dsl"],[3715,"polars_plan::dsl::functions::range"],[3716,"polars_plan::dsl::functions::index"],[3717,"polars_plan::dsl::functions::coerce"],[3718,"polars_plan::dsl::functions::syntactic_sugar"],[3719,"polars_plan::dsl::functions::business"],[3720,"polars_plan::dsl::functions::concat"],[3721,"polars_plan::dsl::functions::correlation"],[3722,"polars_plan::dsl::functions::repeat"],[3723,"polars_plan::client"]],"i":"`````CjAhj`Dl1Gb0Ef311555Hl6`666Gj0Gf68`8`8608``Gh91``997`7`192221962999999111`119499G`82`3:55::::8`9:8Hj```;4449Gl0``<<:59<7<:``<:<3Gd`288=666=5:;<==`999999959999952`616;=:;667=``;==88=688:=:=:`555:=85=855518:35=`988;=5`85Hh77>>>9>`2>;6>>>>>><`2>7>>6>7>0`>>=6>>>6`<>>>>>><7<<`77757;>`777777`>``=<2;>7>`<`66777>6>>6666666>96`>>`>7`>;66`<<``26967FhFjFlFn?j9>BfGb8=<>9CjGnH`HbHdHf=HjHlHnAhF`hl1111??3??`AlAnj`:>0210`00`000`0`00000002102100`0`Dd;1DhDl``3`3`99Ff6358Nf8FhFjFlFn69G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`j0`8En2DhFb4`33`333333FhFjFlFnDl8G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF```````AlAnj00021`0`000`0If01````>=<1Bf00?><;:972Ff5Dd5hNflFhFjFlFnDl<G`Ef<<GbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`DljG`EfBf0000GbGdGfGhGjGlCjHbHdHfHhHjHlHnAhAnj00FfAlDd4hNflFhFjFlFnDl;G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`jAn1`1```1Dl22G`EfBf0GbGdGfGhGjGlCjHbHdHfHhHjHlHnAhj000G`00Ef00Gb00Gd00Gf00Gh00Gj00Gl00Hb00Hd00Hf00Hh00Hj00Hl00Hn00Ah00Kb0j000800000l001111`An22Bf33DhFbEnKl77G`Ef06Gb0Gd0Gf0Gh0Gj0Gl0Cj0GnH`HbHdHfHhHjHlHnAhF``67`jFfAlDdAnhNflFhFjFlFnDl<<<<<<<<<<<<<<G`Ef0Bf00000000000GbGdGfGhGjGlCj0000GnH`HbHdHfHh0HjHlHnAh0000F`Bf1`j`An101Al12FfJdBdDdDhKl88hDl::G`EfGbGdGfGhGjGlCjHbHdHfHhHjHlHnAhAnj0GnH`25`FfAlDd6hNflFhFjFlFnDl=G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`0``j0FfAlDdAnhNflFhFjFlFnDl<G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`jN`AnhEf411044444444`4`4114Al3lNf7`57`577`777777707`7Dd0Bf090209`99`191111`479``79``4799GnH`0`69;`Hb21<2<7:<<=<<1<<<44321>=<<`<`<?=<FjFn;>>>>>`>;>77>`>>`>>>`>>8`>>6>>?9<>>>>``>>>>>>>>>>>>>>>>>>>;>>Hf06?==??54DljG`>99999GbGdGfGhGjGlCj=Hd;HhHjHlHnAhAn0?0Al1j0000000201200`0120080`003Nf0`231`BfEf5333`FhFl`GnH`197863Fj3FnDl:G`89GbGdGfGhGjGlCj<;HbHdHfHhHjHlHnAhF`jDd1EfGbGdGfGhGjGlCjAlAnNf<<Ff3<2h2lFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`FfAlDdAnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`Dd0j1DhEnBd3EfGbGdGfGhGjGlCjFfAl>AnhNflFhFjFlFnDljG`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF``hAnAl1j01200061206Ff2Dd45NflFhFjFlFnDl9G`EfBfGbGdGfGhGjGlCjGnH`HbHdHfHhHjHlHnAhF`9`FjFn:<<;Ddl=>=>=>==>=>=11>=>>=>j?AJdAJfAJh2102AJjAJlAJnAK`AKbAKd0AKfAKh4AKjAKlAKnAL`3ALb528ALd1ALf11098432323570;5ALhALjALlALnAM`AMbAMdAMfAMhAMjAMlAMn087;87;7;AN`ANb8ANdANfANh0?1ANjANlANnAO`4ALhAObAOdAOfAOhAOjAOl:=;AOnB@`B@bB@dB@fB@h54B@j321B@lB@nBA`03721BAb0`Ed0000000000000000000``Jn000000000000000000000000000000000000000000000000000000CjGb0001111111Gj0Gf33`303`Gh41441422214244444411111444124444444222Gl055355`551Gd644463665555555355555341464466664663336363331365633446666`16366666616466364666366636666664444246`4444446`1646`33444636633333336366646331334`````AJjAJlAJnALhALjALlALnAM`AMbAMdAMfAMhAMjAMlAMn087;87;7;AN`ANb8ANdANfANh0?1ANjANlANnAO`4ALhAObAOdAOfAOhAOjAOl:=;AOnB@`B@bB@dB@fB@h54B@j321B@lB@nBA`03721BAb0`GdGh0`0AAh000`00000000000000000000000000000AAj000`0000000000000000000000000000AAl00000000000000`0000000000000000000000000000````Gn``````````````````````````0H``````10`````````100`1010```````10````10101`````ABhNnABn210212222102102210222222102201102102102210210210102102`A@j00000000000000000000000000000000000000000000000000000000000`F`0000`ACl00000````````0`000000```0ADhABbACjADbADlADnAE`AEb86658ACn77699999999087654321908765432197731877876543219876543219876543219AEd053421888:005:888642:198765432:198765432:8888:19988765432:88:88:989888100530538:::::119888765432:::::::8800528887421426198765432:8:::198765432::::::88118AFd99299843999999916475372646464;9293`9916453;992916475399999997;9999;99999999979991649;;29;98999:9876543;;92:9876543;2:9876543;2:9876543;;9999993292:9876543;24664999999696666666464646616644969119966164919664464646966916496699`````AEl0AHjAHl0Jh3`011120``1`00111300030311111`0````3``AH`0133``20032``12``4`114211122222221`AEjOhInAFb84AGdAGfAGh:OfAGj;AHnABf<888AD`0007;:9AIh9AEl>9AIf98AHj87AHl76JhAEjOhIn8AFb8AH`AGd9AGfAGh:OfAGj;AHnABf<;:98AEl8765?43>21=<;:908765?43>21=<;:908765?43>21=<;:9:63=3::<;987654321=<;:AIh:198AIf87AHj76AHl65JhAEjOhIn7AFb9AH`AGd9AGfAGh:OfAGj;AHnABf<3<<;:98AEl8765?43>21=1=<;:AIh:198AIf87AHj76AHl65JhAEjOhInAFb9AH`AGdAGfAGh:OfAGj;AHnABf;;;:::999888AEl00888777666555333222111<<;::AD`:1199876AHj65AHl545?>=AIh==4<;AIf;:398276Jh73AIbAEjOhInAFb;AH`AGdAGfAGh=OfAGj>AHnABf86;6;:;:9?8AEl87?65AHj54AHl43Jh?>=AIh=4<;AIf;:498376225??3=?>AEjNhIn36?>=;6<00040AH`111AFbAD`5Oh8=444608`=AIbAGj33:8264>5AGdAGfAGhAHjOf5AHlAHnABfJh8=2=AEj:>>140<In?AElAH`<;:98=76542105;=22223?2AIhAFb32>AIf>=<;AGj;;:987Oh74365AGd3AGfAGhAHjOf6AHlAHnABfJhInAElAH`AEj=3AIhAFb43>AIf>=<;AGj;:9824Oh84376AGd3AGfAGhAHjOf6AHlAHnABfJhIn0=>=8;BAd0BAfBAhBAjBAlBAnBB`BBbBBd55BBfBBhBBj14;3BBl:BBn49BC`BCb0>BCdBAd240;4BCf;13:624733?=BAh0BAj>BCh00","f":"```````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}00000000000000000000000000{hj}{{l{Ab{{A`{n}}}}}j}{{hj}{{Af{jAd}}}}000{jj}{{jj}}{{AhAh}}2{{jc}j{{Aj{n}}}}{{}j}{Alj}{Anj}{{jB`}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{{jc}j{{Aj{j}}}}4321{{jcB`}j{{Aj{j}}}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{j}}{b{Cdc}}b}{{Af{CfAd}}}{{Ch{{b{j}}b}{{Bj{{Af{CfAd}}}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`B`}j}{{ce{Bf{{Ab{Bd}}}}B`}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{jj}{{jjClCn}j}11111{{jj}j}2>=2>=2{{jD`}j}{{cDb}j{{Bb{{A`{j}}}}}}4{cj{{Aj{j}}}}{{{b{Dd}}}{{b{{A`{Df}}}}}}`{jAl}{{{b{Dh}}}{{b{Dj}}}}{{{b{Dl}}}{{b{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{j{Bl{Eb}}}j}`{jEd}{{jEfj}j}{{AhAh}}0{b{{b{c}}}{}}000000000000000000000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000000000000000000000000000?{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{{jj{Ej{B`}}{Dn{El}}}j}`{{{b{En}}{b{n}}}{{Af{nAd}}}}{{F`{Dn{j}}}{{Af{jAd}}}}{{{b{Dh}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{Fb}}BhBh}{{Af{BhAd}}}}{{F`{Dn{j}}}j}{{jCn}j}0{{jCnFd}j}`{jFf}{jj}0{{jjj}j}{{jj}j}0{{{b{Fh}}}Fh}{{{b{Fj}}}Fj}{{{b{Fl}}}Fl}{{{b{Fn}}}Fn}{{{b{Dl}}}Dl}{{{b{j}}}j}{{{b{G`}}}G`}{{{b{Ef}}}Ef}{{{b{{Bf{c}}}}}{{Bf{c}}}Eh}{{{b{Gb}}}Gb}{{{b{Gd}}}Gd}{{{b{Gf}}}Gf}{{{b{Gh}}}Gh}{{{b{Gj}}}Gj}{{{b{Gl}}}Gl}{{{b{Cj}}}Cj}{{{b{Gn}}}Gn}{{{b{H`}}}H`}{{{b{Hb}}}Hb}{{{b{Hd}}}Hd}{{{b{Hf}}}Hf}{{{b{Hh}}}Hh}{{{b{Hj}}}Hj}{{{b{Hl}}}Hl}{{{b{Hn}}}Hn}{{{b{Ah}}}Ah}{{{b{F`}}}F`}{{b{b{Cdc}}}f{}}00000000000000000000000000{bf}00000000000000000000000000{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{ej{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{Alc}j{{Aj{j}}}}{{Anc}j{{Aj{j}}}}{jj}00021{{jjId}j}{{jB`}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}111{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}2{{IfjIhB`}j}0{{j{Dn{Ij}}{Bl{c}}B`B`}j{{Il{n}}}}{{jjInJ`}j}{Gnj}{{jjInJ`{Bl{Jb}}{Bl{n}}}j}0```{{}j}{{}{{Bf{{Ab{Jd}}}}}}{{}{{Bf{{Ab{Fb}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{{}Gn}{{}H`}{{}Hd}{{}Hf}{{}Hh}{{}Hj}{{}Hn}{jj}{Ih{{b{c}}}{}}000000000000000{{{b{{Bf{c}}}}}b{}}111111111111111111{Ih{{b{Cdc}}}{}}000000000000000000000000000000000{c{{Af{Dl}}}Jf}{c{{Af{j}}}Jf}{c{{Af{G`}}}Jf}{c{{Af{Ef}}}Jf}{c{{Af{{Bf{{Ab{En}}}}}}}Jf}{c{{Af{{Bf{{Ab{Bd}}}}}}}Jf}{c{{Af{{Bf{{Ab{Jh}}}}}}}Jf}{c{{Af{{Bf{{Ab{Dh}}}}}}}Jf}{c{{Af{{Bf{Jj}}}}}Jf}{c{{Af{Gb}}}Jf}{c{{Af{Gd}}}Jf}{c{{Af{Gf}}}Jf}{c{{Af{Gh}}}Jf}{c{{Af{Gj}}}Jf}{c{{Af{Gl}}}Jf}{c{{Af{Cj}}}Jf}{c{{Af{Hb}}}Jf}{c{{Af{Hd}}}Jf}{c{{Af{Hf}}}Jf}{c{{Af{Hh}}}Jf}{c{{Af{Hj}}}Jf}{c{{Af{Hl}}}Jf}{c{{Af{Hn}}}Jf}{c{{Af{Ah}}}Jf}{{AnClJl}j}{{jClJl}j}{{jj}}{{jc}j{{Aj{j}}}}{Ihf}000000000000000000000000000000000{jj}{Anj}1`{jJn}{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{H`j}{{jIjB`}j}{{{b{Dl}}{b{Dl}}}B`}9{{{b{j}}{b{j}}}B`}{{{b{G`}}{b{G`}}}B`}{{{b{Ef}}{b{Ef}}}B`}{{{b{{Bf{Jj}}}}{b{{Bf{Jj}}}}}B`}{{{b{{Bf{{Ab{c}}}}}}{b{{Bf{{Ab{c}}}}}}}B`K`}{{{b{Gb}}{b{Gb}}}B`}{{{b{Gd}}{b{Gd}}}B`}{{{b{Gf}}{b{Gf}}}B`}{{{b{Gh}}{b{Gh}}}B`}{{{b{Gj}}{b{Gj}}}B`}{{{b{Gl}}{b{Gl}}}B`}{{{b{Cj}}{b{Cj}}}B`}{{{b{Hb}}{b{Hb}}}B`}{{{b{Hd}}{b{Hd}}}B`}{{{b{Hf}}{b{Hf}}}B`}{{{b{Hh}}{b{Hh}}}B`}{{{b{Hj}}{b{Hj}}}B`}{{{b{Hl}}{b{Hl}}}B`}{{{b{Hn}}{b{Hn}}}B`}{{{b{Ah}}{b{Ah}}}B`}{{jc}j{{Aj{j}}}}{{b{b{c}}}B`{}}00000000000000000000000000000000000000000000000000{{KbjB`}j}0{{jKd}j}{{jjIn}j}11`{{jc}j{{Il{n}}}}{{jc}j{{Bb{{A`{Cn}}}}}}{jj}0{{jjj}j}{{lCl}j}{{l{b{E`}}}j}{{le}j{{Aj{n}}}{{Ib{}{{I`{c}}}}}};;{{jKf}j}<{{}j}{Anj}77{{}{{Bf{{Ab{Bd}}}}}}8{{jj}j}{{{b{Dh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Fb}}{b{CdKh}}}{{Af{fKj}}}}{{{b{En}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Kl}}{b{CdKh}}}{{Af{fKj}}}}{{{b{j}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{G`}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Ef}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{{Bf{c}}}}{b{CdKh}}}{{Af{fKj}}}{}}{{{b{Gb}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gd}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gf}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gh}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gj}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gl}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Cj}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{Gn}}{b{CdKh}}}{{Af{fKj}}}}{{{b{H`}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hb}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hd}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hf}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hl}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Hn}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Ah}}{b{CdKh}}}{{Af{fKj}}}}{{{b{F`}}{b{CdKh}}}{{Af{fKj}}}}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}``{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{j{Bl{Eb}}}j}{cc{}}00000000000{Dlj}{Idj}{Knj}{Elj}{Ijj}{B`j}6{L`j}{Lbj}{Ldj}{Clj}{{{b{E`}}}j}{Ebj}{Lfj}={LhEf}>{Gf{{Bf{{Ab{Dh}}}}}}{Lj{{Bf{{Ab{Dh}}}}}}{Gl{{Bf{{Ab{Dh}}}}}}{Cj{{Bf{{Ab{Dh}}}}}}{Gj{{Bf{{Ab{Dh}}}}}}{Ll{{Bf{{Ab{Dh}}}}}}{Ln{{Bf{{Ab{Dh}}}}}}{cc{}}{Gd{{Bf{{Ab{Dh}}}}}}{M`{{Bf{{Ab{Dh}}}}}}{Gb{{Bf{{Ab{Dh}}}}}}{Mb{{Bf{{Ab{Dh}}}}}}444444{GjCj}{GdCj}{MbCj}{GbCj}8888888{HjHh}999{MdAh}:{{{b{E`}}}Ah}{jAh}{nAh}={Cn{{Bf{{Ab{Bd}}}}}}``{{jc{Bf{{Ab{Bd}}}}Mf}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}`{{AnjB`}j}{{jc}j{{Aj{j}}}}{{Anjj}j}{{jIhIh}j}{{AljB`}j}43{Ffj}{{{b{Jd}}{b{{Mh{Cn}}}}Mj{b{Df}}{b{Df}}}{{Bl{Df}}}}{{{b{Bd}}{b{{Mh{Cn}}}}Mj{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Dd}}}Ih}{{{b{Dh}}}{{Bl{{Bf{{Ab{Bd}}}}}}}}{{{b{Kl}}{b{{Mh{Cn}}}}}{{Af{{Ab{{Mh{Cn}}}}Ad}}}}99{{{b{h}}}B`}{{{b{Dl}}{b{Cdc}}}fMl}{{jEbEbEbEb}j}{{{b{j}}{b{Cdc}}}fMl}{{{b{G`}}{b{Cdc}}}fMl}{{{b{Ef}}{b{Cdc}}}fMl}{{{b{Gb}}{b{Cdc}}}fMl}{{{b{Gd}}{b{Cdc}}}fMl}{{{b{Gf}}{b{Cdc}}}fMl}{{{b{Gh}}{b{Cdc}}}fMl}{{{b{Gj}}{b{Cdc}}}fMl}{{{b{Gl}}{b{Cdc}}}fMl}{{{b{Cj}}{b{Cdc}}}fMl}{{{b{Hb}}{b{Cdc}}}fMl}{{{b{Hd}}{b{Cdc}}}fMl}{{{b{Hf}}{b{Cdc}}}fMl}{{{b{Hh}}{b{Cdc}}}fMl}{{{b{Hj}}{b{Cdc}}}fMl}{{{b{Hl}}{b{Cdc}}}fMl}{{{b{Hn}}{b{Cdc}}}fMl}{{{b{Ah}}{b{Cdc}}}fMl}{{Anj}j}{{j{Bl{Ih}}}j}{{j{Bl{j}}{Bl{Ih}}B`B`}j}``{jj}`{cj{{Bb{{A`{Cl}}}}}}{{}Ih}000000000000000000000000000000000`{{jjClCn}j}{{jjj}j}{{jMn}j}{{jj}j}{{}c{}}000000000000000000000000000000000{{{b{j}}}}{N`An}{AnAn}{h{{Af{{`{Nb}}Ad}}}}{{{b{Ef}}}B`}{{jccNd}j{{Aj{j}}}}{{{b{h}}}B`}{{{b{h}}B`}B`}3???{{jc}j{{Aj{j}}}}{jj}0000000330{{AljB`}j}{{AnjB`}j}{lj}{Nfj}{{jB`B`}j}{{}j}{Anj}7107{jAn}{cjNh}{{jIj}j}:;;:;;{{Nfc}j{{Bn{{b{n}}}{{Bj{{Af{nAd}}}}}}C`Cb}}{{jc{Bf{{Ab{Bd}}}}}j{{Bn{Bh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{j{b{Cdc}}{b{Cd}}}{{Af{jAd}}}{{Ch{j{b{Cd}}}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}{Bl{{b{n}}}}}{{Af{DfAd}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{Cn}}}{{Bj{Cn}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}C`Cb}}{{jc}j{{Ch{j}{{Bj{j}}}}}}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{Df}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}{{Nf{Ab{Bn}}}j}{c{{Bf{{Ab{Bd}}}}}{{Bn{{b{{A`{Df}}}}}{{Bj{{Af{DfAd}}}}}}C`Cb}}:{{ce{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}{{Bb{{A`{j}}}}}}{{jc{b{{A`{j}}}}{Bf{{Ab{Bd}}}}}j{{Bn{{b{Cd{A`{Bh}}}}}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jCj{b{{A`{j}}}}B`{Bl{Nl}}}j}2{{{b{Dd}}}{{Af{DfAd}}}}{{jNnB`}j}1111{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}42104321{jh}```54321```2`{{jj}}543{jNf}`44`{j}{{jc}j{{Aj{j}}}}0;{{{b{{A`{Df}}}}}Dd}{c{{Bf{c}}}{}}{{jjj}Gn}{{}H`}{jAh}{{n{Dn{Df}}{Bf{{Ab{Bd}}}}c}F`Dh}{{{b{j}}{b{Cd{O`{{b{j}}}}}}}f}{{j{b{Cd{O`{j}}}}}f}>>{Clj}?``9{{Fjc}j{{Aj{j}}}}{{Fnc}j{{Aj{j}}}}{{{b{h}}}{{Af{nAd}}}}{{je}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{je{Bl{{Ob{eD`}}}}Hj}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jj}j}{jj}0{{jjId}j}{{}j}{h{{Af{{Dn{j}}Ad}}}}{{jc}j{{Aj{j}}}}{{Nf{b{E`}}}j}05`{{j{Dn{Ij}}{Bl{c}}B`B`B`}j{{Il{n}}}}{{jIh{Bl{c}}B`B`B`}j{{Il{n}}}}{{{b{E`}}jOd}j}{{jjOd}j}9{{jOf{Bl{Eb}}}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jB`}j}{{jj}}{{le}j{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{cj}j{{Aj{j}}}};{{jcc}j{{Aj{j}}}}{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{jcc{Bl{c}}{Bl{Cn}}}j{{Aj{j}}}}{{j{b{{A`{Cl}}}}Hl}j}`{Alj}{Anj}{jj}00{{jOh}j}{{jjHb}j}0{{j{Ab{Bn}}{Bf{{Ab{Bd}}}}Oj}j}{{jIhc}j{{Ch{{b{Cd{On{Ol}}}}}{{Bj{{Bl{Ij}}}}}}C`CbA@`}}{{jOj}j}{{jjA@b}j}101010{{jOdIjOj}j}{{jjOdIjA@b}j}{{jIhB`}j}434343{{{b{h}}}{{Dn{n}}}}{{jLb}j}{{jEl}j}``{{}{{Bf{{Ab{Bd}}}}}}{{jjB`B`{Bl{Eb}}}j}{{AnjB`B`{Bl{Eb}}}j}01{{jcA@d}j{{Aj{j}}}}``{{{b{Dl}}c}AfA@f}{{{b{j}}c}AfA@f}{{{b{G`}}c}AfA@f}{{{b{Ef}}c}AfA@f}{{{b{{Bf{{Ab{Jh}}}}}}c}AfA@f}{{{b{{Bf{{Ab{Bd}}}}}}c}AfA@f}{{{b{{Bf{{Ab{Dh}}}}}}c}AfA@f}{{{b{{Bf{{Ab{En}}}}}}c}AfA@f}{{{b{{Bf{Jj}}}}c}AfA@f}{{{b{Gb}}c}AfA@f}{{{b{Gd}}c}AfA@f}{{{b{Gf}}c}AfA@f}{{{b{Gh}}c}AfA@f}{{{b{Gj}}c}AfA@f}{{{b{Gl}}c}AfA@f}{{{b{Cj}}c}AfA@f}{{{b{Hb}}c}AfA@f}{{{b{Hd}}c}AfA@f}{{{b{Hf}}c}AfA@f}{{{b{Hh}}c}AfA@f}{{{b{Hj}}c}AfA@f}{{{b{Hl}}c}AfA@f}{{{b{Hn}}c}AfA@f}{{{b{Ah}}c}AfA@f}{{Anc}j{{Aj{j}}}}0{{jA@h}j}1{{Alj}j}{{Anj}j}{{jj}j}{{jce}j{{Aj{j}}}{{Aj{j}}}}{jj}{{j{Bl{Eb}}}j}111{{jB`}j}{{Anjj}j}4{{AlD`}j}{{AnD`}j}{{jD`}j}{{jeDb}j{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{jjIdB`}j}8{{AlId}j}{{AnId}j}{{jId}j}{jA@j}`{{jCn}j}`{jl}{{jj}}{{AhAh}}{{Nf{b{E`}}}j}0{{{b{E`}}}j}{Alj}{Anj}{jj}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}{{}{{Bf{{Ab{Bd}}}}}}{EfEf}{{Anj}j}{{j{Bl{Ih}}}j}55{{jjj}j}{{Fhc}Fj{{Aj{j}}}}{{Flc}Fn{{Aj{j}}}}{{jjInJ`}j}```{{AnIh}j}{{{b{j}}{b{{Mh{Cn}}}}Mj}{{Af{DfAd}}}}={Nfj}{bc{}}00000000000000000000000000={{{b{Dd}}}{{Af{DfAd}}}}{bMd}00000000{{Al{Bl{{Ab{Bn}}}}}{{Af{jAd}}}}{{AnA@l{Bl{{Ab{Bn}}}}Ih}j}5{{jj}j}{{jcg{Dn{B`}}}j{{Aj{j}}}{{Aj{j}}Eh}{{Bb{{A`{e}}}}}}{c{{Af{e}}}{}{}}000000000000000000000000000000000{{}{{Af{c}}}{}}000000000000000000000000000000000{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{Cn}}}{{Bj{{Af{CnAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{{A`{{b{Cn}}}}}}}{{Bj{{Af{CnAd}}}}}}}}{{jc}{{Af{jAd}}}{{Ch{j}{{Bj{{Af{jAd}}}}}}}}{{{b{Dd}}c}{{Af{DfAd}}}{{Nj{{b{Df}}}{{Bj{{Af{DfAd}}}}}}}}{{{b{Dh}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{En}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{Bd}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{b{{Af{A@nAA`}}}}00000000{bAAb}000000000000000000000000000000000`{hj}{{Anc}j{{Aj{j}}}}{Alj}{Anj}{jj}02100{{jB`B`{b{E`}}B`}j}`{{AlId}j}{{AnId}j}{{jId}j}`{{}c{}}000000000000000000000000000000000`{cFh{{Aj{j}}}}{{Fjc}Fl{{Aj{j}}}}{{Fnc}Fl{{Aj{j}}}}`{{Gnj}Gn}0{{H`j}H`}{{{b{Dd}}Cn}{{Af{DfAd}}}}{{l{Dn{j}}}{{Af{jAd}}}}{{H`jjj}H`}{{Gnjjj}Gn}1545445454{{{b{Dd}}{Bl{Cn}}}{{Af{DfAd}}}}{{{b{Dd}}}{{Af{DfAd}}}}76{{GnJb}Gn}{{Gn{Bl{n}}}Gn}89{{jc}j{{Aj{j}}}}``````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{EdB`}j}{Edj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{Edj}j}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{Ihf}3{cc{}}87{{}Ih}{{}c{}}96{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAb}3``{{Jnj{Ej{B`}}{Dn{El}}AAd}j}{Jnj}=<{{JnJb}j}1{{JnjJb}j}{{Jnn}j}333=<;3:3983333333333{{Jnj}j}44{{Jn{Bl{n}}jAAf}j}15{{Jn{b{E`}}}j}65066666662:98;6656``````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAh}}}AAh}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAh}}}Jf}{Ihf}{{{b{AAh}}{b{AAh}}}B`}{{{b{AAh}}{b{CdKh}}}{{Af{fKj}}}}0{cc{}}{{{b{AAh}}{b{Cdc}}}fMl}{{}Ih}{{}c{}}{{{b{AAh}}c}AfA@f}{bc{}}{bMd}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@nAA`}}}}{bAAb}7````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAj}}}AAj}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAj}}}Jf}{Ihf}{{{b{AAj}}{b{AAj}}}B`}{{{b{AAj}}{b{CdKh}}}{{Af{fKj}}}}0{cc{}}{{{b{AAj}}{b{Cdc}}}fMl}{{}Ih}{{}c{}}{{{b{AAj}}c}AfA@f}{bc{}}{bMd}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@nAA`}}}}{bAAb}7````````````````{{bd}f}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{{b{AAl}}}AAl}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{c{{Af{AAl}}}Jf}{Ihf}{{{b{AAl}}{b{AAl}}}B`}{{b{b{c}}}B`{}}00{{{b{AAl}}{b{CdKh}}}{{Af{fKj}}}}0{cc{}}{{{b{AAl}}{b{Cdc}}}fMl}{{}Ih}{{}c{}}{{{b{AAl}}c}AfA@f}{bc{}}{bMd}{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{b{{Af{A@nAA`}}}}{bAAb}7``{{}j}{c{{Af{jAd}}}{{Bb{{A`{j}}}}}}`0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{jjClCn}j}{{cDb}j{{Bb{{A`{j}}}}}}{cj{{Aj{j}}}}{{{Dn{j}}}j}{{{b{E`}}}j}{{jCn}j}{{{b{{A`{j}}}}}j}{cj{{Aj{n}}}}{c{{AB`{{Dn{AAn}}}}}{{ABd{}{{I`{ABb}}}}}}{ej{{Aj{n}}}{{Ib{}{{I`{c}}}}}}{{cABf}{{AB`{ABb}}}{{Bb{{A`{ABb}}}}}}{{eB`}{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}11{e{{Af{jAd}}}{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{c{b{E`}}B`}j{{Bb{{A`{j}}}}}}{{jjId}j}{{jceB`}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{jjInJ`}j}0{Gnj}{{jjInJ`{Bl{Jb}}{Bl{n}}}j}0``{{{b{Cn}}}j}{cj{{Bb{{A`{Cn}}}}}}{H`j}{{jce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{{b{E`}}c}{{Af{jAd}}}{{Bb{{A`{j}}}}}}``{cj{{Bb{{A`{Cl}}}}}}{{jjClCn}j}{{jjj}j}{jj}0{{jjc{Bf{{Ab{Bd}}}}}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`Cb}}{{{b{E`}}}j}00```0````2{{jjId}j}{{{b{E`}}jOd}j}{{ce}j{{Bn{BhBh}{{Bj{{Af{{Bl{Bh}}Ad}}}}}}C`CbEh}{{Bb{{A`{j}}}}}}{{cj}j{{Aj{j}}}}{{jjHb}j}0``{{jjIdB`}j}6{{jjInJ`}j}0``````````{{bd}f}{b{{b{c}}}{}}00{{{b{Cd}}}{{b{Cdc}}}{}}00{{{b{Nn}}{b{Cd{A`{Bh}}}}}{{Af{{Bl{Bh}}Ad}}}}{{{b{ABh}}AAn}{{Af{AAnAd}}}}{{{b{ABh}}}ABh}{{b{b{Cdc}}}f{}}{bf}{Ih{{b{c}}}{}}00{Ih{{b{Cdc}}}{}}00{c{{Af{ABh}}}Jf}{Ihf}00{{{b{ABh}}{b{ABh}}}B`}{{b{b{c}}}B`{}}00{{{b{ABh}}{b{CdKh}}}{{Af{fKj}}}}{cc{}}00{{{ABl{ABj}}}ABh}{{{b{ABn}}{b{{Mh{Cn}}}}Mj{b{{A`{Df}}}}}{{Af{DfAd}}}}{{{b{Nn}}}{{Bl{{Bf{{Ab{Bd}}}}}}}}{{}Ih}00{{}c{}}00{{{ABl{ABj}}{Bl{Cn}}B`B`}Nn}{{{Bl{Cn}}}ABn}{{{b{ABh}}c}AfA@f}{bc{}}{c{{Af{e}}}{}{}}00{{}{{Af{c}}}{}}00{{{b{Nn}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{{{b{ABn}}{b{Cd{Dn{Id}}}}}{{Af{fAd}}}}{bAAb}00999`{{A@jB`}j}{A@jj}{b{{b{c}}}{}}{{{b{Cd}}}{{b{Cdc}}}{}}{{A@jjB`}j}{{A@jj}j}1{Ih{{b{c}}}{}}{Ih{{b{Cdc}}}{}}{Ihf}3{{A@jjIh}j}4{{A@j{b{E`}}}{{Af{jAd}}}}65{cc{}}6;:{{}Ih}{{}c{}}{{A@j{b{E`}}B`}j}{{A@j{Bl{Cn}}{Bl{Ih}}}j}:>>{{A@jIhAC`}j}0{{A@jjjB`}j}0{{A@jjjB`Cl}j}{A@jj}{{A@jjj}j}?;;?;??????{{A@jCnHdj}j}{{A@jj}j}{{A@jHd}j}{{A@j{Bl{Jb}}{Bl{n}}Hdj}j}{{A@jIh}j}{{A@jjB`}j}7377{c{{Af{e}}}{}{}}{{}{{Af{c}}}{}}{bAAb}{{}c{}}8`````````````````````````````````{{bd}f}00000000{{ABbc}{{AB`{AAn}}}{{Bn{ACb{b{Cd{ACf{ACd}}}}{b{Cd{ACf{ACh}}}}}{{Bj{{AB`{f}}}}}}}}{{ABbB`}ABb}{{ACjc}ABb{{Bb{{A`{j}}}}}}{{}ACl}{{ACnB`}ACn}{{{Ab{AD`}}ADb}{{AB`{ABb}}}}{{ABbABbcc}ABb{{Aj{j}}}}{{ACjcADd}ABb{{Bn{AAn}{{Bj{{AB`{AAn}}}}}}C`Cb}}{{AClACl}ACl}{{{b{CdACl}}ACl}f}10{{{b{ACl}}}Lb}021{b{{b{c}}}{}}000000000{{{b{Cd}}}{{b{Cdc}}}{}}000000000{{ABbADfcDb}ABb{{Bb{{A`{j}}}}}}{ABbABb}``{{{b{ADh}}}f}{{ABb{ADj{{b{E`}}Cn}}B`}ABb}{{ABbCnB`}ABb}{{{b{ADh}}}ADh}{{{b{ABb}}}ABb}{{{b{ACj}}}ACj}{{{b{ADb}}}ADb}{{{b{ADl}}}ADl}{{{b{ADn}}}ADn}{{{b{AE`}}}AE`}{{{b{AEb}}}AEb}{{{b{ACl}}}ACl}{{b{b{Cdc}}}f{}}00000000{bf}00000000{{{b{AEd}}}{{Bl{{b{AEf}}}}}}0{{{b{ADl}}}{{Bl{{b{AEf}}}}}}{{{b{AE`}}}{{Bl{{b{AEf}}}}}}``{{ACnAEh}ACn}{ABb{{AB`{AAn}}}}{ABb{{AB`{ADh}}}}{{{b{CdABb}}}{{AB`{ADd}}}}{AClACl}{{{b{AEd}}{Dn{ABb}}}{{AB`{ABb}}}}0{{{b{ADl}}{Dn{ABb}}}{{AB`{ABb}}}}{{{b{ACl}}ACl}B`}{ABbABb}{{ABbABb{Bl{n}}}ABb}{{}ABb}{{}ADb}{{}ADn}{{}AEb}{{}ACl}{Ih{{b{c}}}{}}000000000{Ih{{b{Cdc}}}{}}000000000{{{b{ABb}}}{{AB`{Md}}}}000{{AClACl}ACl}{Ihf}0{{{b{CdADh}}}f}1{{ABbe}ABb{{Aj{Ah}}}{{Ib{}{{I`{c}}}}}}22222220{{ABb{Bl{{Dn{j}}}}}ABb}8{{{b{ABb}}B`}{{AB`{Md}}}}{{ABbe}ABb{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{{b{CdACl}}c}f{{Ib{}{{I`{ACl}}}}}}{{{b{ADh}}}{{Bl{{AB`{AAn}}}}}}{{ABbIh}{{AB`{AAn}}}}{{{b{ADh}}}{{AB`{AAn}}}}{{ABbc}ABb{{Aj{j}}}}0{{ABbj}ABb}{ACnABb}{AEd{{AB`{ABb}}}}0{ADl{{AB`{ABb}}}}{AE`{{AB`{ABb}}}}210{ABbABb}{{{b{ACl}}{b{CdKh}}}{{Af{fKj}}}}0000{{ACnB`}ACn}{cc{}}0{JhABb}{ACjABb}22222222{Lb{{Bl{ACl}}}}{LbACl}00{cACl{{Ib{}{{I`{ACl}}}}}}{{{b{E`}}}{{Bl{ACl}}}}{{ABbABbcc}ABb{{Aj{j}}}}{{{b{ABb}}}ACl}{{{b{AEd}}}B`}0{{{b{ADl}}}B`}`{{ABbe}ACj{{Aj{j}}Eh}{{Bb{{A`{c}}}}}}{{ABbjcAEj}ACj{{Bb{{A`{j}}}}}}1{{ACj{Bl{Ih}}}ABb}``{{ACnAEl}ACn}```{{}Ih}0000000008{{{b{CdACl}}ACl}f}{{AClACl}ACl}{{{b{ACl}}ACl}B`}{{}c{}}000000000{ACl}{{{b{ACl}}}B`}0{{{b{ACl}}}{{AEn{ACl}}}}{{{b{ACl}}}{{AF`{ACl}}}}{{ABbABbccAFb}ABb{{Bb{{A`{j}}}}}}{ABbACn}{{ACnB`}ACn}{{ACn{Dn{j}}}ABb}{ABbABb}{AFdABb}1{{ABbABbcc}ABb{{Aj{j}}}}{{ACnc}ACn{{Bb{{A`{j}}}}}}{{ABbADf}ABb}``{{AE`B`}AE`}`{{ABbcAFf{Bl{{Ab{Kl}}}}{Bl{{b{E`}}}}}ABb{{Bn{AAn}{{Bj{{AB`{AAn}}}}}}C`Cb}}{{ABbABhAFf{Bl{ADd}}B`}ABb}777{{ABbABbc}{{AB`{ABb}}}{{Aj{n}}}}8{{{b{AEd}}}{{Bl{Ih}}}}{{{b{ADl}}}{{Bl{Ih}}}}{{{b{AE`}}}{{Bl{Ih}}}}````>{cADl{{Bb{AFh}}}}{cAE`{{Bb{AFh}}}}{{{Ab{{A`{AFj}}}}}ADl}{{{Ab{{A`{AFj}}}}}AE`}{AFlADl}{AFlAE`}{AClACl}{ABbABb}{{ACnc}ACn{{Bb{{A`{j}}}}}}{{ABb{b{Cd{ACf{ACd}}}}{b{Cd{ACf{ACh}}}}}{{AB`{ACb}}}}``{ABb{{AB`{{Ob{AAnAAn}}}}}}{{ABbjOd}ABb}{{{b{AEd}}}B`}{{{b{ADl}}}B`}{{{b{AE`}}}B`}``{{{b{CdACl}}ACl}f}{{ABbei}ABb{{Bb{E`}}}{{Ib{}{{I`{c}}}}}{{Bb{E`}}}{{Ib{}{{I`{g}}}}}}98{{ABbjcOh}ACj{{Bb{{A`{j}}}}}}{{{b{AEd}}}{{Bl{{b{AFn}}}}}}{{{b{ADl}}}{{Bl{{b{AFn}}}}}}{{{b{AE`}}}{{Bl{{b{AFn}}}}}}```{{AG`AGbB`}ABb}{{cADn}{{AB`{ABb}}}{{Bb{AFh}}}}{{{Ab{{A`{AFj}}}}ADn}{{AB`{ABb}}}}{{AFlADn}{{AB`{ABb}}}}{{cAEb}{{AB`{ABb}}}{{Bb{AFh}}}}{{{Ab{{A`{AFj}}}}AEb}{{AB`{ABb}}}}{{AFlAEb}{{AB`{ABb}}}}`{{}ACl}{{{b{CdABb}}{b{Cd{ACf{ACd}}}}{b{Cd{ACf{ACh}}}}}{{AB`{ADd}}}}{{ABbc}ABb{{Bb{{A`{j}}}}}}0{{ABbABbcc}ABb{{Aj{j}}}}{{{b{CdACl}}AClB`}f}{{{b{ABb}}{ACf{ACd}}{ACf{ACh}}}f}{{ABbc}ABb{{Aj{j}}}}{{ABbce}ABb{{Aj{j}}}{{Aj{j}}}}{{ABbcAGd}{{AB`{f}}}{{Bb{AFh}}}}{{ABbcAGf}{{AB`{f}}}{{Bb{AFh}}}}{{ABbMd{Bl{AEf}}AGf}{{AB`{f}}}}{{ABbcAGh}{{AB`{f}}}{{Bb{AFh}}}}{{ABbcAGj}{{AB`{f}}}{{Bb{AFh}}}}{{ABbMd{Bl{AEf}}AGj}{{AB`{f}}}}`{{ABbClADf}ABb}{{ABbcDb}ABb{{Il{n}}}}{{ABbcDb}ABb{{Bb{{A`{j}}}}}}{{{b{AEd}}}{{b{AFl}}}}{{{b{ADl}}}{{b{AFl}}}}{{{b{AE`}}}{{b{AFl}}}}{{ABbId}ABb}{{AClACl}ACl}{{{b{CdACl}}ACl}f}{{ACnc}ACn{{Aj{n}}}}{ABbABb}3{{ABbADf}ABb}{{ACj{Bl{Ih}}}ABb}{ABb{{AB`{AGl}}}}0{{{b{ABb}}B`}{{AB`{Md}}}}{bc{}}000000007{{ABbADfcDb}ABb{{Bb{{A`{j}}}}}}{c{{Af{e}}}{}{}}000000000{{}{{Af{c}}}{}}000000000{bAAb}000000000<{{ABb{Bl{{Dn{Md}}}}AGn}ABb}{{ABb{Bl{e}}AGn}ABb{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABb{Bl{{Dn{n}}}}AGn}ABb}1{{ABbe}ABb{{Aj{Ah}}Eh}{{Bb{{A`{c}}}}}}{{ABbHn}ABb}`{{ACnAH`}ACn}{{ABbId}ABb}{{}c{}}000000000{{ACnABb}ACn}{{AE`{Bl{AHb}}}AE`}{{ADlB`}ADl}{{ADl{Bl{AEf}}}ADl}{{AE`{Bl{AEf}}}AE`}{{ABbB`}ABb}{{ABbj}ABb}{{ABbc}ABb{{Bb{{A`{j}}}}}}022{{ADl{Bl{n}}}ADl}{{ABbc}ABb{{Bb{{A`{ABb}}}}}}7{{ADl{Bl{ADd}}}ADl}{{ADlAHd}ADl}{{ADlId}ADl}:::{{AE`B`}AE`}5{{AE`{Bl{n}}}AE`}{{ADl{Bl{Ih}}}ADl}>=={{AEdc}AEd{{Aj{{Bl{Ih}}}}}}1{{ADlc}ADl{{Aj{{Bl{Ih}}}}}}{{AE`{Bl{Ih}}}AE`}{{AE`c}AE`{{Aj{{Bl{Ih}}}}}}>{{ADl{Bl{AHf}}}ADl}{{ABbACl}ABb}{{AEd{Ab{{A`{AFj}}}}}AEd}0{{ABbB`}ABb}0{{ADl{Bl{Id}}}ADl}{{ADlB`}ADl}{{AEdB`}AEd}1=3{{AEdc}AEd{{Aj{{Bl{AFn}}}}}}{{ABbc{Bl{ADf}}}ABb{{Aj{n}}}}{{ADl{Bl{AFn}}}ADl}{{ADlc}ADl{{Aj{{Bl{AFn}}}}}}{{AE`c}AE`{{Aj{{Bl{AFn}}}}}}{{AE`{Bl{AFn}}}AE`}{{ADl{Bl{ADd}}}ADl}{{AE`{Bl{ADd}}}AE`}{{ADlc}{{AB`{ADl}}}{{Bn{AG`}{{Bj{{AB`{AG`}}}}}}}}1{{ADlId}ADl}={{ADlIh}ADl}0>{{AEdAFl}AEd}{{ADlAFl}ADl}{{AE`AFl}AE`}{{ABbB`}ABb}{{ADlB`}ADl}01{ABbABb}{{{b{AAn}}e{Bl{i}}{Bl{m}}B`{Bl{j}}{Bl{{b{E`}}}}}{{AB`{AAn}}}{{Aj{n}}}{{Ib{}{{I`{c}}}}}{{Aj{n}}}{{Ib{}{{I`{g}}}}}{{Aj{n}}}{{Ib{}{{I`{k}}}}}}0```````````````````````````````````````````````````````````````````````````````````{{bd}f}000000000000000{{{b{In}}Cl{Bl{{b{AHh}}}}}{{Af{ClAd}}}}00{{{b{AD`}}}B`}00{{{b{AD`}}}{{b{Dj}}}}`{b{{b{c}}}{}}00000000000000000{{{b{Cd}}}{{b{Cdc}}}{}}00000000000000000{{{b{AEj}}}AEj}{{{b{Oh}}}Oh}{{{b{In}}}In}{{{b{AFb}}}AFb}{{{b{AEl}}}AEl}{{{b{AH`}}}AH`}{{{b{AGd}}}AGd}{{{b{AGf}}}AGf}{{{b{AGh}}}AGh}{{{b{AHj}}}AHj}{{{b{Of}}}Of}{{{b{AGj}}}AGj}{{{b{AHl}}}AHl}{{{b{AHn}}}AHn}{{{b{ABf}}}ABf}{{{b{Jh}}}Jh}{{b{b{Cdc}}}f{}}000000000000000{bf}000000000000000``{{{b{In}}{b{In}}}AI`}`{{b{b{c}}}AI`{}}``{{{b{Jh}}}{{Af{{Ab{{Mh{Cn}}}}Ad}}}}`{{{b{In}}}Cl}{{{b{In}}}B`}{{}AEj}{{}Oh}{{}AFb}{{}AH`}{{}AGd}{{}AGf}{{}AGh}{{}Of}{{}AGj}{{}AHn}{{}ABf}{{}Jh}{Ih{{b{c}}}{}}00000000000000000{Ih{{b{Cdc}}}{}}00000000000000000`{{{b{Jh}}}{{Af{MdAd}}}}0{c{{Af{AEj}}}Jf}{c{{Af{Oh}}}Jf}{c{{Af{In}}}Jf}{c{{Af{AFb}}}Jf}{c{{Af{AEl}}}Jf}{c{{Af{AH`}}}Jf}{c{{Af{AGd}}}Jf}{c{{Af{AGf}}}Jf}{c{{Af{AGh}}}Jf}{c{{Af{AHj}}}Jf}{c{{Af{Of}}}Jf}{c{{Af{AGj}}}Jf}{c{{Af{AHl}}}Jf}{c{{Af{AHn}}}Jf}{c{{Af{ABf}}}Jf}{c{{Af{Jh}}}Jf}`{{{b{Jh}}}{{Af{{`{Nb}}Ad}}}}{Ihf}00000000000000000{{{b{AEj}}{b{AEj}}}B`}{{{b{Oh}}{b{Oh}}}B`}{{{b{In}}{b{In}}}B`}{{{b{AFb}}{b{AFb}}}B`}{{{b{AEl}}{b{AEl}}}B`}{{{b{AH`}}{b{AH`}}}B`}{{{b{AGd}}{b{AGd}}}B`}{{{b{AGf}}{b{AGf}}}B`}{{{b{AGh}}{b{AGh}}}B`}{{{b{AHj}}{b{AHj}}}B`}{{{b{Of}}{b{Of}}}B`}{{{b{AGj}}{b{AGj}}}B`}{{{b{AHl}}{b{AHl}}}B`}{{{b{AHn}}{b{AHn}}}B`}{{{b{ABf}}{b{ABf}}}B`}{{b{b{c}}}B`{}}00000000000000000000000000000000000`{{{b{AEj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Oh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{In}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{AD`}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AFb}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AEl}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{AH`}}{b{CdKh}}}{{Af{fKj}}}}0{{{b{AGd}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AGf}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AGh}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AHj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{Of}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AGj}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AHl}}{b{CdKh}}}{{Af{fKj}}}}{{{b{AHn}}{b{CdKh}}}{{Af{fKj}}}}{{{b{ABf}}{b{CdKh}}}{{Af{fKj}}}}`{cc{}}0000{AElAFb}1111111111111`{{{b{AHl}}}Cn}{{{b{AIb}}{Dn{Bh}}{b{AEj}}}{{Af{{Ob{Bh{Dn{Bh}}AId}}Ad}}}}{{{b{AEj}}{b{Cdc}}}fMl}{{{b{Oh}}{b{Cdc}}}fMl}{{{b{In}}{b{Cdc}}}fMl}{{{b{AFb}}{b{Cdc}}}fMl}{{{b{AEl}}{b{Cdc}}}fMl}{{{b{AH`}}{b{Cdc}}}fMl}{{{b{AGd}}{b{Cdc}}}fMl}{{{b{AGf}}{b{Cdc}}}fMl}{{{b{AGh}}{b{Cdc}}}fMl}{{{b{AHj}}{b{Cdc}}}fMl}{{{b{Of}}{b{Cdc}}}fMl}{{{b{AGj}}{b{Cdc}}}fMl}{{{b{AHl}}{b{Cdc}}}fMl}{{{b{AHn}}{b{Cdc}}}fMl}{{{b{ABf}}{b{Cdc}}}fMl}``````{{}Ih}00000000000000000{{}c{}}00000000000000000{{{b{Jh}}}}{{{b{AEl}}}B`}{{{b{In}}{Bl{{b{E`}}}}}B`}{{{b{In}}}B`}{{{b{AHl}}}B`}{{{b{AH`}}{b{AEl}}}{{Af{fAd}}}}2``{Nhj}{Inj}{AIfj}{AHlj}````{AHlAHl}`{{{b{In}}}Cl}8{{InCl}In}`1{{{b{AH`}}}B`}{In};{ClIn}{AElAFb}{{{b{AD`}}AIh}{{Af{{Bl{AAn}}Ad}}}}````{{{b{E`}}}In}`{{{b{In}}{b{In}}}{{Bl{AI`}}}}```{Jh{{Af{{Dn{Id}}Ad}}}}`{{{b{AIb}}{Dn{Bh}}{b{Oh}}}{{Af{{Ob{Bh{Dn{Bh}}AId}}Ad}}}}`{{{b{AD`}}AIh}{{Af{AAnAd}}}}{{{b{AD`}}{Bl{Ih}}}{{Af{{Ab{{Mh{Cn}}}}Ad}}}}`{{{b{AEj}}c}AfA@f}{{{b{Oh}}c}AfA@f}{{{b{In}}c}AfA@f}{{{b{AFb}}c}AfA@f}{{{b{AEl}}c}AfA@f}{{{b{AH`}}c}AfA@f}{{{b{AGd}}c}AfA@f}{{{b{AGf}}c}AfA@f}{{{b{AGh}}c}AfA@f}{{{b{AHj}}c}AfA@f}{{{b{Of}}c}AfA@f}{{{b{AGj}}c}AfA@f}{{{b{AHl}}c}AfA@f}{{{b{AHn}}c}AfA@f}{{{b{ABf}}c}AfA@f}{{{b{Jh}}c}AfA@f}`{{{b{AFb}}}B`}````{{{b{AFb}}}{{b{n}}}}`{Jh{{Af{AGlAd}}}}{{{b{AHl}}}{{Bl{AIj}}}}{bc{}}000000000000000{bMd}00`{{{b{AGf}}c}{{AIl{c}}}AIn}{{{b{AGj}}c}{{AJ`{c}}}AIn}{{{b{In}}Cl{Bl{{b{AHh}}}}ceg}{{Af{ClAd}}}{{Bn{Cl}{{Bj{Cl}}}}}{{Bn{Cl}{{Bj{AJb}}}}}{{Bn{AJb}{{Bj{Cl}}}}}}{{{b{In}}Cl{Bl{{b{AHh}}}}}{{Af{ClAd}}}}00{c{{Af{e}}}{}{}}00000000000000{AIj{{Af{AHlAd}}}}111{{}{{Af{c}}}{}}00000000000000000{b{{Af{A@nAA`}}}}00{bAAb}00000000000000000`{{}c{}}00000000000000000{{{b{In}}}Cl}{{{b{In}}}B`}{{AFbAEh}AFb}`{{AFb{Bl{n}}}AFb}{{{b{AGf}}AAnc}{{Af{fAd}}}AIn}{{{b{AGj}}AAnc}{{Af{fAd}}}AIn}```````````````````````````````````````````````````````","D":"GJd","p":[[1,"reference"],[5,"Private",3583],[1,"unit"],[5,"MetaNameSpace",5,3584],[6,"Expr",5,3585],[5,"StructNameSpace",5,3586],[5,"PlSmallStr",3587],[1,"slice"],[5,"Arc",3588],[6,"PolarsError",3589],[6,"Result",3590],[6,"Selector",5,3591],[10,"Into",3592],[5,"ArrayNameSpace",5,3593],[5,"ListNameSpace",5,3594],[1,"bool"],[10,"AsRef",3592],[10,"FunctionOutputField",5,3595],[5,"SpecialEq",5,3595],[6,"Column",3596],[17,"Output"],[6,"Option",3597],[10,"Fn",3598],[10,"Send",3599],[10,"Sync",3599],[0,"mut"],[6,"VisitRecursion",3600],[10,"FnMut",3598],[6,"FunctionExpr",5,3601],[1,"i64"],[6,"DataType",3602],[5,"SortOptions",3603],[5,"SortMultipleOptions",3603],[5,"FieldsMapper",5,3604],[5,"Field",3605],[10,"ColumnsUdf",5,3595],[10,"Any",3606],[6,"AggExpr",5,3585],[5,"Vec",3607],[1,"str"],[1,"u64"],[5,"BinaryNameSpace",1733,3608],[6,"Operator",5,3585],[10,"Clone",3609],[1,"array"],[1,"i32"],[10,"RenameAliasFn",5,3595],[5,"UserDefinedFunction",5,3610],[10,"ColumnBinaryUdf",5,3595],[6,"CastOptions",3611],[5,"CategoricalNameSpace",5,3612],[5,"When",5,3613],[5,"Then",5,3613],[5,"ChainedWhen",5,3613],[5,"ChainedThen",5,3613],[6,"Excluded",5,3585],[6,"BooleanFunction",5,3614],[6,"CategoricalFunction",5,3615],[6,"TemporalFunction",5,3616],[6,"PowFunction",5,3617],[6,"StringFunction",5,3618],[6,"StructFunction",5,3619],[5,"DatetimeArgs",5,3620],[5,"DurationArgs",5,3620],[5,"RollingCovOptions",5,3621],[5,"StrptimeOptions",5,3621],[5,"JoinOptions",5,3621],[6,"WindowType",5,3621],[6,"WindowMapping",5,3621],[6,"NestedType",5,3621],[5,"UnpivotArgsDSL",5,3621],[17,"Item"],[10,"IntoIterator",3622],[1,"u8"],[10,"ExprEvalExtension",5,3623],[1,"usize"],[1,"f64"],[10,"IntoVec",3624],[5,"Duration",2905,3625],[6,"ClosedWindow",3626],[6,"TimeUnit",3627],[10,"BinaryUdfOutputField",5,3595],[10,"Deserializer",3628],[6,"DslPlan",2905,3629],[5,"Series",3630],[6,"NullBehavior",3631],[5,"DateLikeNameSpace",1755,3632],[10,"Sized",3599],[10,"ListNameSpaceExtension",5,3633],[5,"EWMOptions",3634],[6,"FillNullStrategy",3635],[5,"Formatter",3636],[5,"Error",3636],[10,"UdfSchema",5,3637],[1,"i16"],[1,"u16"],[1,"u32"],[1,"f32"],[1,"i8"],[6,"InequalityOperator",3638],[6,"ArrayFunction",3639],[6,"RangeFunction",3640],[6,"ListFunction",3641],[6,"BusinessFunction",3642],[6,"BinaryFunction",3643],[5,"String",3644],[5,"FunctionOptions",3645],[5,"Schema",3646],[6,"Context",3629],[10,"Hasher",3647],[6,"InterpolationMethod",3648],[10,"IntoListNameSpace",5,3633],[10,"Display",3636],[6,"ClosedInterval",3649],[5,"ExprNameNameSpace",5,3650],[10,"Literal",2905,3651],[10,"FnOnce",3598],[5,"SuperTypeOptions",3652],[5,"PythonUdfExpression",2290,3653],[5,"UnitVec",3654],[1,"tuple"],[6,"QuantileInterpolOptions",3655],[5,"RankOptions",2905,3656],[5,"RollingGroupOptions",2905,3657],[5,"RollingOptionsFixedWindow",3658],[5,"Float64Type",3659],[5,"ChunkedArray",3660],[10,"Copy",3599],[5,"RollingOptionsDynamicWindow",3661],[6,"SearchSortedSide",3662],[10,"Serializer",3663],[6,"IsSorted",3664],[5,"StringNameSpace",2352,3665],[6,"ListToStructWidthStrategy",3666],[5,"CompactString",3667],[6,"ToCompactStringError",3667],[5,"TypeId",3606],[6,"Roll",3668],[6,"NonExistent",3669],[6,"RollingFunction",2104,3670],[6,"RollingFunctionBy",2138,3671],[6,"TrigonometricFunction",2171,3672],[5,"DataFrame",3673],[8,"PolarsResult",3589],[5,"LazyFrame",2419],[10,"IntoParallelIterator",3674],[5,"UnionArgs",2905,3645],[5,"PythonFunction",2290,3653],[5,"PyAny",3675],[5,"Py",3676],[5,"PythonGetOutput",2290,3653],[1,"char"],[5,"Node",3677],[6,"IR",3678],[5,"Arena",3677],[6,"AExpr",3679],[5,"LazyGroupBy",2419],[5,"OptFlags",2419,3680],[5,"JoinBuilder",2419],[10,"AnonymousScan",2905,3681],[5,"ScanArgsAnonymous",2419,3682],[8,"SchemaRef",3683],[8,"IdxSize",3684],[5,"InProcessQuery",2419,3685],[8,"PlHashMap",3686],[5,"LazyCsvReader",2419,3687],[5,"ScanArgsIpc",2419,3688],[5,"LazyJsonLineReader",2419,3689],[5,"ScanArgsParquet",2419,3690],[10,"LazyFileListReader",2419,3691],[5,"CloudOptions",3692],[6,"JoinCoalesce",3693],[5,"DynamicGroupOptions",2905,3657],[6,"JoinType",2905,3693],[5,"Iter",3694],[5,"IterNames",3694],[5,"JoinArgs",2905,3693],[10,"IntoLazy",2419],[8,"AllowedOptimizations",2419,3680],[5,"Path",3695],[5,"PathBuf",3695],[6,"ScanSources",3696],[5,"RowIndex",3697],[8,"Schema",3683],[8,"PyObject",3676],[5,"CsvWriterOptions",2905,3698],[5,"IpcWriterOptions",2905,3699],[5,"JsonWriterOptions",2905,3700],[5,"ParquetWriteOptions",2905,3701],[5,"IRPlan",3678],[6,"UniqueKeepStrategy",3673],[6,"JoinValidation",2905,3693],[8,"NonZeroUsize",3702],[6,"CsvEncoding",3703],[6,"NullValues",3703],[6,"Tz",3704],[6,"RankMethod",2905,3656],[6,"LiteralValue",2905,3651],[5,"AnonymousScanOptions",2905,3645],[6,"Ordering",3705],[10,"PolarsTemporalGroupby",2905,3657],[6,"GroupsProxy",3706],[5,"Null",2905,3651],[5,"AnonymousScanArgs",2905,3681],[6,"AnyValue",3707],[5,"IpcWriter",3699],[10,"Write",3708],[5,"ParquetWriter",3709],[5,"NaiveDateTime",3710],[15,"Quantile",1621],[15,"Min",1621],[15,"Max",1621],[15,"IsBetween",2028],[15,"Any",2028],[15,"All",2028],[15,"SortBy",1631],[15,"Filter",1631],[15,"Cast",1631],[15,"Sort",1631],[15,"Gather",1631],[15,"RenameAlias",1631],[15,"Ternary",1631],[15,"Function",1631],[15,"Window",1631],[15,"AnonymousFunction",1631],[15,"Slice",1631],[15,"BinaryExpr",1631],[15,"QCut",2031],[15,"Entropy",2031],[15,"Log",2031],[15,"Hist",2031],[15,"Cut",2031],[15,"Correlation",2031],[15,"Round",2031],[15,"TopK",2031],[15,"TopKBy",2031],[15,"RoundSF",2031],[15,"EwmMeanBy",2031],[15,"Clip",2031],[15,"BackwardFill",2031],[15,"ForwardFill",2031],[15,"Random",2031],[15,"GatherEvery",2031],[15,"ValueCounts",2031],[15,"Rank",2031],[15,"EwmMean",2031],[15,"EwmStd",2031],[15,"EwmVar",2031],[15,"ReplaceStrict",2031],[15,"CumCount",2031],[15,"CumSum",2031],[15,"CumProd",2031],[15,"CumMin",2031],[15,"CumMax",2031],[15,"ConcatHorizontal",2076],[15,"ConcatVertical",2076],[15,"ExtractGroups",2076],[15,"JsonDecode",2076],[15,"PadStart",2076],[15,"PadEnd",2076],[15,"SplitExact",2076],[15,"Contains",2076],[15,"Find",2076],[15,"Replace",2076],[15,"DatetimeFunction",2096],[15,"GroupBy",3528],[15,"Union",3528],[15,"Sort",3528],[15,"Scan",3528],[15,"ExtContext",3528],[15,"DataFrameScan",3528],[15,"IR",3528],[15,"Select",3528],[15,"HStack",3528],[15,"MapFunction",3528],[15,"Cache",3528],[15,"Filter",3528],[15,"Distinct",3528],[15,"Slice",3528],[15,"Sink",3528],[15,"Join",3528],[15,"HConcat",3528],[15,"PythonScan",3528],[15,"Range",3580]],"r":[[8,3585],[22,3593],[31,3595],[33,3614],[38,3615],[39,3612],[43,3613],[44,3613],[48,3595],[50,3595],[69,3620],[79,3620],[89,3585],[94,3585],[95,3623],[96,3650],[104,3604],[105,3650],[115,3601],[116,3595],[122,3595],[137,3633],[153,3621],[165,3594],[166,3633],[181,3584],[200,3621],[207,3585],[218,3617],[230,3595],[241,3621],[250,3591],[262,3595],[270,3618],[277,3621],[279,3619],[280,3586],[288,3616],[290,3613],[310,3637],[313,3621],[316,3610],[321,3613],[324,3621],[325,3621],[369,3711],[373,3712],[380,3712],[383,3713],[387,3714],[389,3715],[404,3716],[406,3716],[412,3717],[413,3718],[415,3714],[417,3613],[490,3719],[497,3718],[500,3714],[588,3712],[589,3711],[590,3711],[591,3720],[592,3720],[593,3720],[602,3721],[604,3712],[608,3712],[613,3715],[614,3620],[615,3715],[616,3715],[766,3714],[768,3711],[769,3711],[770,3620],[865,3714],[907,3712],[910,3720],[982,3714],[1028,3711],[1064,3715],[1065,3715],[1119,3718],[1121,3718],[1131,3714],[1134,3714],[1138,3651],[1148,3713],[1159,3714],[1162,3714],[1169,3718],[1173,3712],[1174,3718],[1177,3712],[1178,3718],[1186,3718],[1190,3712],[1217,3718],[1219,3714],[1232,3721],[1239,3714],[1242,3718],[1246,3712],[1250,3722],[1263,3721],[1264,3721],[1341,3721],[1349,3714],[1355,3718],[1359,3712],[1366,3613],[1369,3715],[1538,3714],[1590,3613],[1733,3608],[1754,3612],[1755,3632],[1828,3614],[1832,3615],[1879,3601],[1941,3617],[1980,3618],[1988,3619],[1993,3616],[2023,3601],[2024,3601],[2025,3601],[2026,3601],[2027,3601],[2098,3615],[2102,3617],[2108,3670],[2142,3671],[2186,3672],[2215,3620],[2216,3620],[2217,3711],[2218,3712],[2220,3712],[2221,3713],[2222,3715],[2223,3716],[2224,3716],[2225,3717],[2226,3718],[2227,3718],[2228,3712],[2229,3711],[2231,3711],[2233,3720],[2236,3720],[2237,3720],[2238,3721],[2239,3712],[2240,3712],[2241,3715],[2242,3715],[2243,3620],[2244,3715],[2245,3715],[2248,3711],[2249,3711],[2250,3620],[2251,3712],[2252,3720],[2255,3711],[2256,3715],[2257,3715],[2258,3718],[2259,3718],[2260,3713],[2261,3718],[2262,3718],[2263,3718],[2267,3718],[2272,3718],[2273,3721],[2274,3718],[2275,3712],[2276,3722],[2277,3721],[2278,3721],[2281,3721],[2282,3718],[2283,3715],[2284,3715],[2290,3653],[2291,3653],[2292,3653],[2293,3653],[2294,3653],[2352,3665],[2413,3610],[2419,3680],[2426,3685],[2429,3687],[2430,3691],[2433,3689],[2435,3680],[2442,3682],[2443,3688],[2444,3690],[2905,3681],[2906,3681],[2907,3645],[2915,3698],[2922,3629],[2923,3625],[2925,3657],[2943,3699],[2945,3693],[2946,3693],[2947,3693],[2948,3700],[2950,3651],[2951,3651],[2957,3651],[2958,3651],[2964,3701],[2965,3657],[2968,3656],[2969,3656],[2971,3657],[2987,3645],[3385,3723]],"b":[[621,"impl-Default-for-SpecialEq%3CArc%3Cdyn+BinaryUdfOutputField%3E%3E"],[622,"impl-Default-for-SpecialEq%3CArc%3Cdyn+ColumnBinaryUdf%3E%3E"],[623,"impl-Default-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[705,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[706,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[707,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[708,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[709,"impl-Deserialize%3C\'a%3E-for-SpecialEq%3CSeries%3E"],[773,"impl-Expr"],[774,"impl-PartialEq-for-Expr"],[777,"impl-PartialEq-for-SpecialEq%3CSeries%3E"],[778,"impl-PartialEq-for-SpecialEq%3CArc%3CT%3E%3E"],[876,"impl-Display-for-Expr"],[877,"impl-Debug-for-Expr"],[879,"impl-Debug-for-Operator"],[880,"impl-Display-for-Operator"],[882,"impl-Debug-for-BooleanFunction"],[883,"impl-Display-for-BooleanFunction"],[884,"impl-Debug-for-CategoricalFunction"],[885,"impl-Display-for-CategoricalFunction"],[886,"impl-Debug-for-TemporalFunction"],[887,"impl-Display-for-TemporalFunction"],[888,"impl-Debug-for-PowFunction"],[889,"impl-Display-for-PowFunction"],[890,"impl-Debug-for-StringFunction"],[891,"impl-Display-for-StringFunction"],[892,"impl-Debug-for-StructFunction"],[893,"impl-Display-for-StructFunction"],[894,"impl-Debug-for-FunctionExpr"],[895,"impl-Display-for-FunctionExpr"],[924,"impl-From%3CAggExpr%3E-for-Expr"],[925,"impl-From%3Cu8%3E-for-Expr"],[926,"impl-From%3Ci16%3E-for-Expr"],[927,"impl-From%3Ci32%3E-for-Expr"],[928,"impl-From%3Cf64%3E-for-Expr"],[929,"impl-From%3Cbool%3E-for-Expr"],[931,"impl-From%3Cu16%3E-for-Expr"],[932,"impl-From%3Cu32%3E-for-Expr"],[933,"impl-From%3Cf32%3E-for-Expr"],[934,"impl-From%3Ci64%3E-for-Expr"],[935,"impl-From%3C%26str%3E-for-Expr"],[936,"impl-From%3Cu64%3E-for-Expr"],[937,"impl-From%3Ci8%3E-for-Expr"],[941,"impl-From%3CTemporalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[942,"impl-From%3CArrayFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[943,"impl-From%3CStructFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[944,"impl-From%3CFunctionExpr%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[945,"impl-From%3CStringFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[946,"impl-From%3CRangeFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[947,"impl-From%3CListFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[949,"impl-From%3CCategoricalFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[950,"impl-From%3CBusinessFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[951,"impl-From%3CBooleanFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[952,"impl-From%3CBinaryFunction%3E-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[959,"impl-From%3CStringFunction%3E-for-FunctionExpr"],[960,"impl-From%3CCategoricalFunction%3E-for-FunctionExpr"],[961,"impl-From%3CBinaryFunction%3E-for-FunctionExpr"],[962,"impl-From%3CBooleanFunction%3E-for-FunctionExpr"],[974,"impl-From%3CString%3E-for-Selector"],[976,"impl-From%3C%26str%3E-for-Selector"],[977,"impl-From%3CExpr%3E-for-Selector"],[978,"impl-From%3CPlSmallStr%3E-for-Selector"],[1002,"impl-Expr"],[1003,"impl-Hash-for-Expr"],[1301,"impl-Serialize-for-SpecialEq%3CArc%3CDslPlan%3E%3E"],[1302,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+FunctionOutputField%3E%3E"],[1303,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+ColumnsUdf%3E%3E"],[1304,"impl-Serialize-for-SpecialEq%3CArc%3Cdyn+RenameAliasFn%3E%3E"],[1305,"impl-Serialize-for-SpecialEq%3CSeries%3E"],[2124,"impl-Debug-for-RollingFunction"],[2125,"impl-Display-for-RollingFunction"],[2157,"impl-Debug-for-RollingFunctionBy"],[2158,"impl-Display-for-RollingFunctionBy"],[2201,"impl-Display-for-TrigonometricFunction"],[2202,"impl-Debug-for-TrigonometricFunction"],[2467,"impl-OptFlags"],[2468,"impl-Flags-for-OptFlags"],[2605,"impl-Debug-for-OptFlags"],[2606,"impl-Octal-for-OptFlags"],[2607,"impl-Binary-for-OptFlags"],[2608,"impl-LowerHex-for-OptFlags"],[2609,"impl-UpperHex-for-OptFlags"],[2613,"impl-From%3CDslPlan%3E-for-LazyFrame"],[2614,"impl-From%3CLazyGroupBy%3E-for-LazyFrame"],[2624,"impl-OptFlags"],[2625,"impl-Flags-for-OptFlags"],[2863,"impl-LazyCsvReader"],[2864,"impl-LazyFileListReader-for-LazyCsvReader"],[2865,"impl-LazyJsonLineReader"],[2866,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2882,"impl-LazyCsvReader"],[2883,"impl-LazyFileListReader-for-LazyCsvReader"],[2884,"impl-LazyFileListReader-for-LazyJsonLineReader"],[2885,"impl-LazyJsonLineReader"],[3248,"impl-Display-for-Duration"],[3249,"impl-Debug-for-Duration"],[3252,"impl-Debug-for-JoinType"],[3253,"impl-Display-for-JoinType"],[3254,"impl-Debug-for-JoinValidation"],[3255,"impl-Display-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAC0KCAEEABIAGAAPACkAAgAuAAIAMgAAADQAEQBHAAgAUQAHAFoAAwBgAAAAYgAZAH0AGwCaAAMAnwAGAKcADgC3ABUAzgAEANQAJwD9AAkACAEQABoBBwAkARgAPgEDAEMBAABFAScAbgEBAHQBAAB3AQEAewEAAIEBAACDAQAAjgEAAJEBAACYAQEAmwEBAKABAACjAUUA6wEAAO0BAADvAQEA9QEAAPwBUABQAgAAagINAHkCXADYAgAA2gIhAP0CAAD/AgAABQMAAAcDEwAcAzIAVwMAAFoDAQBgAwAAZgMAAGkDIgCNAwAAnQMFAKQDBgCsAwAArgMGALYDAwDAAwMAywMAAM8DAADRAwIA1QMAANcDAADcAwEA4QMFAOoDAADsAxEAAQQBAAQEAAAGBCEATwQCAFMEAQBXBAAAaQQAAHEEAAB+BAAAgQQFAIoEAACNBAAAnQQAAKAEAgCoBAIArAQDALUEAQC5BAIAvgQAAMAEAQDGBAAAzQQAAM8EAQDWBAAA2AQAAOAEAQDmBAAA6AQAAOoEAADvBAIACQUFABAFGQAzBQAAOgUAAEEFAABGBQAASAUBAEsFAABRBQEAVwUAAFkFAABbBQIAYgUbAH8FCQCNBUMA0wUAANUFLgAPBgAAEQYAABMGIwA6BgEAPwYAAEwGAABQBgEAVQYTAGsGAABtBgAAbwYBAHIGAQB1BgYAfQZIAMcGAwDMBgIA0QYCANcGAwDfBgEA6AYCAO4GAADwBgAA/QYAAAwHAwAUBzoBUAgBAFMIHABxCAEAdAgnAJ0IAQCgCAcArAgAALoIAADHCAEAzggBANkIAgDdCAMA5ggDAO4IBwD3CBsAFgkFAB8JEQAyCQMAOQkCAD8JAABECQIASQkBAGkJAwB7CQMAggkBAIsJAgCPCQkAnQkAAKUJAACoCRQAvgkBAMMJGgDiCQEA5gkAAOsJAADvCRgADQoDABIKBgApCgAAKwoBAC4KBAA2CgEAQgoAAEgKAgBQCgEAUwoMAG4KAAB2CgAAeAoBAH0KAQCACgAAggoAAIYKAACLCgMAkAoFAJkKAQCfCgMAqwoDALAKAQC1CgIAuQoAALwKAADFCgAAygoBANQKAQDXCggA4QoeAAILAAAECwAABwsBAAoLCQAVCwAAFwsBACALAQApCwEAMQsAADMLAQBECwEAUQsBAFgLBwBjCwAAZgsBAGkLAABrCwMAcQsAAHQLAAB4CwMAgAsAAIILBgCMCwIAkAsAAJMLCgCfCwIApAsAAKYLAACsCxMAwwtaACIMiwCvDBMAyAwAANYMAADYDBEA6wwAAO4MEQASDQIAFg0BABkNAAAcDQMAIw0FACoNAQAuDQAAMQ0CADUNAQA5DQAAOw0BAEANFQBXDXUAzg0EANQNKwA="}],["polars_ops",{"t":"CCCCKKKMNNNNNNNNCMNNNNNNCKKMNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKMKKCMIIPPKKPPIFGKPGGPPIPPPPPKNNNNHNNENNHNNNNNNNNNNNNNNNNNNNNNONNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONNNNNNNNNNNNONNNHNONONNNNNNNNNNNNNNNNNNNNONNEEPKPPGKKNMMMNNHHHNNNHHNNNNNNNNNNNNNNNHNNHHHHHHHNNNNNN","n":["chunked_array","frame","prelude","series","AsBinary","BinaryNameSpaceImpl","ChunkedSet","as_binary","contains","","contains_chunked","","ends_with","","ends_with_chunked","","list","scatter","size_bytes","","starts_with","","starts_with_chunked","","strings","AsList","ListNameSpaceImpl","as_list","join_literal","","join_many","","lst_arg_max","","lst_arg_min","","lst_concat","","lst_get","","lst_join","","lst_lengths","","lst_max","","lst_mean","","lst_median","","lst_min","","lst_n_unique","","lst_reverse","","lst_shift","","lst_slice","","lst_sort","","lst_std","","lst_sum","","lst_unique","","lst_unique_stable","","lst_var","","same_type","","AsString","as_string","DataFrameOps","IntoDf","join","to_df","ChunkJoinIds","ChunkJoinOptIds","CoalesceColumns","Cross","CrossJoin","DataFrameJoinOps","Full","Inner","InnerJoinIds","JoinArgs","JoinCoalesce","JoinDispatch","JoinSpecific","JoinType","JoinValidation","KeepColumns","Left","LeftJoinIds","ManyToMany","ManyToOne","OneToMany","OneToOne","Right","SeriesJoin","__clone_box","","","","_coalesce_full_join","_create_left_df_from_slice","","_finish_join","_full_join_from_series","","_join_suffix_name","borrow","","","","borrow_mut","","","","clone","","","","clone_into","","","","clone_to_uninit","","","","coalesce","","cross_join","","cross_join_dfs","","default","","","default_join_ids","deref","","","","deref_mut","","","","drop","","","","eq","","","","equivalent","","","","","","","","","","","","fmt","","","","","","from","","","","","full_join","hash","","","","hash_join_inner","","hash_join_outer","","how","init","","","","inner_join","into","","","","is_asof","is_valid_join","join","join_nulls","left_join","needs_checks","new","private_left_join_multiple_keys","should_coalesce","slice","suffix","","to_owned","","","","to_string","","try_from","","","","try_into","","","","try_to_compact_string","","type_id","","","","validation","with_coalesce","with_suffix","DataFrameJoinOps","DataFrameOps","Any","ArgAgg","Left","Right","SearchSortedSide","SeriesMethods","SeriesSealed","__clone_box","arg_max","arg_min","as_series","borrow","borrow_mut","clip","clip_max","clip_min","clone","clone_into","clone_to_uninit","coalesce_columns","convert_to_unsigned_index","default","deref","deref_mut","drop","ensure_sorted_arg","","eq","equivalent","","","fmt","from","hash","init","into","is_positive_idx_uncertain","is_sorted","","max_horizontal","mean_horizontal","min_horizontal","negate","negate_bitwise","new_int_range","sum_horizontal","to_owned","try_from","try_into","type_id","value_counts",""],"q":[[0,"polars_ops"],[4,"polars_ops::chunked_array"],[25,"polars_ops::chunked_array::list"],[74,"polars_ops::chunked_array::strings"],[76,"polars_ops::frame"],[80,"polars_ops::frame::join"],[238,"polars_ops::prelude"],[240,"polars_ops::series"],[292,"polars_ops::chunked_array::binary"],[293,"polars_core::datatypes"],[294,"polars_ops::chunked_array::binary::namespace"],[295,"polars_ops::chunked_array::scatter"],[296,"polars_utils::index"],[297,"polars_core::series"],[298,"polars_error"],[299,"core::marker"],[300,"core::option"],[301,"core::iter::traits::collect"],[302,"polars_ops::chunked_array::list::namespace"],[303,"polars_core::datatypes::aliases"],[304,"polars_core::frame::column"],[305,"polars_core::chunked_array::ops::sort::options"],[306,"polars_core::frame"],[307,"dyn_clone::sealed"],[308,"polars_utils::pl_str"],[309,"polars_ops::frame::join::hash_join"],[310,"polars_ops::frame::join::args"],[311,"polars_ops::frame::join::cross_join"],[312,"core::fmt"],[313,"core::convert"],[314,"core::hash"],[315,"polars_ops::frame::join::hash_join::single_keys_dispatch"],[316,"polars_arrow::array::primitive"],[317,"alloc::string"],[318,"core::result"],[319,"compact_str"],[320,"core::any"],[321,"polars_ops::series::ops::arg_min_max"],[322,"polars_ops::series::ops"],[323,"polars_core::chunked_array::ops::search_sorted"],[324,"polars_ops::series::ops::various"],[325,"polars_ops::frame::join::general"],[326,"polars_ops::series::ops::clip"],[327,"polars_ops::series::ops::horizontal"],[328,"polars_ops::series::ops::index"],[329,"polars_ops::series::ops::negate"],[330,"polars_ops::series::ops::not"],[331,"polars_ops::series::ops::int_range"]],"i":"```````bh0000000`A`111111```BbBf000000000000000000000000000000000000000000000`Ch```Cj``DjDl``00````1``10`Dn0001`Df321`Dd0`00`1432143214321432143241E`000253`254325432543254322255544433325443322543Ej3654F`00044765147656514154`444447656547654765654765444``Gf`00```0Gb0Gd22```222``2222Gh0333333333`00```````333300","f":"```````{{{d{b}}}{{d{f}}}}{{{d{h}}{d{{l{j}}}}}n}0{{{d{h}}{d{f}}}n}01100`{{A`{d{{l{Ab}}}}e}{{Af{Ad}}}Ah{{An{}{{Aj{{Al{c}}}}}}}}{{{d{h}}}B`}03322```{{{d{Bb}}}{{d{Bd}}}}{{{d{Bf}}{d{Bh}}Bj}{{Af{Bl}}}}0{{{d{Bf}}{d{Bl}}Bj}{{Af{Bl}}}}0{{{d{Bf}}}Bn}000{{{d{Bf}}{d{{l{C`}}}}}{{Af{Bd}}}}0{{{d{Bf}}CbBj}{{Af{Ad}}}}03322{{{d{Bf}}}{{Af{Ad}}}}0{{{d{Bf}}}Ad}00011{{{d{Bf}}}{{Af{Bn}}}}0{{{d{Bf}}}Bd}0{{{d{Bf}}{d{C`}}}{{Af{Bd}}}}0{{{d{Bf}}CbCd}Bd}0{{{d{Bf}}Cf}{{Af{Bd}}}}0{{{d{Bf}}j}Ad}077{{{d{Bf}}}{{Af{Bd}}}}00011{{{d{Bf}}Bd}Bd}0`{{{d{Ch}}}{{d{Bl}}}}```{{{d{Cj}}}{{d{Cl}}}}````````````````````````{{dCn}D`}000{{Cl{d{{l{Db}}}}{d{{l{Db}}}}{Al{Db}}{d{Cl}}}Cl}{{{d{Dd}}{d{{l{Ab}}}}BjBj}Cl}0`{{{d{Dd}}{d{Cl}}{d{Ad}}{d{Ad}}Df}{{Af{Cl}}}}0{{{d{Bh}}{d{Bh}}}Db}{d{{d{c}}}{}}000{{{d{Dh}}}{{d{Dhc}}}{}}000{{{d{Df}}}Df}{{{d{Dj}}}Dj}{{{d{Dl}}}Dl}{{{d{Dn}}}Dn}{{d{d{Dhc}}}D`{}}000{dD`}000{{{d{Dj}}{d{Dl}}}Bj}`{{{d{E`}}{d{Cl}}{Al{Db}}{Al{{Eb{CbCd}}}}}{{Af{Cl}}}}0{{{d{E`}}{d{Cl}}{Al{{Eb{CbCd}}}}Bj}{{Af{{Eb{ClCl}}}}}}0{{}Df}{{}Dj}{{}Dn}{{}Ed}{Cd{{d{c}}}{}}000{Cd{{d{Dhc}}}{}}000{CdD`}000{{{d{Df}}{d{Df}}}Bj}{{{d{Dj}}{d{Dj}}}Bj}{{{d{Dl}}{d{Dl}}}Bj}{{{d{Dn}}{d{Dn}}}Bj}{{d{d{c}}}Bj{}}00000000000{{{d{Df}}{d{DhEf}}}Eh}{{{d{Dj}}{d{DhEf}}}Eh}{{{d{Dl}}{d{DhEf}}}Eh}0{{{d{Dn}}{d{DhEf}}}Eh}0{cc{}}{DlDf}111{{{d{Ej}}{d{Cl}}ei}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}{{{d{Df}}{d{Dhc}}}D`En}{{{d{Dj}}{d{Dhc}}}D`En}{{{d{Dl}}{d{Dhc}}}D`En}{{{d{Dn}}{d{Dhc}}}D`En}{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{FbBj}}}}}}0{{{d{F`}}{d{Ad}}DnBj}{{Af{{Eb{{Fd{Ab}}{Fd{Ab}}}}}}}}0`{{}Cd}0007{{}c{}}000{{{d{Dl}}}Bj}{{{d{Dn}}{d{Dl}}}{{Af{D`}}}}{{{d{Ej}}{d{Cl}}eiDf}{{Af{Cl}}}{{El{Db}}}{{An{}{{Aj{c}}}}}{{El{Db}}}{{An{}{{Aj{g}}}}}}`;{{{d{Dn}}}Bj}={{{d{Cl}}{d{Cl}}Bj}{{Af{Ff}}}}{{{d{Df}}}Bj}`{{{d{Df}}}{{d{Db}}}}`{dc{}}000{dFh}0{c{{Fj{e}}}{}{}}000{{}{{Fj{c}}}{}}000{d{{Fj{FlFn}}}}0{dG`}000`{{DfDj}Df}{{Df{Al{Db}}}Df}`````````{{dCn}D`}{{{d{Gb}}}{{Al{Cd}}}}0{{{d{Gd}}}{{d{Ad}}}}{d{{d{c}}}{}}{{{d{Dh}}}{{d{Dhc}}}{}}{{{d{Ad}}{d{Ad}}{d{Ad}}}{{Af{Ad}}}}{{{d{Ad}}{d{Ad}}}{{Af{Ad}}}}0{{{d{Gf}}}Gf}{{d{d{Dhc}}}D`{}}{dD`}{{{d{{l{C`}}}}}{{Af{C`}}}}{{{d{Ad}}Cd}{{Af{Bn}}}}{{}Gf}{Cd{{d{c}}}{}}{Cd{{d{Dhc}}}{}}{CdD`}{{{d{Gh}}{d{Bh}}}{{Af{D`}}}}0{{{d{Gf}}{d{Gf}}}Bj}{{d{d{c}}}Bj{}}00{{{d{Gf}}{d{DhEf}}}{{Fj{D`Gj}}}}{cc{}}{{{d{Gf}}{d{Dhc}}}D`En}{{}Cd}{{}c{}}{{{d{Ad}}}Bj}{{{d{Gh}}Cf}{{Af{Bj}}}}0{{{d{{l{C`}}}}}{{Af{{Al{C`}}}}}}00{{{d{Ad}}}{{Af{Ad}}}}0{{CbDb}{{Af{Ad}}}}2{dc{}}{c{{Fj{e}}}{}{}}{{}{{Fj{c}}}{}}{dG`}{{{d{Gh}}BjBjDbBj}{{Af{Cl}}}}0","D":"El","p":[[10,"AsBinary",4,292],[1,"reference"],[8,"BinaryChunked",293],[10,"BinaryNameSpaceImpl",4,294],[1,"u8"],[1,"slice"],[8,"BooleanChunked",293],[10,"ChunkedSet",4,295],[8,"IdxSize",296],[5,"Series",297],[8,"PolarsResult",298],[10,"Copy",299],[17,"Item"],[6,"Option",300],[10,"IntoIterator",301],[8,"UInt32Chunked",293],[10,"AsList",25],[8,"ListChunked",293],[10,"ListNameSpaceImpl",25,302],[1,"str"],[1,"bool"],[8,"StringChunked",293],[8,"IdxCa",303],[6,"Column",304],[1,"i64"],[1,"usize"],[5,"SortOptions",305],[10,"AsString",74],[10,"IntoDf",76],[5,"DataFrame",306],[5,"Private",307],[1,"unit"],[5,"PlSmallStr",308],[10,"JoinDispatch",80,309],[5,"JoinArgs",80,310],[0,"mut"],[6,"JoinCoalesce",80,310],[6,"JoinType",80,310],[6,"JoinValidation",80,310],[10,"CrossJoin",80,311],[1,"tuple"],[8,"ChunkJoinOptIds",80,310],[5,"Formatter",312],[8,"Result",312],[10,"DataFrameJoinOps",80],[10,"Into",313],[10,"Hasher",314],[10,"SeriesJoin",80,315],[8,"InnerJoinIds",80,310],[5,"PrimitiveArray",316],[8,"LeftJoinIds",80,310],[5,"String",317],[6,"Result",318],[5,"CompactString",319],[6,"ToCompactStringError",319],[5,"TypeId",320],[10,"ArgAgg",240,321],[10,"SeriesSealed",240,322],[6,"SearchSortedSide",240,323],[10,"SeriesMethods",240,324],[5,"Error",312]],"r":[[4,292],[5,294],[6,295],[26,302],[80,310],[81,310],[84,311],[88,310],[89,310],[90,310],[91,309],[93,310],[94,310],[97,310],[103,315],[108,325],[111,325],[114,325],[144,309],[238,80],[239,76],[241,321],[244,323],[245,324],[246,322],[253,326],[254,326],[255,326],[259,327],[260,328],[276,328],[279,327],[280,327],[281,327],[282,329],[283,330],[284,331],[285,327]],"b":[[175,"impl-Debug-for-JoinType"],[176,"impl-Display-for-JoinType"],[177,"impl-Display-for-JoinValidation"],[178,"impl-Debug-for-JoinValidation"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPYAEgAAAAgACwABAA8AAgAXAA8AKwA3AGcABgBwABkAjAAnALUAAAC6AAwAzAABAM8AAADRACAA8wAFAPsAAgABAQ8AEgEBABgBCgA="}],["polars_sql",{"t":"FNNNNNNNNNNNNCNNNNCNNNNNHNNNNNNNPGPFFKNNNNNNNNONONNNNNNOMNNNNNNNNNNNNNNNONNONNNMNNNNNNNNNNMNNNNNNNNNNNNNNNHH","n":["SQLContext","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","deref_mut","drop","execute","from","function_registry","get_table_map","get_tables","init","into","keywords","new","new_from_table_map","register","registry","registry_mut","sql_expr","to_owned","try_from","try_into","type_id","unregister","vzip","with_function_registry","Aggregation","Context","Default","DefaultFunctionRegistry","FunctionOptions","FunctionRegistry","__clone_box","","borrow","","","borrow_mut","","","cast_to_supertypes","check_lengths","","clone","","clone_into","","clone_to_uninit","","collect_groups","contains","","default","deref","","","deref_mut","","","drop","","","eq","equivalent","","","flags","fmt","","fmt_str","from","","","get_udf","","hash","init","","","into","","","is_elementwise","is_groups_sensitive","register","","to_owned","","try_from","","","try_into","","","type_id","","","vzip","","","all_functions","all_keywords"],"q":[[0,"polars_sql"],[32,"polars_sql::function_registry"],[106,"polars_sql::keywords"],[108,"dyn_clone::sealed"],[109,"polars_sql::context"],[110,"polars_lazy::frame"],[111,"polars_error"],[112,"alloc::string"],[113,"polars_utils::aliases"],[114,"alloc::vec"],[115,"alloc::sync"],[116,"polars_plan::dsl::expr"],[117,"core::convert"],[118,"core::result"],[119,"core::any"],[120,"polars_plan::plans::options"],[121,"polars_plan::plans"],[122,"core::fmt"],[123,"polars_plan::dsl::udf"],[124,"core::option"],[125,"core::hash"],[126,"polars_sql::sql_expr"]],"i":"`j00000000000`0000`00000`0000000Bj`0```Bf1Bl120121111212121Aj1212312312322222232123012123123220123123123123123``","f":"`{{bd}f}{b{{b{c}}}{}}{{{b{h}}}{{b{hc}}}{}}{{{b{j}}}j}{{b{b{hc}}}f{}}{bf}{{}j}{l{{b{c}}}{}}{l{{b{hc}}}{}}{lf}{{{b{hj}}{b{n}}}{{Ab{A`}}}}{cc{}}`{{{b{j}}}{{Af{AdA`}}}}{{{b{j}}}{{Ah{Ad}}}}{{}l}{{}c{}}`9{{{Af{AdA`}}}j}{{{b{hj}}{b{n}}A`}f}{{{b{j}}}{{b{{Al{Aj}}}}}}{{{b{hj}}}{{b{hAj}}}}{c{{Ab{An}}}{{B`{n}}}}{bc{}}{c{{Bb{e}}}{}{}}{{}{{Bb{c}}}{}}{bBd}{{{b{hj}}{b{n}}}f}:{{j{Al{Aj}}}j}``````{{bd}f}0{b{{b{c}}}{}}00{{{b{h}}}{{b{hc}}}{}}00`{{{b{Bf}}}Bh}`{{{b{Bf}}}Bf}{{{b{Bj}}}Bj}{{b{b{hc}}}f{}}0{bf}0`{{{b{Aj}}{b{n}}}Bh}{{{b{Bl}}{b{n}}}Bh}{{}Bf}{l{{b{c}}}{}}00{l{{b{hc}}}{}}00{lf}00{{{b{Bf}}{b{Bf}}}Bh}{{b{b{c}}}Bh{}}00`{{{b{Bf}}{b{hBn}}}{{Bb{fC`}}}}{{{b{Bj}}{b{hBn}}}{{Bb{fC`}}}}`{cc{}}00{{{b{Aj}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bl}}{b{n}}}{{Ab{{Cd{Cb}}}}}}{{{b{Bf}}{b{hc}}}fCf}{{}l}00{{}c{}}00{{{b{Bf}}}Bh}0{{{b{hAj}}{b{n}}Cb}{{Ab{f}}}}{{{b{hBl}}{b{n}}Cb}{{Ab{f}}}}{bc{}}0{c{{Bb{e}}}{}{}}00{{}{{Bb{c}}}{}}00{bBd}00777{{}{{Ah{{b{n}}}}}}0","D":"Dd","p":[[1,"reference"],[5,"Private",108],[1,"unit"],[0,"mut"],[5,"SQLContext",0,109],[1,"usize"],[1,"str"],[5,"LazyFrame",110],[8,"PolarsResult",111],[5,"String",112],[8,"PlHashMap",113],[5,"Vec",114],[10,"FunctionRegistry",32],[5,"Arc",115],[6,"Expr",116],[10,"AsRef",117],[6,"Result",118],[5,"TypeId",119],[5,"FunctionOptions",32,120],[1,"bool"],[6,"Context",32,121],[5,"DefaultFunctionRegistry",32],[5,"Formatter",122],[5,"Error",122],[5,"UserDefinedFunction",123],[6,"Option",124],[10,"Hasher",125]],"r":[[0,109],[24,126],[33,121],[36,120]],"b":[],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAEoACwACAAkAEQAAABoAAwAfAAAAIgAAACUAAAAnABAAOgASAFEABABZAAAAXAAOAA=="}],["polars_time",{"t":"PGFPPKKKPFCHHOOCMCHMMMECKPPPPPGKNMNNNNNNNNNNNNNNNCNNNNNNNFRKKNNNNNNNNNNHNNONMONNMNNPFFGPPFPGPPPPPPPGPEPPPFPNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNONONNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKKMNNNNNNNNNNNNNNNNNN","n":["Both","ClosedWindow","Duration","Left","None","PolarsRound","PolarsTruncate","PolarsUpsample","Right","Window","chunkedarray","date_range","in_nanoseconds_window","offset","parsed_int","prelude","round","series","time_range","truncate","upsample","upsample_stable","StringMethods","string","AsString","DateDMY","DateYMD","DatetimeDMY","DatetimeYMD","DatetimeYMDZ","Pattern","StringMethods","__clone_box","as_string","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","eq","equivalent","","","fmt","from","hash","infer","init","into","is_inferable","to_owned","try_from","try_into","type_id","DatetimeInfer","Error","StrpTimeParser","TryFromWithUnit","__clone_box","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","drop","from","infer_pattern_single","init","into","logical_type","parse","parse_bytes","pattern","to_owned","try_from","try_from_with_unit","try_into","type_id","Both","Bounds","BoundsIter","ClosedWindow","DataPoint","","Duration","Friday","Label","Left","","Monday","None","Right","","Saturday","StartBy","Sunday","TemporalMethods","Thursday","Tuesday","Wednesday","Window","WindowBound","__clone_box","","","","","","add_ms","add_ns","add_us","borrow","","","","","","","borrow_mut","","","","","","","clone","","","","","","clone_into","","","","","","clone_to_uninit","","","","","","cmp","compare","days","days_only","default","deref","","","","","","","deref_mut","","","","","","","drop","","","","","","","ensure_duration_matches_dtype","ensure_is_constant_duration","eq","","","","equivalent","","","","","","","","","","","","fmt","","","","","","from","","","","","","","get_earliest_bounds_ms","get_earliest_bounds_ns","get_earliest_bounds_us","get_overlapping_bounds_iter","group_by_values","group_by_windows","hash","","","","init","","","","","","","into","","","","","","","into_iter","is_constant_duration","is_full_days","is_zero","months","months_only","mul","nanoseconds","neg","negative","new","","next","offset","parse","parsed_int","partial_cmp","round_ms","round_ns","round_us","to_owned","","","","","","to_string","truncate_impl","truncate_ms","","truncate_ns","","truncate_us","","try_from","","","","","","","try_into","","","","","","","try_to_compact_string","type_id","","","","","","","weekday","weeks","weeks_only","AsSeries","TemporalMethods","as_series","century","day","hour","is_leap_year","iso_year","millennium","minute","month","nanosecond","ordinal_day","ordinal_year","quarter","second","strftime","to_string","week","weekday","year"],"q":[[0,"polars_time"],[22,"polars_time::chunkedarray"],[24,"polars_time::chunkedarray::string"],[57,"polars_time::chunkedarray::string::infer"],[83,"polars_time::prelude"],[288,"polars_time::series"],[309,"polars_utils::pl_str"],[310,"chrono::naive::datetime"],[311,"polars_time::windows::duration"],[312,"polars_time::windows::group_by"],[313,"polars_core::datatypes::time_unit"],[314,"polars_arrow::legacy::time_zone"],[315,"core::option"],[316,"polars_core::chunked_array::logical::datetime"],[317,"polars_error"],[318,"polars_time::round"],[319,"polars_core::datatypes"],[320,"chrono::naive::time"],[321,"polars_core::chunked_array::logical::time"],[322,"polars_time::truncate"],[323,"polars_time::upsample"],[324,"polars_core::frame"],[325,"polars_core::utils"],[326,"dyn_clone::sealed"],[327,"polars_time::chunkedarray::string::patterns"],[328,"core::fmt"],[329,"core::hash"],[330,"core::result"],[331,"core::any"],[332,"core::clone"],[333,"polars_time::windows::bounds"],[334,"polars_time::windows::window"],[335,"core::cmp"],[336,"polars_core::datatypes::dtype"],[337,"polars_core::frame::group_by::proxy"],[338,"alloc::vec"],[339,"alloc::string"],[340,"core::ops::function"],[341,"compact_str"],[342,"polars_core::series"],[343,"polars_time::date_range"]],"i":"h``00```0````Ehf`Ah``B`Bb0```Cb0000``0Bn111111111111111`1111111`Dn``D`000000000`0000Df111211:```EdEf`0`<10<<10`0`000`0Eb;=21<;;;En1<>32=01<>32=1<>32=1<>32=1<>32=<<<<201<>32=01<>32=01<>32=``<>32<<<>>>3332221<<>3201<>32=====``<>3201<>32=01<>32=0<<<<<<<<<<=0=<<<===1<>32=<<<=<=<=01<>32=01<>32=<01<>32=2<<``GdGh00000000000000000","f":"```````````{{bddfhj{A`{{n{l}}}}}{{Ad{Ab}}}}{{{n{d}}}Af}```{{{n{Ah}}{n{Aj}}{A`{{n{l}}}}}{{Ad{Ah}}}}`{{bAlAlfh}{{Ad{An}}}}{{{n{B`}}{A`{{n{l}}}}{n{Aj}}}{{Ad{B`}}}}{{{n{Bb}}c{n{Bd}}f}{{Ad{Bf}}}{{Bh{b}}}}0``````````{{nBj}Bl}{{{n{Bn}}}{{n{Aj}}}}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{Cb}}}Cb}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{{{n{Cb}}{n{Cb}}}Af}{{n{n{c}}}Af{}}00{{{n{Cb}}{n{C`Cf}}}Ch}{cc{}}{{{n{Cb}}{n{C`c}}}BlCj}`{{}Cd}{{}c{}}{{{n{Cb}}{n{Bd}}}Af}{nc{}}{c{{Cl{e}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````{{nBj}Bl}{n{{n{c}}}{}}{{{n{C`}}}{{n{C`c}}}{}}{{{n{{D`{c}}}}}{{D`{c}}}{DbDd}}{{n{n{C`c}}}Bl{}}{nBl}{Cd{{n{c}}}{}}{Cd{{n{C`c}}}{}}{CdBl}{cc{}}{{{n{Bd}}}{{A`{Cb}}}}{{}Cd}{{}c{}}`{{{n{C`{D`{c}}}}{n{Bd}}}A`Dd}{{{n{C`Df}}{n{{Dj{Dh}}}}{A`{j}}}{{A`{c}}}{}}`{nc{}}{c{{Cl{e}}}{}{}}{{c{A`{j}}}{{Ad{{Dn{}{{Dl{e}}}}}}}{}{}}{{}{{Cl{c}}}{}}{nCn}````````````````````````{{nBj}Bl}00000{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{n{{n{c}}}{}}000000{{{n{C`}}}{{n{C`c}}}{}}000000{{{n{Eb}}}Eb}{{{n{f}}}f}{{{n{h}}}h}{{{n{Ed}}}Ed}{{{n{Ef}}}Ef}{{{n{Eh}}}Eh}{{n{n{C`c}}}Bl{}}00000{nBl}00000{{{n{f}}{n{f}}}Ej}{{n{n{c}}}Ej{}}{{{n{f}}}E`}{{{n{f}}}Af}{{}Ef}{Cd{{n{c}}}{}}000000{Cd{{n{C`c}}}{}}000000{CdBl}000000{{f{n{El}}{n{Bd}}}{{Ad{Bl}}}}{{f{A`{{n{Bd}}}}{n{Bd}}}{{Ad{Bl}}}}{{{n{f}}{n{f}}}Af}{{{n{h}}{n{h}}}Af}{{{n{Ed}}{n{Ed}}}Af}{{{n{Ef}}{n{Ef}}}Af}{{n{n{c}}}Af{}}00000000000{{{n{Eb}}{n{C`Cf}}}Ch}{{{n{f}}{n{C`Cf}}}Ch}0{{{n{h}}{n{C`Cf}}}Ch}{{{n{Ed}}{n{C`Cf}}}Ch}{{{n{Ef}}{n{C`Cf}}}Ch}{cc{}}000000{{{n{Eh}}E`h{A`{{n{l}}}}}{{Ad{Eb}}}}00{{{n{Eh}}Ebhj{A`{{n{l}}}}Ef}{{Ad{En}}}}{{ff{n{{Dj{E`}}}}hj{A`{l}}}{{Ad{F`}}}}{{Eh{n{{Dj{E`}}}}hj{n{{A`{Fb}}}}AfAfEf}{{Ff{F`{Fd{E`}}{Fd{E`}}}}}}{{{n{f}}{n{C`c}}}BlCj}{{{n{h}}{n{C`c}}}BlCj}{{{n{Ed}}{n{C`c}}}BlCj}{{{n{Ef}}{n{C`c}}}BlCj}{{}Cd}000000{{}c{}}0000000{{{n{f}}{A`{{n{Bd}}}}}Af}{{{n{f}}}Af}0{{{n{f}}}E`}1{{fE`}f}1{fc{}}3{E`f}{{fff}Eh}{{{n{C`En}}}{{A`{c}}}{}}`{{{n{Bd}}}f}`{{{n{f}}{n{f}}}{{A`{Ej}}}}{{{n{Eh}}E`{A`{{n{l}}}}}{{Ad{E`}}}}00{nc{}}00000{nFh}{{{n{f}}E`{A`{{n{l}}}}ceg}{{Ad{E`}}}{{Fl{E`}{{Fj{E`}}}}}{{Fl{E`}{{Fj{d}}}}}{{Fl{d}{{Fj{E`}}}}}}{{{n{f}}E`{A`{{n{l}}}}}{{Ad{E`}}}}40404{c{{Cl{e}}}{}{}}000000{{}{{Cl{c}}}{}}000000{n{{Cl{FnG`}}}}{nCn}000000{{{n{Ef}}}{{A`{Gb}}}}{{{n{f}}}E`}{{{n{f}}}Af}``{{{n{Gd}}}{{n{Gf}}}}{{{n{Gh}}}{{Ad{Gj}}}}{{{n{Gh}}}{{Ad{Gl}}}}0{{{n{Gh}}}{{Ad{Gn}}}}22112{{{n{Gh}}}{{Ad{H`}}}}322{{{n{Gh}}{n{Bd}}}{{Ad{Gf}}}}0334","D":"Gd","p":[[5,"PlSmallStr",309],[5,"NaiveDateTime",310],[5,"Duration",83,311],[6,"ClosedWindow",83,312],[6,"TimeUnit",313],[6,"Tz",314],[1,"reference"],[6,"Option",315],[8,"DatetimeChunked",316],[8,"PolarsResult",317],[1,"bool"],[10,"PolarsRound",0,318],[8,"StringChunked",319],[5,"NaiveTime",320],[8,"TimeChunked",321],[10,"PolarsTruncate",0,322],[10,"PolarsUpsample",0,323],[1,"str"],[5,"DataFrame",324],[10,"IntoVec",325],[5,"Private",326],[1,"unit"],[10,"AsString",24],[0,"mut"],[6,"Pattern",24,327],[1,"usize"],[5,"Formatter",328],[8,"Result",328],[10,"Hasher",329],[6,"Result",330],[5,"TypeId",331],[5,"DatetimeInfer",57],[10,"Clone",332],[10,"PolarsNumericType",319],[10,"StrpTimeParser",57],[1,"u8"],[1,"slice"],[17,"Error"],[10,"TryFromWithUnit",57],[1,"i64"],[5,"Bounds",83,333],[6,"Label",83,312],[6,"StartBy",83,312],[5,"Window",83,334],[6,"Ordering",335],[6,"DataType",336],[5,"BoundsIter",83,334],[8,"GroupsSlice",337],[8,"TimeZone",336],[5,"Vec",338],[1,"tuple"],[5,"String",339],[17,"Output"],[10,"Fn",340],[5,"CompactString",341],[6,"ToCompactStringError",341],[1,"u32"],[10,"AsSeries",288],[5,"Series",342],[10,"TemporalMethods",288],[8,"Int32Chunked",319],[8,"Int8Chunked",319],[8,"BooleanChunked",319],[8,"Int16Chunked",319]],"r":[[1,312],[2,311],[5,318],[6,322],[7,323],[9,334],[11,343],[12,343],[18,343],[22,24],[30,327],[84,333],[85,334],[86,312],[89,311],[91,312],[99,312],[101,288],[105,334],[174,311],[175,311],[209,312],[210,312]],"b":[[193,"impl-Debug-for-Duration"],[194,"impl-Display-for-Duration"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAPsAFwAAAAkADQAFABQAAAAXABgAMQACADUAEQBIAAEASwATAGAACQBrAFsAzgAAANAAAQDUAAoA5gABAOoAAgDuAAAA8QACAPUAAQD6AAgABAEAAAYBAAAIARsAKAEAAA=="}],["polars_utils",{"t":"EECCCCCCCCCCCCCCQQQQCCCCCCCQCCCQCCCCCCCCCCQQCCRKMMRKIIIIIIMNNNNMNNNNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNKMHHNFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNHHHHFNNNNNNNNNNNNNNHHFNNNNNNNNNNNNNNNNNNNNNNKNNNNNKMHHHHFKNNNNNNNMNNNNNNNNNHNNNNNNNNNNNNNIFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNKFIKRKIFKNNNNHNNNNNNNNNNNNNNNNNNNNNNMMNNNONNNNNNNMNNNNMNNNNNNNNNHHHKNNCNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNNNHHHHHKNNNNMMTFFFFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNHNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNTRKMMHHFNNNNNNNNNNNNNNNNNNTTFNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNNFNNNNNNNNNNNNNNNNNNNNNNNKKKKKMMMMHMMMMHHFNNNNNNNNNNNNNNNNNNNNNNNNNNNJFNNNNNNNNNNNNRKKKKRFNNHHNNNNNNNNNNNNNNNNNNNNNNNNMNMMMNNMNNNNNNNNKMKKKRKKMMMHMMMM","n":["IdxSize","NullableIdxSize","abs_diff","aliases","arena","atomic","binary_search","cache","cell","clmul","contention_pool","cpuid","fixedringbuffer","float","floor_divmod","fmt","format_list","format_list_container","format_pl_smallstr","format_tuple","functions","hashing","idx_vec","index","io","itertools","macros","matches_any_order","mem","min_max","mmap","no_call_const","nulls","ord","partitioned","pl_str","priority","slice","sort","sync","sys","total_ord","unitvec","unreachable_unchecked_release","unwrap","vec","Abs","AbsDiff","abs_diff","max_abs_diff","HashMap","InitHashMaps","PlHashMap","PlHashSet","PlIndexMap","PlIndexSet","PlRandomState","PlRandomStateQuality","new","","","","","with_capacity","","","","","Arena","Node","add","borrow","","borrow_mut","","clear","clone","","clone_into","","clone_to_uninit","","cmp","compare","default","","deref","","deref_mut","","deserialize","","drop","","duplicate","eq","equivalent","","","fmt","","from","","get","get_many_mut","get_mut","get_node","get_unchecked","hash","init","","into","","is_empty","len","new","partial_cmp","pop","replace","replace_with","serialize","","swap","take","to_owned","","try_from","","try_into","","try_replace_with","type_id","","version","with_capacity","SyncCounter","borrow","borrow_mut","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","from","init","into","manual_drop","new","to_owned","try_from","try_into","type_id","ExponentialSearch","exponential_search_by","find_first_ge_index","find_first_gt_index","partition_point_exponential","FastCachedFunc","FastFixedCache","borrow","","borrow_mut","","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","","drop","","eval","from","","get","get_mut","get_or_insert_with","init","","insert","into","","new","","to_owned","try_from","","try_get_or_insert_with","try_into","","type_id","","SyncUnsafeCell","borrow","borrow_mut","default","deref","deref_mut","drop","from","","","get","get_mut","init","into","into_inner","new","raw_get","try_from","try_into","type_id","clmul64","portable_clmul64","portable_prefix_xorsum","prefix_xorsum","LowContentionPool","borrow","borrow_mut","deref","deref_mut","drop","from","get","init","into","new","set","try_from","try_into","type_id","has_fast_bmi2","is_avx512_enabled","FixedRingBuffer","as_slices","borrow","borrow_mut","capacity","deref","deref_mut","drop","","fill_repeat","from","init","into","is_empty","is_full","len","new","pop_front","push","remaining_capacity","try_from","try_into","type_id","IsFloat","is_f32","is_f64","is_finite","is_float","is_nan","FloorDivMod","wrapping_floor_div_mod","arc_map","flatten","range_portion","try_arc_map","BytesHash","DirtyHash","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","dirty_hash","","drop","eq","equivalent","","","fmt","from","hash","hash_to_partition","init","into","is_null","new","peel_total_ord","to_owned","to_total_ord","tot_eq","tot_hash","try_from","try_into","type_id","unwrap_inner","IdxVec","UnitVec","as_mut","as_mut_slice","as_ref","as_slice","borrow","borrow_mut","capacity","clone","clone_into","clone_to_uninit","default","deref","","deref_mut","drop","","eq","equivalent","","","extend","fmt","from","","","from_iter","init","into","is_empty","iter","iter_mut","len","new","pop","push","push_unchecked","reserve","to_owned","try_from","try_into","type_id","with_capacity","Bounded","ChunkId","IdxSize","Indexable","Item","NullCount","NullableChunkId","NullableIdxSize","ToIdx","borrow","","borrow_mut","","check_bounds","clone","","clone_into","","clone_to_uninit","","deref","","deref_mut","","drop","","eq","equivalent","","","extract","fmt","","from","","","get","get_unchecked","idx","init","","inner","inner_mut","into","","is_empty","is_null","is_null_idx","is_valid_bit_pattern","len","null","","null_count","store","to_idx","to_opt","to_owned","","try_from","","try_into","","type_id","","_limit_path_len_io_err","create_file","open_file","Itertools","all_equal","collect_vec","enumerate_idx","","enumerate_u32","eq_by_","partial_cmp_by_","try_collect","try_collect_vec","EnumerateIdx","borrow","borrow_mut","clone","clone_into","clone_to_uninit","count","deref","deref_mut","drop","fmt","from","init","into","into_iter","len","new","next","next_back","nth","nth_back","size_hint","to_owned","try_from","try_into","type_id","madvise_populate_read","madvise_sequential","madvise_willneed","prefetch_l2","to_mutable_slice","MinMax","max_ignore_nan","max_propagate_nan","min_ignore_nan","min_propagate_nan","nan_max_lt","nan_min_lt","EMPTY","MMapSemaphore","MemReader","MemSlice","Mmap","advise","advise_range","as_ptr","as_ref","","","borrow","","","","borrow_mut","","","","clone","","clone_into","","clone_to_uninit","","default","deref","","","","","","deref_mut","","","","drop","","","","","ensure_not_mapped","fmt","","","","from","","","","","from_bytes","","from_file","from_mmap","from_reader","from_slice","from_static","from_vec","","init","","","","into","","","","lock","make_mut","map","new","new_from_file","new_from_file_with_options","position","prefetch","read","read_slice","remaining_len","remap","seek","slice","to_owned","","to_vec","total_len","try_from","","","","try_into","","","","type_id","","","","unlock","HAS_NULLS","Inner","IsNull","is_null","unwrap_inner","compare_fn_nan_max","compare_fn_nan_min","PartitionedHashMap","borrow","borrow_mut","deref","deref_mut","drop","from","init","inner","inner_mut","into","new","raw_entry","raw_entry_and_partition","raw_entry_and_partition_mut","raw_entry_mut","try_from","try_into","type_id","EMPTY","EMPTY_REF","PlSmallStr","as_ref","","","","as_str","borrow","","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","default","deref","","deref_mut","deserialize","drop","eq","equivalent","","","fmt","","from","","","","","from_iter","","","","","","","","from_static","from_str","from_string","hash","init","into","into_string","partial_cmp","serialize","to_owned","to_string","try_from","try_into","try_to_compact_string","type_id","write_char","write_fmt","write_str","Priority","borrow","borrow_mut","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","drop","eq","equivalent","","","fmt","from","init","into","partial_cmp","to_owned","try_from","try_into","type_id","Extrema","GetSaferUnchecked","Slice2Uninit","SliceAble","SortedSlice","as_uninit","get_unchecked_release","get_unchecked_release_mut","is_sorted_ascending","load_padded_le_u64","max_value","min_value","slice","slice_unchecked","arg_sort_ascending","perfect_sort","SyncPtr","borrow","borrow_mut","clone","clone_into","clone_to_uninit","deref","deref_mut","deref_unchecked","drop","eq","equivalent","","","fmt","from","","from_const","get","init","into","is_null","new","new_null","to_owned","try_from","try_into","type_id","MEMINFO","MemInfo","borrow","borrow_mut","deref","deref_mut","drop","free","from","init","into","try_from","try_into","type_id","SourceItem","ToTotalOrd","TotalEq","TotalHash","TotalOrd","TotalOrdItem","TotalOrdWrap","borrow","borrow_mut","canonical_f32","canonical_f64","clone","clone_into","clone_to_uninit","cmp","compare","deref","deref_mut","dirty_hash","drop","eq","equivalent","","","from","ge","gt","hash","init","into","is_null","le","lt","ne","partial_cmp","peel_total_ord","to_owned","to_total_ord","tot_cmp","tot_eq","tot_ge","tot_gt","tot_hash","tot_hash_slice","tot_le","tot_lt","tot_ne","try_from","try_into","type_id","unwrap_inner","UnwrapUncheckedRelease","unwrap_unchecked_release","CapacityByFactor","ConvertVec","IntoRawParts","ItemIn","PushUnchecked","ResizeFaster","convert","convert_owned","fill_or_alloc","inplace_zip_filtermap","into_raw_parts","push_unchecked","raw_parts","with_capacity_by_factor"],"q":[[0,"polars_utils"],[46,"polars_utils::abs_diff"],[50,"polars_utils::aliases"],[68,"polars_utils::arena"],[135,"polars_utils::atomic"],[156,"polars_utils::binary_search"],[161,"polars_utils::cache"],[198,"polars_utils::cell"],[218,"polars_utils::clmul"],[222,"polars_utils::contention_pool"],[237,"polars_utils::cpuid"],[239,"polars_utils::fixedringbuffer"],[262,"polars_utils::float"],[268,"polars_utils::floor_divmod"],[270,"polars_utils::functions"],[274,"polars_utils::hashing"],[307,"polars_utils::idx_vec"],[351,"polars_utils::index"],[415,"polars_utils::io"],[418,"polars_utils::itertools"],[428,"polars_utils::itertools::enumerate_idx"],[454,"polars_utils::mem"],[459,"polars_utils::min_max"],[466,"polars_utils::mmap"],[565,"polars_utils::nulls"],[570,"polars_utils::ord"],[572,"polars_utils::partitioned"],[591,"polars_utils::pl_str"],[650,"polars_utils::priority"],[674,"polars_utils::slice"],[688,"polars_utils::sort"],[690,"polars_utils::sync"],[718,"polars_utils::sys"],[732,"polars_utils::total_ord"],[783,"polars_utils::unwrap"],[785,"polars_utils::vec"],[799,"num_traits"],[800,"core::cmp"],[801,"core::marker"],[802,"core::fmt"],[803,"core::clone"],[804,"core::result"],[805,"serde::de"],[806,"core::option"],[807,"core::hash"],[808,"core::default"],[809,"core::ops::function"],[810,"serde::ser"],[811,"core::any"],[812,"core::borrow"],[813,"alloc::sync"],[814,"alloc::vec"],[815,"core::convert"],[816,"core::ops::range"],[817,"core::iter::traits::collect"],[818,"core::slice::iter"],[819,"polars_error"],[820,"std::path"],[821,"std::io::error"],[822,"std::fs"],[823,"core::iter::traits::iterator"],[824,"core::ops::arith"],[825,"num_traits::cast"],[826,"num_traits::identities"],[827,"core::iter::traits::exact_size"],[828,"core::iter::traits::double_ended"],[829,"memmap2"],[830,"memmap2::advice"],[831,"polars_utils::mmap::private"],[832,"bytes::bytes"],[833,"std::io"],[834,"hashbrown::map"],[835,"std::ffi::os_str"],[836,"alloc::string"],[837,"compact_str"],[838,"alloc::borrow"],[839,"alloc::boxed"],[840,"core::mem::maybe_uninit"],[841,"core::slice::index"],[842,"rayon_core::thread_pool"]],"i":"``````````````````````````````````````````````d`00ABf```````0AdAfABhABj43210``AjAn101101010100010101010110000010111111001011110111011101010110111`Dh0000000000000000000`Dj``0``EfE`100000101010110000100101001001010`El000000000000000000`````Fb0000000000000```Fd000000000000000000000`Fh0000`Fj``````Gd000000Gf111111111`1111111111111``Gj00000000000000000000000000000000000000000````Hn````HjHl10`1010101010101111010110221101010Ib122021Id2If443434343````J`0`000000`Jb000000000000000000000000``````Kd00000Kl````Kf0Kj12012Kn123013030303223301230123011`230123001303300330230123012220110300020330302301230123012I`0`00```Md00000000000000000Ml0`00000000000000000000000000000000000000000000000000000000`O`0000000000000000000000`````ObOf0Oj`Ol0On0```A@d00000000000000000000000000``A@f00000000000AAf````0`A@l0``000000000000000000000000101A@`A@n11AA`02213333`AAh```AAl``00AAn`AB`ABb1ABd","f":"````````````````````````````````````````````````{{{d{}{{b{c}}}}{d{}{{b{c}}}}}c{fhjlnA`}}{{}c{}}````````00000{Abc{}}{Ab{{Ad{ce}}}{}{}}{Ab{{Af{c}}}{}}22``{{{Al{Ah{Aj{c}}}}c}An{}}{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{Ah{Aj{c}}}}}B`{}}{{{Al{An}}}An}{{{Al{{Aj{c}}}}}{{Aj{c}}}Bb}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{{Al{An}}{Al{An}}}Bd}{{Al{Al{c}}}Bd{}}{{}An}{{}{{Aj{c}}}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{c{{Bf{An}}}Bh}{c{{Bf{{Aj{e}}}}}BhBj}{AbB`}0{{{Al{Ah{Aj{c}}}}An}AnBb}{{{Al{An}}{Al{An}}}Bl}{{Al{Al{c}}}Bl{}}00{{{Al{An}}{Al{AhBn}}}C`}{{{Al{{Aj{c}}}}{Al{AhBn}}}C`l}{cc{}}0{{{Al{{Aj{c}}}}An}{{Al{c}}}{}}{{{Al{Ah{Aj{c}}}}{Cb{An}}}{{Cb{{Al{Ahc}}}}}{}}{{{Al{Ah{Aj{c}}}}An}{{Al{Ahc}}}{}}{{{Al{{Aj{c}}}}{Al{c}}}{{Cd{An}}}{}}3{{{Al{An}}{Al{Ahc}}}B`Cf}{{}Ab}0{{}c{}}0{{{Al{{Aj{c}}}}}Bl{}}{{{Al{{Aj{c}}}}}Ab{}}{{}{{Aj{c}}}{}}{{{Al{An}}{Al{An}}}{{Cd{Bd}}}}{{{Al{Ah{Aj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Aj{c}}}}Anc}c{}}{{{Al{Ah{Aj{c}}}}Ane}B`Ch{{Cl{c}{{Cj{c}}}}}}{{{Al{An}}c}BfCn}{{{Al{{Aj{c}}}}e}BfD`Cn}{{{Al{Ah{Aj{c}}}}AnAn}B`{}}{{{Al{Ah{Aj{c}}}}An}cCh}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{{{Al{Ah{Aj{c}}}}Ane}{{Bf{B``}}}Ch{{Db{c}{{Cj{{Bf{c`}}}}}}}}{AlDd}0{{{Al{{Aj{c}}}}}Df{}}{Ab{{Aj{c}}}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Dh}}}Dh}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}Dh}{Ab{{Al{c}}}{}}{{{Al{Dh}}}{{Al{c}}}{}}{{{Al{AhDh}}}{{Al{Ahc}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{}c{}}{{{Al{AhDh}}}B`}{AbDh}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`{{{Al{Dj}}e}{{Bf{AbAb}}}{}{{Db{{Al{c}}}{{Cj{Bd}}}}}}{{{Al{{Dl{c}}}}c}AbDn}0{{{Al{Dj}}e}Ab{}{{Db{{Al{c}}}{{Cj{Bl}}}}}}``{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{E`{ce}}}}}{{E`{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{E`{ce}}}{EbEd}{}}{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Ah{Ef{ceg}}}}cBl}e{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{cc{}}0{{{Al{{E`{eg}}}}{Al{c}}}{{Cd{{Al{g}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}}{{Cd{{Al{Ahg}}}}}{EbEdEh}{{Ej{c}}EbEd}{}}{{{Al{Ah{E`{eg}}}}{Al{c}}i}{{Al{Ahg}}}{}{{Ej{c}}EbEd}{}{{Cl{{Al{e}}}{{Cj{g}}}}}}{{}Ab}0{{{Al{Ah{E`{ce}}}}ce}{{Al{Ahe}}}{EbEd}{}}{{}c{}}0{{gAb}{{Ef{ceg}}}{EbEdBb}j{{Db{c}{{Cj{e}}}}}}{Ab{{E`{ce}}}{EbEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}0{{{Al{Ah{E`{eg}}}}{Al{c}}k}{{Bf{{Al{Ahg}}i}}}{}{{Ej{c}}EbEd}{}{}{{Cl{{Al{e}}}{{Cj{{Bf{gi}}}}}}}}{{}{{Bf{c}}}{}}0{AlDd}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{}{{El{c}}}Ch}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{Enc{}}{c{{El{c}}}{}}{{{Al{{El{c}}}}}{}Eh}{{{Al{Ah{El{c}}}}}{{Al{Ahc}}}Eh}{{}Ab}{{}c{}}{{{El{c}}}c{}}5{{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{F`F`}F`}0{F`F`}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{{Al{{Fb{c}}}}}cCh}?>{Ab{{Fb{c}}}Ch}{{{Al{{Fb{c}}}}c}B`Ch}=<;{{}Bl}0`{{{Al{{Fd{c}}}}}{{Ff{{Al{{Dl{c}}}}{Al{{Dl{c}}}}}}}{}}:9{{{Al{{Fd{c}}}}}Ab{}}98{{{Al{Ah{Fd{c}}}}}B`{}}8{{{Al{Ah{Fd{c}}}}cAb}Abj}8{{}Ab}{{}c{}}{{{Al{{Fd{c}}}}}Bl{}}05{Ab{{Fd{c}}}{}}{{{Al{Ah{Fd{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Fd{c}}}}c}{{Cd{B`}}}{}}8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`=={{{Al{Fh}}}Bl}>0`{{FjFj}{{Ff{FjFj}}}}{{{Fl{c}}e}{{Fl{c}}}Bb{{Db{c}{{Cj{c}}}}}}{{{Al{{Dl{e}}}}{Cd{Ab}}}{{Fn{c}}}Bb{{G`{{Dl{c}}}}}}{{AbAb{Gb{Ab}}}{{Gb{Ab}}}}{{{Fl{c}}g}{{Bf{{Fl{c}}e}}}Bb{}{{Db{c}{{Cj{{Bf{ce}}}}}}}}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Gd}}}Gd}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Gf}}}F`}{{{Al{Gd}}}F`}{AbB`}{{{Al{Gd}}{Al{Gd}}}Bl}{{Al{Al{c}}}Bl{}}00{{{Al{Gd}}{Al{AhBn}}}C`}{cc{}}{{{Al{Gd}}{Al{Ahc}}}B`Cf}{{F`Ab}Ab}{{}Ab}{{}c{}}{{{Al{Gd}}}Bl}{{{Cd{{Al{{Dl{Gh}}}}}}F`}Gd}{ce{}{}}{Alc{}}{{{Al{Gd}}}c{}}<8{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Gdc{}}``{{{Al{Ah{Gj{c}}}}}{{Al{Ah{Dl{c}}}}}{}}0{{{Al{{Gj{c}}}}}{{Al{{Dl{c}}}}}{}}0{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{{Al{{Gj{c}}}}}{{Gj{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{{}{{Gj{c}}}{}}{{{Al{{Gj{c}}}}}{{Al{e}}}{}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{Ah{Gj{c}}}}}B`{}}{AbB`}{{{Al{{Gj{c}}}}{Al{{Gj{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}00{{{Al{Ah{Gj{c}}}}e}B`{}{{H`{}{{Gn{c}}}}}}{{{Al{{Gj{c}}}}{Al{AhBn}}}C`l}{cc{}}{{{Fn{c}}}{{Gj{c}}}{}}{{{Al{{Dl{c}}}}}{{Gj{c}}}Bb}{e{{Gj{c}}}{}{{H`{}{{Gn{c}}}}}}{{}Ab}{{}c{}}{{{Al{{Gj{c}}}}}Bl{}}{{{Al{{Gj{c}}}}}{{Hb{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Hd{c}}}{}}{{{Al{{Gj{c}}}}}Ab{}}{{}{{Gj{c}}}{}}{{{Al{Ah{Gj{c}}}}}{{Cd{c}}}{}}{{{Al{Ah{Gj{c}}}}c}B`{}}0{{{Al{Ah{Gj{c}}}}Ab}B`{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{Ab{{Gj{c}}}{}}`````````{Al{{Al{c}}}{}}0{{{Al{Ah}}}{{Al{Ahc}}}{}}0{{{Al{{Dl{Hf}}}}Hf}{{Hh{B`}}}}{{{Al{Hj}}}Hj}{{{Al{Hl}}}Hl}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{Ab{{Al{c}}}{}}0{Ab{{Al{Ahc}}}{}}0{AbB`}0{{{Al{Hj}}{Al{Hj}}}Bl}{{Al{Al{c}}}Bl{}}00{Hl{{Ff{HfHf}}}}{{{Al{Hj}}{Al{AhBn}}}C`}{{{Al{Hl}}{Al{AhBn}}}C`}{HfHj}{cc{}}0{{{Al{{Hn{}{{Gn{c}}}}}}Ab}cI`}0{{{Al{Hj}}}Hf}{{}Ab}0`{{{Al{AhHl}}}{{Al{AhF`}}}}{{}c{}}0{{{Al{Ib}}}Bl}{{{Al{Hl}}}Bl}{{{Al{Hj}}}Bl}{{{Al{c}}}Bl{}}{{{Al{Ib}}}Ab}{{}Hj}{{}Hl}{{{Al{Id}}}Ab}{{HfHf}Hl}{{IfF`}Hf}{{{Al{Hj}}}{{Cd{Hf}}}}{Alc{}}0{c{{Bf{e}}}{}{}}0{{}{{Bf{c}}}{}}0{AlDd}0{{{Al{Ih}}Ij}Il}{{{Al{Ih}}}{{Hh{In}}}}0`{J`Bl}{J`{{Fn{c}}}{}}`{J`{{Jb{J`Hf}}}}{J`{{Jb{J`Df}}}}{{J`cg}BlH`{}{{Db{e}{{Cj{Bl}}}}}}{{J`cg}{{Cd{Bd}}}H`{}{{Db{e}{{Cj{{Cd{Bd}}}}}}}}{J`{{Bf{ce}}}{}{}}{J`{{Bf{{Fn{c}}e}}}{}{}}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{Jb{ce}}}}}{{Jb{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Jb{ce}}}AbJd{{Jf{}{{Cj{}}}}JhJjJlj}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{Jb{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}0{{{Al{{Jb{ce}}}}}AbJn{{Jf{}{{Cj{}}}}JhJjJlj}}{c{{Jb{ce}}}{}K`}{{{Al{Ah{Jb{ce}}}}}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}}{{Cd{{Ff{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{g}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}{}}{{{Al{Ah{Jb{ce}}}}Ab}{{Cd{{Ff{e}}}}}{JnKb}{{Jf{}{{Cj{}}}}JhJjJlj}}{{{Al{{Jb{ce}}}}}{{Ff{Ab{Cd{Ab}}}}}Jd{{Jf{}{{Cj{}}}}JhJjJlj}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{Al{{Dl{Gh}}}}}B`}000{{{Al{{Dl{c}}}}}{{Al{Ah{Dl{c}}}}}j}`{{KdKd}Kd}000{{{Al{Kd}}{Al{Kd}}}Bl}0`````{{{Al{Kf}}Kh}{{Bf{B`Ij}}}}{{{Al{Kf}}KhAbAb}{{Bf{B`Ij}}}}{{{Al{Kj}}}Gh}{{{Al{Kf}}}{{Al{{Dl{Gh}}}}}}{{{Al{Kl}}}{{Al{{Dl{Gh}}}}}}{{{Al{Kj}}}{{Al{{Dl{Gh}}}}}}{Al{{Al{c}}}{}}000{{{Al{Ah}}}{{Al{Ahc}}}{}}000{{{Al{Kl}}}Kl}{{{Al{Kn}}}Kn}{{Al{Al{Ahc}}}B`{}}0{AlB`}0{{}Kl}{Ab{{Al{c}}}{}}:0{{{Al{Kl}}}{{Al{c}}}{}}11{Ab{{Al{Ahc}}}{}}000{AbB`}00{{{Al{AhKj}}}B`}1{{{Al{In}}}{{Hh{B`}}}}{{{Al{Kf}}{Al{AhBn}}}{{Bf{B`L`}}}}{{{Al{Kl}}{Al{AhBn}}}C`}{{{Al{Kn}}{Al{AhBn}}}C`}{{{Al{Kj}}{Al{AhBn}}}C`}{cc{}}0{KlKn}11{LbKl}{LbKn}{{{Al{In}}}{{Hh{Kl}}}}{{{Fl{Kj}}}Kl}{c{{Ld{Kn}}}Lf}{{{Al{{Dl{Gh}}}}}Kn}{{{Al{{Dl{Gh}}}}}Kl}{{{Fn{Gh}}}Kl}{{{Fn{Gh}}}Kn}{{}Ab}000{{}c{}}000{{{Al{Kf}}}{{Bf{B`Ij}}}}{Kf{{Bf{LhIj}}}}{c{{Bf{KfIj}}}Lj}>{{{Al{In}}}{{Hh{Kj}}}}{{{Al{In}}Ll}{{Hh{Kj}}}}{{{Al{Kn}}}Ab}{{{Al{Kl}}}B`}{{{Al{AhKn}}{Al{Ah{Dl{Gh}}}}}{{Ld{Ab}}}}{{{Al{AhKn}}Ab}Kl}3{{{Al{AhKf}}AbLn}{{Bf{B`Ij}}}}{{{Al{AhKn}}M`}{{Ld{F`}}}}{{{Al{Kl}}{Gb{Ab}}}Kl}{Alc{}}0{Kl{{Fn{Gh}}}}8{c{{Bf{e}}}{}{}}000{{}{{Bf{c}}}{}}000{AlDd}000{{{Al{Kf}}}{{Bf{B`Ij}}}}```{{{Al{{I`{}{{Mb{c}}}}}}}Bl{}}{{{I`{}{{Mb{c}}}}}c{}}{{{Al{c}}{Al{c}}}Bd{hFh}}0`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{cc{}}{{}Ab}{{{Al{{Md{ceg}}}}}{{Al{{Dl{{Mf{ceg}}}}}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}}{{Al{Ah{Fn{{Mf{ceg}}}}}}}{}{}{}}{{}c{}}{{{Fn{{Mf{ceg}}}}}{{Md{ceg}}}{}{}{}}{{{Al{{Md{ceg}}}}F`}{{Mh{ceg}}}{}{}{}}{{{Al{{Md{ceg}}}}F`}{{Ff{{Mh{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}F`}{{Ff{{Mj{ceg}}Ab}}}{}{}{}}{{{Al{Ah{Md{ceg}}}}F`}{{Mj{ceg}}}{}{}{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}```{{{Al{Ml}}}{{Al{Ih}}}}{{{Al{Ml}}}{{Al{Mn}}}}{{{Al{Ml}}}{{Al{N`}}}}{{{Al{Ml}}}{{Al{{Dl{Gh}}}}}}22{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{Ml}}}Ml}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{Ml}}{Al{Ml}}}Bd}{{Al{Al{c}}}Bd{}}{{}Ml}{Ab{{Al{c}}}{}}{{{Al{Ml}}}{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{c{{Bf{Ml}}}Bh}{AbB`}{{{Al{Ml}}{Al{c}}}Bl{{G`{Mn}}Eh}}{{Al{Al{c}}}Bl{}}00{{{Al{Ml}}{Al{AhBn}}}C`}0{NbMl}{cc{}}{{{Al{Mn}}}Ml}{NdMl}{{{Al{Nb}}}Ml}{cMl{{H`{}{{Gn{{Nf{Mn}}}}}}}}{cMl{{H`{}{{Gn{Nh}}}}}}{cMl{{H`{}{{Gn{{Al{Nh}}}}}}}}{cMl{{H`{}{{Gn{{Al{Mn}}}}}}}}{cMl{{H`{}{{Gn{Nb}}}}}}{cMl{{H`{}{{Gn{{Nj{Mn}}}}}}}}{cMl{{H`{}{{Gn{{Al{Ml}}}}}}}}{cMl{{H`{}{{Gn{Ml}}}}}}::<{{{Al{Ml}}{Al{Ahc}}}B`Cf}{{}Ab}{{}c{}}{MlNb}{{{Al{Ml}}{Al{Ml}}}{{Cd{Bd}}}}{{{Al{Ml}}c}BfCn}{Alc{}}{AlNb}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{Al{{Bf{NdNl}}}}{AlDd}{{{Al{AhMl}}Nh}C`}{{{Al{AhMl}}Nn}C`}{{{Al{AhMl}}{Al{Mn}}}C`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{O`{ce}}}}}{{O`{ce}}}BbBb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}Bd{DnEd}{}}{{Al{Al{c}}}Bd{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}BlEd{}}{{Al{Al{c}}}Bl{}}00{{{Al{{O`{ce}}}}{Al{AhBn}}}C`ll}{cc{}}{{}Ab}{{}c{}}{{{Al{{O`{ce}}}}{Al{{O`{ce}}}}}{{Cd{Bd}}}{DnEd}{}}{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}`````{{{Al{Ob}}}{{Al{{Dl{{Od{c}}}}}}}{}}{{{Al{Of}}e}Al{}{{Oh{{Dl{c}}}}}}{{{Al{AhOf}}e}{{Al{Ah}}}{}{{Oh{{Dl{c}}}}}}{{{Al{Oj}}}Bl}{{{Al{{Dl{Gh}}}}}F`}{{{Al{Ol}}}{{Cd{{Al{c}}}}}{}}0{{{Al{On}}{Gb{Ab}}}On}0{{e{Al{Ah{Fn{Gh}}}}Ab}{{Al{Ah{Dl{g}}}}}{A@`j}{{H`{}{{Gn{c}}}}}{Jhj}}{{{Al{A@b}}{Al{{Dl{{Ff{HfHf}}}}}}{Al{Ah{Fn{Hf}}}}}B`}`{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{{{Al{{A@d{c}}}}}{{A@d{c}}}{}}{{Al{Al{Ahc}}}B`{}}{AlB`}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{{{Al{{A@d{c}}}}}{{Al{c}}}{}}{AbB`}{{{Al{{A@d{c}}}}{Al{{A@d{c}}}}}BlGl}{{Al{Al{c}}}Bl{}}00{{{Al{{A@d{c}}}}{Al{AhBn}}}C`l}{cc{}}{{}{{A@d{c}}}{}}0{{{Al{{A@d{c}}}}}{}{}}{{}Ab}{{}c{}}{{{Al{{A@d{c}}}}}Bl{}}44{Alc{}}{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}``{Al{{Al{c}}}{}}{{{Al{Ah}}}{{Al{Ahc}}}{}}{Ab{{Al{c}}}{}}{Ab{{Al{Ahc}}}{}}{AbB`}{{{Al{A@f}}}F`}?<;876```````54{A@hA@h}{A@jA@j}{{{Al{{A@l{c}}}}}{{A@l{c}}}Bb}{{Al{Al{Ahc}}}B`{}}{AlB`}{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BdA@`}{{Al{Al{c}}}Bd{}}:9{{{Al{{A@l{c}}}}}F`Gf}9{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BlA@n}{{Al{Al{c}}}Bl{}}00{cc{}}{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}BlA@`}0{{{Al{{A@l{c}}}}{Al{Ahe}}}B`AA`Cf}{{}Ab}{{}c{}}{{{Al{{A@l{c}}}}}BlI`}447{{{Al{{A@l{c}}}}{Al{{A@l{c}}}}}{{Cd{Bd}}}A@`}{ce{}{}}{Alc{}}{{{Al{{AAf{}{{AAb{c}}{AAd{e}}}}}}}c{}{}}{{{Al{A@`}}{Al{A@`}}}Bd}{{{Al{A@n}}{Al{A@n}}}Bl}{{{Al{A@`}}{Al{A@`}}}Bl}0{{{Al{AA`}}{Al{Ahc}}}B`Cf}{{{Al{{Dl{AA`}}}}{Al{Ahc}}}B`Cf}223{c{{Bf{e}}}{}{}}{{}{{Bf{c}}}{}}{AlDd}{{{A@l{c}}}eI`{}}`{AAhc{}}``````{{{Al{{AAl{}{{AAj{c}}}}}}g}{{Fn{e}}}{}{}{{Db{{Al{c}}}{{Cj{e}}}}}}{{{AAl{}{{AAj{c}}}}g}{{Fn{e}}}{}{}{{Db{c}{{Cj{e}}}}}}{{{Al{AhAAn}}Abc}B`j}{{{Al{Ah{Fn{c}}}}{Al{Ah{Fn{e}}}}g}B`{}{}{{Db{ce}{{Cj{{Cd{{Ff{ce}}}}}}}}}}{AB`{{Ff{AbAb}}}}{{{Al{AhABb}}c}B`{}}{{{Al{AB`}}}{{Ff{AbAb}}}}{{AbA@j}ABd}","D":"Oj","p":[[17,"Abs"],[10,"AbsDiff",46],[10,"Num",799],[10,"PartialOrd",800],[10,"Copy",801],[10,"Debug",802],[10,"Send",801],[10,"Sync",801],[1,"usize"],[8,"PlHashMap",50],[8,"PlHashSet",50],[0,"mut"],[5,"Arena",68],[1,"reference"],[5,"Node",68],[1,"unit"],[10,"Clone",803],[6,"Ordering",800],[6,"Result",804],[10,"Deserializer",805],[10,"Deserialize",805],[1,"bool"],[5,"Formatter",802],[8,"Result",802],[1,"array"],[6,"Option",806],[10,"Hasher",807],[10,"Default",808],[17,"Output"],[10,"FnOnce",809],[10,"Serializer",810],[10,"Serialize",810],[10,"FnMut",809],[5,"TypeId",811],[1,"u32"],[5,"SyncCounter",135],[10,"ExponentialSearch",156],[1,"slice"],[10,"Ord",800],[5,"FastFixedCache",161],[10,"Hash",807],[10,"Eq",800],[5,"FastCachedFunc",161],[10,"Sized",801],[10,"Borrow",812],[5,"SyncUnsafeCell",198],[1,"never"],[1,"u64"],[5,"LowContentionPool",222],[5,"FixedRingBuffer",239],[1,"tuple"],[10,"IsFloat",262],[10,"FloorDivMod",268],[5,"Arc",813],[5,"Vec",814],[10,"AsRef",815],[5,"Range",816],[5,"BytesHash",274],[10,"DirtyHash",274],[1,"u8"],[5,"UnitVec",307],[10,"PartialEq",800],[17,"Item"],[10,"IntoIterator",817],[5,"Iter",818],[5,"IterMut",818],[8,"IdxSize",351],[8,"PolarsResult",819],[5,"NullableIdxSize",351],[5,"ChunkId",351],[10,"Indexable",351],[10,"IsNull",565],[10,"Bounded",351],[10,"NullCount",351],[10,"ToIdx",351],[5,"Path",820],[5,"Error",821],[6,"PolarsError",819],[5,"File",822],[10,"Itertools",418],[5,"EnumerateIdx",428],[10,"Iterator",823],[10,"Add",824],[10,"FromPrimitive",825],[10,"AddAssign",824],[10,"One",826],[10,"ExactSizeIterator",827],[10,"Zero",826],[10,"DoubleEndedIterator",828],[10,"MinMax",459],[5,"Mmap",466,829],[6,"Advice",830],[5,"MMapSemaphore",466],[5,"MemSlice",466,831],[5,"MemReader",466],[5,"Error",802],[5,"Bytes",832],[8,"Result",821],[10,"Read",833],[5,"MmapMut",829],[10,"MmapAsRawDesc",829],[5,"MmapOptions",829],[5,"RemapOptions",829],[6,"SeekFrom",833],[17,"Inner"],[5,"PartitionedHashMap",572],[5,"HashMap",834],[5,"RawEntryBuilder",834],[5,"RawEntryBuilderMut",834],[5,"PlSmallStr",591],[1,"str"],[5,"OsStr",835],[5,"String",836],[5,"CompactString",837],[6,"Cow",838],[1,"char"],[5,"Box",839],[6,"ToCompactStringError",837],[5,"Arguments",802],[5,"Priority",650],[10,"Slice2Uninit",674],[20,"MaybeUninit",840],[10,"GetSaferUnchecked",674],[10,"SliceIndex",841],[10,"SortedSlice",674],[10,"Extrema",674],[10,"SliceAble",674],[10,"TotalOrd",732],[5,"ThreadPool",842],[5,"SyncPtr",690],[5,"MemInfo",718],[1,"f32"],[1,"f64"],[5,"TotalOrdWrap",732],[10,"TotalEq",732],[10,"TotalHash",732],[17,"TotalOrdItem"],[17,"SourceItem"],[10,"ToTotalOrd",732],[10,"UnwrapUncheckedRelease",783],[17,"ItemIn"],[10,"ConvertVec",785],[10,"ResizeFaster",785],[10,"IntoRawParts",785],[10,"PushUnchecked",785],[10,"CapacityByFactor",785],[10,"InitHashMaps",50],[8,"PlIndexMap",50],[8,"PlIndexSet",50]],"r":[[0,351],[1,351],[469,831],[470,829]],"b":[[332,"impl-From%3CVec%3CT%3E%3E-for-UnitVec%3CT%3E"],[333,"impl-From%3C%26%5BT%5D%3E-for-UnitVec%3CT%3E"],[594,"impl-AsRef%3CPath%3E-for-PlSmallStr"],[595,"impl-AsRef%3Cstr%3E-for-PlSmallStr"],[596,"impl-AsRef%3COsStr%3E-for-PlSmallStr"],[597,"impl-AsRef%3C%5Bu8%5D%3E-for-PlSmallStr"],[617,"impl-Debug-for-PlSmallStr"],[618,"impl-Display-for-PlSmallStr"],[619,"impl-From%3CString%3E-for-PlSmallStr"],[621,"impl-From%3C%26str%3E-for-PlSmallStr"],[622,"impl-From%3CCompactString%3E-for-PlSmallStr"],[623,"impl-From%3C%26String%3E-for-PlSmallStr"],[624,"impl-FromIterator%3CCow%3C\'a,+str%3E%3E-for-PlSmallStr"],[625,"impl-FromIterator%3Cchar%3E-for-PlSmallStr"],[626,"impl-FromIterator%3C%26char%3E-for-PlSmallStr"],[627,"impl-FromIterator%3C%26str%3E-for-PlSmallStr"],[628,"impl-FromIterator%3CString%3E-for-PlSmallStr"],[629,"impl-FromIterator%3CBox%3Cstr%3E%3E-for-PlSmallStr"],[630,"impl-FromIterator%3C%26PlSmallStr%3E-for-PlSmallStr"],[631,"impl-FromIterator%3CPlSmallStr%3E-for-PlSmallStr"]],"c":"OjAAAAAAAAA=","e":"OzAAAAEAAKICTwAAAAgACgBbAGgAAABqAAEAbQACAHIAFQCJAAoAlQAAAJgABgChAAAAowAPALUABQC9AAkAyAABAMsAAgDPAAAA0wAAANgADADmAAEA6QAGAPIABgD7AAAA/QADAAMBAwAIAQoAFAEPACUBAgApAQsANgEVAE0BAwBSAQYAWgEnAIQBAACGAQQAjQEVAKQBAACmAQQArgEJALkBAAC7AQIAvwEHAMwBCADaASYAAwIAAAgCAgAPAgMAGgIDAB8CAgAjAgAAJQIBACgCDAA2AgQAPQIFAEQCAgBIAgkAUwIZAG4CDwB/AgsAjAIOAJwCAACeAgoAqwIEALECAAC0AgYAvAIFAMMCAwDIAgAAygIFANECBADYAgAA2gIDAOICAwDoAgwA9gIDAPsCFQASAwQAGAMCABwDAAAeAwEA"}]]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
//{"start":39,"fragment_lengths":[391115,194414,51106,81344,9273,3376,8569,26322]}